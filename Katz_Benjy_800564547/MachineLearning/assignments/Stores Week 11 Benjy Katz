{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1SrEO_O3Hf6WmRVBNl-qY_uIeYpaxnnWF","timestamp":1701098926927},{"file_id":"1WjNm0Z_Jw1VFneqlCQ2eU4-67ViE2QKy","timestamp":1667830511170},{"file_id":"1rL6H5r_dJqymXzHjLR56G2meavst1_xI","timestamp":1636993839456}],"collapsed_sections":["49dlwUjmldUU","sY4mSVVIlbZs"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"49dlwUjmldUU"},"source":["## Imports"]},{"cell_type":"code","metadata":{"id":"txrwd7HecRFK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116040492,"user_tz":300,"elapsed":16990,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"3a1ed639-a7bb-4bfd-99cf-5f786bca04f7"},"source":["!pip uninstall scikit-learn -y\n","!pip install -U scikit-learn"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Found existing installation: scikit-learn 1.2.2\n","Uninstalling scikit-learn-1.2.2:\n","  Successfully uninstalled scikit-learn-1.2.2\n","Collecting scikit-learn\n","  Downloading scikit_learn-1.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.8/10.8 MB\u001b[0m \u001b[31m24.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<2.0,>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.23.5)\n","Requirement already satisfied: scipy>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.11.3)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.2.0)\n","Installing collected packages: scikit-learn\n","Successfully installed scikit-learn-1.3.2\n"]}]},{"cell_type":"code","metadata":{"id":"8TQiG4V1hQxp","executionInfo":{"status":"ok","timestamp":1701116042434,"user_tz":300,"elapsed":1945,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"source":["from sklearn.model_selection import train_test_split\n","import numpy as np\n","import pandas as pd\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","\n","np.random.seed(314159)"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sY4mSVVIlbZs"},"source":["## Setup & Download"]},{"cell_type":"code","metadata":{"id":"njgmlxOnhYw0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116062260,"user_tz":300,"elapsed":15873,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"780f71b4-68a0-44d0-cb2c-f135ebd1c1b3"},"source":["!pip install kaggle --upgrade\n","print (\"writing kaggle\")\n","!echo \"{\\\"username\\\":\\\"seinberg\\\",\\\"key\\\":\\\"15a6521926e0c1ee0b073c06b3eded1e\\\"}\" > kaggle.json\n","!sudo mkdir -p ~/.kaggle\n","!sudo cp /content/kaggle.json ~/.kaggle/kaggle.json\n","print (\"got kaggle json copied\")\n","!chmod 600 /root/.kaggle/kaggle.json\n","!kaggle --version\n","!kaggle competitions download -c rossmann-store-sales\n","# unzip the store sales data\n","!unzip /content/rossmann-store-sales.zip"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.16)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2023.7.22)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.31.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.66.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.1)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.0.7)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.1.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->kaggle) (0.5.1)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.4)\n","writing kaggle\n","got kaggle json copied\n","Kaggle API 1.5.16\n","Downloading rossmann-store-sales.zip to /content\n"," 72% 5.00M/6.99M [00:00<00:00, 45.8MB/s]\n","100% 6.99M/6.99M [00:00<00:00, 61.0MB/s]\n","Archive:  /content/rossmann-store-sales.zip\n","  inflating: sample_submission.csv   \n","  inflating: store.csv               \n","  inflating: test.csv                \n","  inflating: train.csv               \n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2otGvlCZnJgJ","executionInfo":{"status":"ok","timestamp":1701116062260,"user_tz":300,"elapsed":22,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nD2a6rtdeEYL"},"source":["# EDA"]},{"cell_type":"markdown","metadata":{"id":"QEeRzBiYfTJt"},"source":["## Class EDA exploration\n"]},{"cell_type":"markdown","source":["### Load dataframes"],"metadata":{"id":"nCKLzWM7fddQ"}},{"cell_type":"code","metadata":{"id":"z7dVNwFcfRoK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116078630,"user_tz":300,"elapsed":3974,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"743355b8-7219-4e90-99a8-90db03710806"},"source":["all_train_df = pd.read_csv('/content/train.csv')\n","\n","train_df = pd.read_csv('/content/train.csv', parse_dates=['Date'])\n","store_df = pd.read_csv('/content/store.csv')"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-4bc2d0a42043>:1: DtypeWarning: Columns (7) have mixed types. Specify dtype option on import or set low_memory=False.\n","  all_train_df = pd.read_csv('/content/train.csv')\n","<ipython-input-5-4bc2d0a42043>:3: DtypeWarning: Columns (7) have mixed types. Specify dtype option on import or set low_memory=False.\n","  train_df = pd.read_csv('/content/train.csv', parse_dates=['Date'])\n"]}]},{"cell_type":"markdown","source":["### Show some basic information about the Rossmnan dataset"],"metadata":{"id":"YgipBxGRfhTK"}},{"cell_type":"markdown","source":["What's in the Training data and the Store data?\n","\n","*   what are the keys?\n","*   what is the salient bit of information?\n","*   what are we trying to predict?\n","*   why do we care about the promo, open, holiday bits?\n"],"metadata":{"id":"TTCYVlgMf4D2"}},{"cell_type":"code","metadata":{"id":"8UQfZyZNfnF6","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1701116078630,"user_tz":300,"elapsed":32,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"fd990db9-23d9-457b-9698-710e5669d8e4"},"source":["train_df.head()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Store  DayOfWeek       Date  Sales  Customers  Open  Promo StateHoliday  \\\n","0      1          5 2015-07-31   5263        555     1      1            0   \n","1      2          5 2015-07-31   6064        625     1      1            0   \n","2      3          5 2015-07-31   8314        821     1      1            0   \n","3      4          5 2015-07-31  13995       1498     1      1            0   \n","4      5          5 2015-07-31   4822        559     1      1            0   \n","\n","   SchoolHoliday  \n","0              1  \n","1              1  \n","2              1  \n","3              1  \n","4              1  "],"text/html":["\n","  <div id=\"df-2fa3442c-4251-480f-a010-9590bf787a9c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>DayOfWeek</th>\n","      <th>Date</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>StateHoliday</th>\n","      <th>SchoolHoliday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>5263</td>\n","      <td>555</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>6064</td>\n","      <td>625</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>8314</td>\n","      <td>821</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>13995</td>\n","      <td>1498</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>4822</td>\n","      <td>559</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fa3442c-4251-480f-a010-9590bf787a9c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2fa3442c-4251-480f-a010-9590bf787a9c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2fa3442c-4251-480f-a010-9590bf787a9c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06acede1-52c9-440f-8470-0f6ea884a5e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06acede1-52c9-440f-8470-0f6ea884a5e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06acede1-52c9-440f-8470-0f6ea884a5e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["So it looks like the key for training data is proably some combination of Store/DayOfWeek or Store/Date.\n","\n","For Store, I hope the ID is just Store :D But what else is here?\n","\n","\n","*   what's this about competition?\n","*   open since year? who cares?\n","*   promos, intervals, and so on? what is this stuff?\n","\n"],"metadata":{"id":"VKv6mNAumCsw"}},{"cell_type":"code","metadata":{"id":"O4NC8gVFfofW","colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"status":"ok","timestamp":1701116078631,"user_tz":300,"elapsed":29,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"bc791085-721d-44e8-db11-77ed1308a42b"},"source":["store_df.head()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Store StoreType Assortment  CompetitionDistance  CompetitionOpenSinceMonth  \\\n","0      1         c          a               1270.0                        9.0   \n","1      2         a          a                570.0                       11.0   \n","2      3         a          a              14130.0                       12.0   \n","3      4         c          c                620.0                        9.0   \n","4      5         a          a              29910.0                        4.0   \n","\n","   CompetitionOpenSinceYear  Promo2  Promo2SinceWeek  Promo2SinceYear  \\\n","0                    2008.0       0              NaN              NaN   \n","1                    2007.0       1             13.0           2010.0   \n","2                    2006.0       1             14.0           2011.0   \n","3                    2009.0       0              NaN              NaN   \n","4                    2015.0       0              NaN              NaN   \n","\n","     PromoInterval  \n","0              NaN  \n","1  Jan,Apr,Jul,Oct  \n","2  Jan,Apr,Jul,Oct  \n","3              NaN  \n","4              NaN  "],"text/html":["\n","  <div id=\"df-e7559e24-fb65-432b-b95f-ff02295f8d1d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>StoreType</th>\n","      <th>Assortment</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","      <th>PromoInterval</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>a</td>\n","      <td>a</td>\n","      <td>570.0</td>\n","      <td>11.0</td>\n","      <td>2007.0</td>\n","      <td>1</td>\n","      <td>13.0</td>\n","      <td>2010.0</td>\n","      <td>Jan,Apr,Jul,Oct</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>a</td>\n","      <td>a</td>\n","      <td>14130.0</td>\n","      <td>12.0</td>\n","      <td>2006.0</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>2011.0</td>\n","      <td>Jan,Apr,Jul,Oct</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>c</td>\n","      <td>c</td>\n","      <td>620.0</td>\n","      <td>9.0</td>\n","      <td>2009.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>a</td>\n","      <td>a</td>\n","      <td>29910.0</td>\n","      <td>4.0</td>\n","      <td>2015.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7559e24-fb65-432b-b95f-ff02295f8d1d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7559e24-fb65-432b-b95f-ff02295f8d1d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7559e24-fb65-432b-b95f-ff02295f8d1d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9f90568d-147d-47c3-8a61-28f9cef45e8e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f90568d-147d-47c3-8a61-28f9cef45e8e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9f90568d-147d-47c3-8a61-28f9cef45e8e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["store_df.Store.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1GN697PLRh1m","executionInfo":{"status":"ok","timestamp":1701116078631,"user_tz":300,"elapsed":27,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"238321b0-980a-435c-dc37-1f8340efb4b9"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1115"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Are they all unique rows?"],"metadata":{"id":"WngAfK7AmRvS"}},{"cell_type":"code","metadata":{"id":"eanhA1TqgU4F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116078631,"user_tz":300,"elapsed":26,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"2fd31dca-40ef-4b9f-88d9-16d261a4cb8b"},"source":["set(store_df.Store) - set(store_df.Store.unique())"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["set()"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["### Merged dataset\n","Let's merge the dataset. What should we join / merge the datasets on?"],"metadata":{"id":"K_4ptOS6f71T"}},{"cell_type":"code","source":["merged_df = train_df.merge(store_df, left_on='Store', right_on='Store')"],"metadata":{"id":"q3lf8HcCkeGG","executionInfo":{"status":"ok","timestamp":1701116079007,"user_tz":300,"elapsed":401,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["What's it look like merged? How would you characterize each row?"],"metadata":{"id":"13_XLI62ko5w"}},{"cell_type":"code","metadata":{"id":"Qu9vB3t-fjpM","colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"status":"ok","timestamp":1701116079009,"user_tz":300,"elapsed":11,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"09241b53-1480-4051-dff7-40e2b48b68e6"},"source":["merged_df.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Store  DayOfWeek       Date  Sales  Customers  Open  Promo StateHoliday  \\\n","0      1          5 2015-07-31   5263        555     1      1            0   \n","1      1          4 2015-07-30   5020        546     1      1            0   \n","2      1          3 2015-07-29   4782        523     1      1            0   \n","3      1          2 2015-07-28   5011        560     1      1            0   \n","4      1          1 2015-07-27   6102        612     1      1            0   \n","\n","   SchoolHoliday StoreType Assortment  CompetitionDistance  \\\n","0              1         c          a               1270.0   \n","1              1         c          a               1270.0   \n","2              1         c          a               1270.0   \n","3              1         c          a               1270.0   \n","4              1         c          a               1270.0   \n","\n","   CompetitionOpenSinceMonth  CompetitionOpenSinceYear  Promo2  \\\n","0                        9.0                    2008.0       0   \n","1                        9.0                    2008.0       0   \n","2                        9.0                    2008.0       0   \n","3                        9.0                    2008.0       0   \n","4                        9.0                    2008.0       0   \n","\n","   Promo2SinceWeek  Promo2SinceYear PromoInterval  \n","0              NaN              NaN           NaN  \n","1              NaN              NaN           NaN  \n","2              NaN              NaN           NaN  \n","3              NaN              NaN           NaN  \n","4              NaN              NaN           NaN  "],"text/html":["\n","  <div id=\"df-e2aec3f4-796b-4f96-85ef-ebf166224ef1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>DayOfWeek</th>\n","      <th>Date</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>StateHoliday</th>\n","      <th>SchoolHoliday</th>\n","      <th>StoreType</th>\n","      <th>Assortment</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","      <th>PromoInterval</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>5263</td>\n","      <td>555</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2015-07-30</td>\n","      <td>5020</td>\n","      <td>546</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2015-07-29</td>\n","      <td>4782</td>\n","      <td>523</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2015-07-28</td>\n","      <td>5011</td>\n","      <td>560</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2015-07-27</td>\n","      <td>6102</td>\n","      <td>612</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2aec3f4-796b-4f96-85ef-ebf166224ef1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2aec3f4-796b-4f96-85ef-ebf166224ef1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2aec3f4-796b-4f96-85ef-ebf166224ef1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2b323856-cdf6-4d99-b1ce-0ae7ef964f85\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b323856-cdf6-4d99-b1ce-0ae7ef964f85')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2b323856-cdf6-4d99-b1ce-0ae7ef964f85 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["What date range are we talking about?"],"metadata":{"id":"ue0oXWCesJjL"}},{"cell_type":"code","metadata":{"id":"hD2h9EZZgiT8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116079009,"user_tz":300,"elapsed":9,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"bc47f464-2b29-4f14-f03d-ec33d8bc3a7a"},"source":["train_df.Date.describe()"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-c004e6099210>:1: FutureWarning: Treating datetime data as categorical rather than numeric in `.describe` is deprecated and will be removed in a future version of pandas. Specify `datetime_is_numeric=True` to silence this warning and adopt the future behavior now.\n","  train_df.Date.describe()\n"]},{"output_type":"execute_result","data":{"text/plain":["count                 1017209\n","unique                    942\n","top       2015-07-31 00:00:00\n","freq                     1115\n","first     2013-01-01 00:00:00\n","last      2015-07-31 00:00:00\n","Name: Date, dtype: object"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["What about the types of stores?"],"metadata":{"id":"Yymt1BMTsM71"}},{"cell_type":"code","source":["store_df.StoreType.unique()"],"metadata":{"id":"v1jngAKUsQ6b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116079010,"user_tz":300,"elapsed":8,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"57cd388f-bcad-4594-c5a3-779cbfed6b51"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['c', 'a', 'd', 'b'], dtype=object)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"TkYSG6hjgyY_","colab":{"base_uri":"https://localhost:8080/","height":539},"executionInfo":{"status":"ok","timestamp":1701116079298,"user_tz":300,"elapsed":296,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"521ba00d-6b05-4487-81da-407394aaee7f"},"source":["store_types = store_df['StoreType'].value_counts().sort_values()\n","ax= store_types.plot.pie(autopct=\"%.1f%%\",startangle=180, figsize=(6,6))\n","ax.set_title('Store Type')"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Store Type')"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Let's see some averages of each StoreType to see if anything jumps out at us."],"metadata":{"id":"9OXoilStscrU"}},{"cell_type":"code","metadata":{"id":"ZMfQLit4g7x1","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"ok","timestamp":1701116079570,"user_tz":300,"elapsed":277,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"c371542a-1571-49df-e4c9-3b8690e77381"},"source":["merged_df.groupby(by=['StoreType']).mean()"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-1f0a459c2eb5>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  merged_df.groupby(by=['StoreType']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["                Store  DayOfWeek         Sales    Customers      Open  \\\n","StoreType                                                               \n","a          560.079706   3.998278   5738.179710   659.034880  0.828598   \n","b          562.045610   3.998042  10058.837334  1987.720846  0.983133   \n","c          608.225402   3.998144   5723.629246   673.265894  0.825621   \n","d          533.561864   3.998552   5641.819243   501.434892  0.826987   \n","\n","              Promo  SchoolHoliday  CompetitionDistance  \\\n","StoreType                                                 \n","a          0.381606       0.178405          5166.453217   \n","b          0.381933       0.184207          1066.058117   \n","c          0.381789       0.180159          3516.699503   \n","d          0.381213       0.178130          6959.874812   \n","\n","           CompetitionOpenSinceMonth  CompetitionOpenSinceYear    Promo2  \\\n","StoreType                                                                  \n","a                           7.176508               2008.598584  0.467501   \n","b                           6.666667               2007.777778  0.285913   \n","c                           7.048265               2008.506842  0.498816   \n","d                           7.426956               2009.004084  0.570473   \n","\n","           Promo2SinceWeek  Promo2SinceYear  \n","StoreType                                    \n","a                23.658601      2011.861536  \n","b                22.274856      2012.791869  \n","c                21.420903      2011.541563  \n","d                23.438300      2011.650066  "],"text/html":["\n","  <div id=\"df-58d3f9f2-e462-4dfa-a7c8-a245b8850811\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>DayOfWeek</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","    </tr>\n","    <tr>\n","      <th>StoreType</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>a</th>\n","      <td>560.079706</td>\n","      <td>3.998278</td>\n","      <td>5738.179710</td>\n","      <td>659.034880</td>\n","      <td>0.828598</td>\n","      <td>0.381606</td>\n","      <td>0.178405</td>\n","      <td>5166.453217</td>\n","      <td>7.176508</td>\n","      <td>2008.598584</td>\n","      <td>0.467501</td>\n","      <td>23.658601</td>\n","      <td>2011.861536</td>\n","    </tr>\n","    <tr>\n","      <th>b</th>\n","      <td>562.045610</td>\n","      <td>3.998042</td>\n","      <td>10058.837334</td>\n","      <td>1987.720846</td>\n","      <td>0.983133</td>\n","      <td>0.381933</td>\n","      <td>0.184207</td>\n","      <td>1066.058117</td>\n","      <td>6.666667</td>\n","      <td>2007.777778</td>\n","      <td>0.285913</td>\n","      <td>22.274856</td>\n","      <td>2012.791869</td>\n","    </tr>\n","    <tr>\n","      <th>c</th>\n","      <td>608.225402</td>\n","      <td>3.998144</td>\n","      <td>5723.629246</td>\n","      <td>673.265894</td>\n","      <td>0.825621</td>\n","      <td>0.381789</td>\n","      <td>0.180159</td>\n","      <td>3516.699503</td>\n","      <td>7.048265</td>\n","      <td>2008.506842</td>\n","      <td>0.498816</td>\n","      <td>21.420903</td>\n","      <td>2011.541563</td>\n","    </tr>\n","    <tr>\n","      <th>d</th>\n","      <td>533.561864</td>\n","      <td>3.998552</td>\n","      <td>5641.819243</td>\n","      <td>501.434892</td>\n","      <td>0.826987</td>\n","      <td>0.381213</td>\n","      <td>0.178130</td>\n","      <td>6959.874812</td>\n","      <td>7.426956</td>\n","      <td>2009.004084</td>\n","      <td>0.570473</td>\n","      <td>23.438300</td>\n","      <td>2011.650066</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58d3f9f2-e462-4dfa-a7c8-a245b8850811')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-58d3f9f2-e462-4dfa-a7c8-a245b8850811 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-58d3f9f2-e462-4dfa-a7c8-a245b8850811');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aad7ce27-d29e-4262-b056-184067b432ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aad7ce27-d29e-4262-b056-184067b432ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aad7ce27-d29e-4262-b056-184067b432ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["How about the average sale per customer at the different store types. What does this tell us?"],"metadata":{"id":"v8toPpEcsnei"}},{"cell_type":"code","metadata":{"id":"WjVHUuqnimsK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116079570,"user_tz":300,"elapsed":9,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"54f7d603-e2ec-41fa-f15c-c4f650e5aea3"},"source":["# Ratio of sales to customer by store type:\n","store_avgs = merged_df.groupby(by=['StoreType']).mean()\n","store_avgs.Sales/store_avgs.Customers"],"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-3e3f6d8774ef>:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  store_avgs = merged_df.groupby(by=['StoreType']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["StoreType\n","a     8.706944\n","b     5.060488\n","c     8.501291\n","d    11.251350\n","dtype: float64"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["What about a histogram of sales. How do they distribute?"],"metadata":{"id":"g8r2E0KGs0NX"}},{"cell_type":"code","source":["merged_df['Sales'].hist()"],"metadata":{"id":"TVroIbi6sx0R","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1701116079794,"user_tz":300,"elapsed":231,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"afb376f5-5c69-4709-8634-7322366cad2a"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Ehhhh, not terribly informative with how coarse it is. Let's make a better one. If we put it in log scale and add more points along the axis it's a bit easier to read."],"metadata":{"id":"_2UIEwSbtAbW"}},{"cell_type":"code","metadata":{"id":"5c8I4EDIjQlD","colab":{"base_uri":"https://localhost:8080/","height":505},"executionInfo":{"status":"ok","timestamp":1701116081790,"user_tz":300,"elapsed":2000,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"43837549-9856-4329-ec72-aecf88d39431"},"source":["# log scale hist:\n","fig, ax = plt.subplots(figsize=(15,5))\n","g = sns.histplot(data=merged_df, x='Sales',ax=ax)\n","ax.set_yscale('log')\n","ax.set_title('Sales histogram (log scale)')"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Sales histogram (log scale)')"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Can we do it by Store Type? That might be interesting"],"metadata":{"id":"aSVB6F-ptI0k"}},{"cell_type":"code","source":["# TODO: histogram by store type"],"metadata":{"id":"GPpy8mr-tHFo","executionInfo":{"status":"ok","timestamp":1701116081791,"user_tz":300,"elapsed":12,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["What about sales by the day of the week? Maybe that'll show us something interesting!"],"metadata":{"id":"CVi3Jdadtca3"}},{"cell_type":"code","metadata":{"id":"nnE6E-iLkI7U","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"ok","timestamp":1701116081791,"user_tz":300,"elapsed":10,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"a54b6970-00c4-43de-b849-144a4a8475f0"},"source":["# Day of week analysis\n","day_of_week = merged_df.groupby(by=['DayOfWeek']).mean()\n","\n","day_of_week"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-408178418a53>:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  day_of_week = merged_df.groupby(by=['DayOfWeek']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["                Store        Sales   Customers      Open     Promo  \\\n","DayOfWeek                                                            \n","1          558.427195  7809.044510  813.065791  0.950459  0.537276   \n","2          558.437830  7005.244467  760.984615  0.988309  0.532596   \n","3          558.440778  6555.884138  721.639666  0.974400  0.532592   \n","4          558.423930  6247.575913  697.541486  0.923199  0.531935   \n","5          558.423930  6723.274305  743.150742  0.950598  0.531935   \n","6          558.427195  5847.562599  657.112237  0.995357  0.000000   \n","7          558.427195   204.183189   35.786817  0.024826  0.000000   \n","\n","           SchoolHoliday  CompetitionDistance  CompetitionOpenSinceMonth  \\\n","DayOfWeek                                                                  \n","1               0.235335          5429.907450                   7.222884   \n","2               0.251229          5430.739645                   7.222788   \n","3               0.237778          5430.702472                   7.222826   \n","4               0.238246          5429.716291                   7.222898   \n","5               0.248449          5429.716291                   7.222898   \n","6               0.018821          5429.907450                   7.222884   \n","7               0.018821          5429.907450                   7.222884   \n","\n","           CompetitionOpenSinceYear    Promo2  Promo2SinceWeek  \\\n","DayOfWeek                                                        \n","1                       2008.690085  0.500643        23.271385   \n","2                       2008.690728  0.500281        23.260837   \n","3                       2008.690761  0.500278        23.260837   \n","4                       2008.689923  0.500730        23.273919   \n","5                       2008.689923  0.500730        23.273919   \n","6                       2008.690085  0.500643        23.271385   \n","7                       2008.690085  0.500643        23.271385   \n","\n","           Promo2SinceYear  \n","DayOfWeek                   \n","1              2011.752850  \n","2              2011.752501  \n","3              2011.752501  \n","4              2011.752934  \n","5              2011.752934  \n","6              2011.752850  \n","7              2011.752850  "],"text/html":["\n","  <div id=\"df-d9dd0ced-6fb7-447c-b424-050d5fa77b0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","    </tr>\n","    <tr>\n","      <th>DayOfWeek</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>558.427195</td>\n","      <td>7809.044510</td>\n","      <td>813.065791</td>\n","      <td>0.950459</td>\n","      <td>0.537276</td>\n","      <td>0.235335</td>\n","      <td>5429.907450</td>\n","      <td>7.222884</td>\n","      <td>2008.690085</td>\n","      <td>0.500643</td>\n","      <td>23.271385</td>\n","      <td>2011.752850</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>558.437830</td>\n","      <td>7005.244467</td>\n","      <td>760.984615</td>\n","      <td>0.988309</td>\n","      <td>0.532596</td>\n","      <td>0.251229</td>\n","      <td>5430.739645</td>\n","      <td>7.222788</td>\n","      <td>2008.690728</td>\n","      <td>0.500281</td>\n","      <td>23.260837</td>\n","      <td>2011.752501</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>558.440778</td>\n","      <td>6555.884138</td>\n","      <td>721.639666</td>\n","      <td>0.974400</td>\n","      <td>0.532592</td>\n","      <td>0.237778</td>\n","      <td>5430.702472</td>\n","      <td>7.222826</td>\n","      <td>2008.690761</td>\n","      <td>0.500278</td>\n","      <td>23.260837</td>\n","      <td>2011.752501</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>558.423930</td>\n","      <td>6247.575913</td>\n","      <td>697.541486</td>\n","      <td>0.923199</td>\n","      <td>0.531935</td>\n","      <td>0.238246</td>\n","      <td>5429.716291</td>\n","      <td>7.222898</td>\n","      <td>2008.689923</td>\n","      <td>0.500730</td>\n","      <td>23.273919</td>\n","      <td>2011.752934</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>558.423930</td>\n","      <td>6723.274305</td>\n","      <td>743.150742</td>\n","      <td>0.950598</td>\n","      <td>0.531935</td>\n","      <td>0.248449</td>\n","      <td>5429.716291</td>\n","      <td>7.222898</td>\n","      <td>2008.689923</td>\n","      <td>0.500730</td>\n","      <td>23.273919</td>\n","      <td>2011.752934</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>558.427195</td>\n","      <td>5847.562599</td>\n","      <td>657.112237</td>\n","      <td>0.995357</td>\n","      <td>0.000000</td>\n","      <td>0.018821</td>\n","      <td>5429.907450</td>\n","      <td>7.222884</td>\n","      <td>2008.690085</td>\n","      <td>0.500643</td>\n","      <td>23.271385</td>\n","      <td>2011.752850</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>558.427195</td>\n","      <td>204.183189</td>\n","      <td>35.786817</td>\n","      <td>0.024826</td>\n","      <td>0.000000</td>\n","      <td>0.018821</td>\n","      <td>5429.907450</td>\n","      <td>7.222884</td>\n","      <td>2008.690085</td>\n","      <td>0.500643</td>\n","      <td>23.271385</td>\n","      <td>2011.752850</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9dd0ced-6fb7-447c-b424-050d5fa77b0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9dd0ced-6fb7-447c-b424-050d5fa77b0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9dd0ced-6fb7-447c-b424-050d5fa77b0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-689223af-5a08-43fb-96ab-08528de454f8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-689223af-5a08-43fb-96ab-08528de454f8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-689223af-5a08-43fb-96ab-08528de454f8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["But aren't stores only open on certain days? Can we do better?"],"metadata":{"id":"Xn9epj44tmXX"}},{"cell_type":"code","source":["day_of_week_open = merged_df.groupby(by=['DayOfWeek', 'Open']).mean()\n","day_of_week_open"],"metadata":{"id":"VGhx_Udctpn5","colab":{"base_uri":"https://localhost:8080/","height":575},"executionInfo":{"status":"ok","timestamp":1701116081981,"user_tz":300,"elapsed":197,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"df5464a2-e597-48d0-f9c6-5e7f5cd9177c"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-682ee279ef5c>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  day_of_week_open = merged_df.groupby(by=['DayOfWeek', 'Open']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["                     Store        Sales    Customers     Promo  SchoolHoliday  \\\n","DayOfWeek Open                                                                  \n","1         0     558.582566     0.000000     0.000000  0.072106       0.438075   \n","          1     558.419097  8216.073074   855.444984  0.561522       0.224767   \n","2         0     563.515561     0.000000     0.000000  0.271286       0.687610   \n","          1     558.377762  7088.113656   769.986753  0.535687       0.246067   \n","3         0     564.547868     0.000000     0.000000  0.354787       0.609547   \n","          1     558.280331  6728.122978   740.598876  0.537263       0.228011   \n","4         0     558.489867     0.000000     0.000000  0.308633       0.407642   \n","          1     558.418444  6767.310159   755.569784  0.550511       0.224154   \n","5         0     560.638584     0.000000     0.000000  0.752949       0.619847   \n","          1     558.308836  7072.677012   781.771639  0.520449       0.229147   \n","6         0     576.982143     0.000000     0.000000  0.000000       0.007440   \n","          1     558.340641  5874.840238   660.177526  0.000000       0.018874   \n","7         0     558.033804     0.000000     0.000000  0.000000       0.018719   \n","          1     573.880045  8224.723908  1441.532424  0.000000       0.022822   \n","\n","                CompetitionDistance  CompetitionOpenSinceMonth  \\\n","DayOfWeek Open                                                   \n","1         0             5153.409313                   7.203186   \n","          1             5444.318492                   7.223912   \n","2         0             5434.555621                   7.081911   \n","          1             5430.694492                   7.224470   \n","3         0             5544.956966                   7.194542   \n","          1             5427.701827                   7.223576   \n","4         0             5193.926430                   7.188031   \n","          1             5449.333696                   7.225756   \n","5         0             5437.642966                   7.204643   \n","          1             5429.304305                   7.223846   \n","6         0             4417.366071                   6.772834   \n","          1             5434.643101                   7.224839   \n","7         0             5297.351397                   7.219963   \n","          1            10622.983579                   7.354478   \n","\n","                CompetitionOpenSinceYear    Promo2  Promo2SinceWeek  \\\n","DayOfWeek Open                                                        \n","1         0                  2008.602205  0.526639        23.670021   \n","          1                  2008.694672  0.499288        23.249469   \n","2         0                  2008.581058  0.550793        23.216418   \n","          1                  2008.692037  0.499684        23.261417   \n","3         0                  2008.704873  0.501207        23.209738   \n","          1                  2008.690387  0.500254        23.262182   \n","4         0                  2008.536890  0.539773        23.746940   \n","          1                  2008.702465  0.497482        23.231223   \n","5         0                  2008.633272  0.507287        23.016689   \n","          1                  2008.692865  0.500389        23.287471   \n","6         0                  2008.189696  0.529762        20.949438   \n","          1                  2008.692259  0.500507        23.282849   \n","7         0                  2008.667871  0.506267        23.326508   \n","          1                  2009.690765  0.279711        19.352239   \n","\n","                Promo2SinceYear  \n","DayOfWeek Open                   \n","1         0         2011.775953  \n","          1         2011.751580  \n","2         0         2011.909382  \n","          1         2011.750455  \n","3         0         2011.790262  \n","          1         2011.751507  \n","4         0         2011.773569  \n","          1         2011.751071  \n","5         0         2011.770451  \n","          1         2011.752011  \n","6         0         2012.081461  \n","          1         2011.751227  \n","7         0         2011.736876  \n","          1         2012.888557  "],"text/html":["\n","  <div id=\"df-eff6deae-774a-427d-9d82-d2b5c3a4b853\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Store</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","    </tr>\n","    <tr>\n","      <th>DayOfWeek</th>\n","      <th>Open</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>0</th>\n","      <td>558.582566</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.072106</td>\n","      <td>0.438075</td>\n","      <td>5153.409313</td>\n","      <td>7.203186</td>\n","      <td>2008.602205</td>\n","      <td>0.526639</td>\n","      <td>23.670021</td>\n","      <td>2011.775953</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.419097</td>\n","      <td>8216.073074</td>\n","      <td>855.444984</td>\n","      <td>0.561522</td>\n","      <td>0.224767</td>\n","      <td>5444.318492</td>\n","      <td>7.223912</td>\n","      <td>2008.694672</td>\n","      <td>0.499288</td>\n","      <td>23.249469</td>\n","      <td>2011.751580</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2</th>\n","      <th>0</th>\n","      <td>563.515561</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.271286</td>\n","      <td>0.687610</td>\n","      <td>5434.555621</td>\n","      <td>7.081911</td>\n","      <td>2008.581058</td>\n","      <td>0.550793</td>\n","      <td>23.216418</td>\n","      <td>2011.909382</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.377762</td>\n","      <td>7088.113656</td>\n","      <td>769.986753</td>\n","      <td>0.535687</td>\n","      <td>0.246067</td>\n","      <td>5430.694492</td>\n","      <td>7.224470</td>\n","      <td>2008.692037</td>\n","      <td>0.499684</td>\n","      <td>23.261417</td>\n","      <td>2011.750455</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">3</th>\n","      <th>0</th>\n","      <td>564.547868</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.354787</td>\n","      <td>0.609547</td>\n","      <td>5544.956966</td>\n","      <td>7.194542</td>\n","      <td>2008.704873</td>\n","      <td>0.501207</td>\n","      <td>23.209738</td>\n","      <td>2011.790262</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.280331</td>\n","      <td>6728.122978</td>\n","      <td>740.598876</td>\n","      <td>0.537263</td>\n","      <td>0.228011</td>\n","      <td>5427.701827</td>\n","      <td>7.223576</td>\n","      <td>2008.690387</td>\n","      <td>0.500254</td>\n","      <td>23.262182</td>\n","      <td>2011.751507</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">4</th>\n","      <th>0</th>\n","      <td>558.489867</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.308633</td>\n","      <td>0.407642</td>\n","      <td>5193.926430</td>\n","      <td>7.188031</td>\n","      <td>2008.536890</td>\n","      <td>0.539773</td>\n","      <td>23.746940</td>\n","      <td>2011.773569</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.418444</td>\n","      <td>6767.310159</td>\n","      <td>755.569784</td>\n","      <td>0.550511</td>\n","      <td>0.224154</td>\n","      <td>5449.333696</td>\n","      <td>7.225756</td>\n","      <td>2008.702465</td>\n","      <td>0.497482</td>\n","      <td>23.231223</td>\n","      <td>2011.751071</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">5</th>\n","      <th>0</th>\n","      <td>560.638584</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.752949</td>\n","      <td>0.619847</td>\n","      <td>5437.642966</td>\n","      <td>7.204643</td>\n","      <td>2008.633272</td>\n","      <td>0.507287</td>\n","      <td>23.016689</td>\n","      <td>2011.770451</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.308836</td>\n","      <td>7072.677012</td>\n","      <td>781.771639</td>\n","      <td>0.520449</td>\n","      <td>0.229147</td>\n","      <td>5429.304305</td>\n","      <td>7.223846</td>\n","      <td>2008.692865</td>\n","      <td>0.500389</td>\n","      <td>23.287471</td>\n","      <td>2011.752011</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">6</th>\n","      <th>0</th>\n","      <td>576.982143</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.007440</td>\n","      <td>4417.366071</td>\n","      <td>6.772834</td>\n","      <td>2008.189696</td>\n","      <td>0.529762</td>\n","      <td>20.949438</td>\n","      <td>2012.081461</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>558.340641</td>\n","      <td>5874.840238</td>\n","      <td>660.177526</td>\n","      <td>0.000000</td>\n","      <td>0.018874</td>\n","      <td>5434.643101</td>\n","      <td>7.224839</td>\n","      <td>2008.692259</td>\n","      <td>0.500507</td>\n","      <td>23.282849</td>\n","      <td>2011.751227</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">7</th>\n","      <th>0</th>\n","      <td>558.033804</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.018719</td>\n","      <td>5297.351397</td>\n","      <td>7.219963</td>\n","      <td>2008.667871</td>\n","      <td>0.506267</td>\n","      <td>23.326508</td>\n","      <td>2011.736876</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>573.880045</td>\n","      <td>8224.723908</td>\n","      <td>1441.532424</td>\n","      <td>0.000000</td>\n","      <td>0.022822</td>\n","      <td>10622.983579</td>\n","      <td>7.354478</td>\n","      <td>2009.690765</td>\n","      <td>0.279711</td>\n","      <td>19.352239</td>\n","      <td>2012.888557</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eff6deae-774a-427d-9d82-d2b5c3a4b853')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eff6deae-774a-427d-9d82-d2b5c3a4b853 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eff6deae-774a-427d-9d82-d2b5c3a4b853');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f1d98630-9800-46af-8fb2-304cde0efc63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1d98630-9800-46af-8fb2-304cde0efc63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f1d98630-9800-46af-8fb2-304cde0efc63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["And grouping by store type would be interesting, yes? What will this tell us? It gets a bit unweildy."],"metadata":{"id":"j3EknxGMt422"}},{"cell_type":"code","source":["day_of_week_open = merged_df.groupby(by=['DayOfWeek', 'StoreType', 'Open']).mean()\n","day_of_week_open"],"metadata":{"id":"3MiY1OdduINQ","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1701116082158,"user_tz":300,"elapsed":184,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"8ed7d4a9-2b22-437c-af98-be50664faf06"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-22-63e345364175>:1: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  day_of_week_open = merged_df.groupby(by=['DayOfWeek', 'StoreType', 'Open']).mean()\n"]},{"output_type":"execute_result","data":{"text/plain":["                               Store         Sales    Customers     Promo  \\\n","DayOfWeek StoreType Open                                                    \n","1         a         0     559.939964      0.000000     0.000000  0.066993   \n","                    1     560.083844   8336.866386   910.043738  0.561747   \n","          b         0     924.297297      0.000000     0.000000  0.540541   \n","                    1     555.990519  11055.024831  2122.172912  0.537246   \n","          c         0     604.627723      0.000000     0.000000  0.085149   \n","                    1     608.421714   7988.505038   892.927186  0.562033   \n","          d         0     529.454505      0.000000     0.000000  0.067351   \n","                    1     533.781785   7953.577311   676.396651  0.562175   \n","2         a         0     563.942697      0.000000     0.000000  0.244944   \n","                    1     560.044654   7294.827873   831.012674  0.535981   \n","          b         0     907.725000      0.000000     0.000000  0.550000   \n","                    1     555.853680  10171.527379  2012.092460  0.532765   \n","          c         0     600.930502      0.000000     0.000000  0.297297   \n","                    1     608.324975   6874.859536   801.317789  0.536060   \n","          d         0     517.136187      0.000000     0.000000  0.282101   \n","                    1     533.745139   6661.466135   586.146932  0.535152   \n","3         a         0     565.224988      0.000000     0.000000  0.350423   \n","                    1     559.960100   6838.063616   791.113361  0.537451   \n","          b         0     907.725000      0.000000     0.000000  0.550000   \n","                    1     555.853680  10013.842908  1997.878366  0.532765   \n","          c         0     618.049180      0.000000     0.000000  0.371585   \n","                    1     607.944261   6563.043038   775.407652  0.537553   \n","          d         0     525.237843      0.000000     0.000000  0.347480   \n","                    1     533.769983   6438.626952   572.175713  0.537034   \n","4         a         0     562.393234      0.000000     0.000000  0.301320   \n","                    1     559.880002   6836.994358   801.564607  0.551283   \n","          b         0     918.256410      0.000000     0.000000  0.564103   \n","                    1     555.807623  10207.536771  2041.921973  0.532287   \n","          c         0     606.476578      0.000000     0.000000  0.262050   \n","                    1     608.366202   6599.723199   787.821419  0.554484   \n","          d         0     528.627721      0.000000     0.000000  0.337007   \n","                    1     534.000655   6531.646842   590.397648  0.548382   \n","5         a         0     562.589990      0.000000     0.000000  0.752022   \n","                    1     559.940024   6998.903980   813.921283  0.520551   \n","          b         0     909.657895      0.000000     0.000000  0.526316   \n","                    1     556.116540  10708.558942  2177.501121  0.532945   \n","          c         0     611.582253      0.000000     0.000000  0.750748   \n","                    1     608.043357   6985.372428   829.753398  0.520765   \n","          d         0     527.994112      0.000000     0.000000  0.759511   \n","                    1     533.854498   7050.549688   631.245230  0.519477   \n","6         a         0     592.618919      0.000000     0.000000  0.000000   \n","                    1     559.922588   5361.151112   636.278759  0.000000   \n","          b         0     924.702703      0.000000     0.000000  0.000000   \n","                    1     555.983747   8011.245598  1708.973363  0.000000   \n","          c         0     609.660000      0.000000     0.000000  0.000000   \n","                    1     608.217472   6608.117410   807.346086  0.000000   \n","          d         0     444.139394      0.000000     0.000000  0.000000   \n","                    1     533.896508   6352.558554   585.638737  0.000000   \n","7         a         0     559.386514      0.000000     0.000000  0.000000   \n","                    1     608.632727   2912.109091   400.706364  0.000000   \n","          b         0     942.777778      0.000000     0.000000  0.000000   \n","                    1     555.856498  11449.909296  2091.121841  0.000000   \n","          c         0     608.224882      0.000000     0.000000  0.000000   \n","          d         0     533.272820      0.000000     0.000000  0.000000   \n","                    1     580.061372   3520.267148   378.061372  0.000000   \n","\n","                          SchoolHoliday  CompetitionDistance  \\\n","DayOfWeek StoreType Open                                       \n","1         a         0          0.438804          4706.665806   \n","                    1          0.227833          5190.054515   \n","          b         0          0.162162           638.648649   \n","                    1          0.232054          1073.160271   \n","          c         0          0.414851          3563.752475   \n","                    1          0.225377          3514.166757   \n","          d         0          0.451829          6725.293854   \n","                    1          0.218712          6971.964808   \n","2         a         0          0.720225          5342.688414   \n","                    1          0.249504          5165.579850   \n","          b         0          0.200000           658.500000   \n","                    1          0.249551          1073.509874   \n","          c         0          0.625483          3914.594595   \n","                    1          0.243809          3511.226800   \n","          d         0          0.700389          6738.630137   \n","                    1          0.240814          6963.629283   \n","3         a         0          0.619214          5383.614158   \n","                    1          0.228216          5161.871040   \n","          b         0          0.200000           658.500000   \n","                    1          0.237882          1073.509874   \n","          c         0          0.566485          3649.417122   \n","                    1          0.230620          3512.728179   \n","          d         0          0.627763          6933.882458   \n","                    1          0.226009          6961.750984   \n","4         a         0          0.406601          4726.237607   \n","                    1          0.225029          5202.312926   \n","          b         0          0.205128           748.205128   \n","                    1          0.243498          1071.538117   \n","          c         0          0.433130          3495.424304   \n","                    1          0.226313          3518.517335   \n","          d         0          0.401212          6719.481851   \n","                    1          0.220609          6980.277663   \n","5         a         0          0.628413          5133.688608   \n","                    1          0.229695          5167.511500   \n","          b         0          0.210526           735.789474   \n","                    1          0.255939          1071.604662   \n","          c         0          0.587238          3621.645065   \n","                    1          0.239510          3511.132542   \n","          d         0          0.626359          6895.173042   \n","                    1          0.222261          6962.501296   \n","6         a         0          0.002703          4249.432432   \n","                    1          0.013608          5170.496922   \n","          b         0          0.000000           731.351351   \n","                    1          0.037020          1071.611738   \n","          c         0          0.000000          3477.000000   \n","                    1          0.018071          3516.944444   \n","          d         0          0.024242          6190.424242   \n","                    1          0.027592          6962.425259   \n","7         a         0          0.013750          4860.825243   \n","                    1          0.000000         26608.081818   \n","          b         0          0.000000           650.555556   \n","                    1          0.037004          1072.770758   \n","          c         0          0.017978          3516.739264   \n","          d         0          0.027752          6855.146454   \n","                    1          0.000000         23545.956679   \n","\n","                          CompetitionOpenSinceMonth  CompetitionOpenSinceYear  \\\n","DayOfWeek StoreType Open                                                        \n","1         a         0                      7.180749               2008.434607   \n","                    1                      7.176330               2008.606696   \n","          b         0                      3.620690               2006.206897   \n","                    1                      6.741716               2007.816483   \n","          c         0                      7.126876               2008.410641   \n","                    1                      7.044136               2008.512177   \n","          d         0                      7.359519               2009.073602   \n","                    1                      7.430397               2009.000452   \n","2         a         0                      7.185124               2008.323967   \n","                    1                      7.176249               2008.602765   \n","          b         0                      3.774194               2006.258065   \n","                    1                      6.742399               2007.817568   \n","          c         0                      7.148515               2008.212871   \n","                    1                      7.046160               2008.510914   \n","          d         0                      7.161677               2009.485030   \n","                    1                      7.430670               2008.998056   \n","3         a         0                      7.212509               2008.553660   \n","                    1                      7.175481               2008.600999   \n","          b         0                      3.774194               2006.258065   \n","                    1                      6.742399               2007.817568   \n","          c         0                      7.172749               2008.423358   \n","                    1                      7.043883               2008.509154   \n","          d         0                      7.319832               2009.269553   \n","                    1                      7.430287               2008.996897   \n","4         a         0                      7.159048               2008.378095   \n","                    1                      7.178002               2008.615730   \n","          b         0                      3.774194               2006.258065   \n","                    1                      6.742399               2007.817568   \n","          c         0                      7.090133               2008.381404   \n","                    1                      7.045313               2008.517021   \n","          d         0                      7.334962               2008.937361   \n","                    1                      7.434620               2009.010035   \n","5         a         0                      7.181325               2008.524068   \n","                    1                      7.176332               2008.601719   \n","          b         0                      3.620690               2006.206897   \n","                    1                      6.741147               2007.816189   \n","          c         0                      7.091156               2008.417687   \n","                    1                      7.046320               2008.511822   \n","          d         0                      7.386561               2009.016618   \n","                    1                      7.428726               2009.003585   \n","6         a         0                      7.206422               2007.917431   \n","                    1                      7.176429               2008.600941   \n","          b         0                      3.620690               2006.206897   \n","                    1                      6.741716               2007.816483   \n","          c         0                      6.987013               2008.051948   \n","                    1                      7.048782               2008.509392   \n","          d         0                      6.582524               2009.427184   \n","                    1                      7.429936               2009.002586   \n","7         a         0                      7.159794               2008.557857   \n","                    1                      8.507246               2011.807246   \n","          b         0                      3.620690               2006.206897   \n","                    1                      6.741716               2007.816483   \n","          c         0                      7.048444               2008.506890   \n","          d         0                      7.430219               2008.970324   \n","                    1                      7.086643               2012.382671   \n","\n","                            Promo2  Promo2SinceWeek  Promo2SinceYear  \n","DayOfWeek StoreType Open                                              \n","1         a         0     0.496264        24.282970      2011.893043  \n","                    1     0.466094        23.627085      2011.859945  \n","          b         0     0.108108         8.500000      2013.000000  \n","                    1     0.288939        22.356250      2012.790625  \n","          c         0     0.527723        21.213884      2011.637899  \n","                    1     0.497291        21.434034      2011.536006  \n","          d         0     0.585638        23.814166      2011.656512  \n","                    1     0.569743        23.419866      2011.649703  \n","2         a         0     0.544944        23.888660      2012.043299  \n","                    1     0.466311        23.644932      2011.858582  \n","          b         0     0.125000         9.600000      2013.000000  \n","                    1     0.288600        22.390358      2012.790047  \n","          c         0     0.567568        19.408163      2011.884354  \n","                    1     0.497699        21.447803      2011.536200  \n","          d         0     0.585603        24.219269      2011.687708  \n","                    1     0.570044        23.421893      2011.649657  \n","3         a         0     0.480836        23.682195      2011.892340  \n","                    1     0.466835        23.647219      2011.860167  \n","          b         0     0.125000         9.600000      2013.000000  \n","                    1     0.288600        22.390358      2012.790047  \n","          c         0     0.499089        20.638686      2011.686131  \n","                    1     0.498609        21.439579      2011.537263  \n","          d         0     0.551724        23.716346      2011.668269  \n","                    1     0.570702        23.424151      2011.649651  \n","4         a         0     0.506601        24.320847      2011.903583  \n","                    1     0.464451        23.605331      2011.858065  \n","          b         0     0.128205        10.600000      2013.000000  \n","                    1     0.288789        22.355590      2012.790373  \n","          c         0     0.542430        21.650814      2011.589487  \n","                    1     0.495398        21.402870      2011.537383  \n","          d         0     0.598512        23.737109      2011.654696  \n","                    1     0.568166        23.415081      2011.649612  \n","5         a         0     0.476997        23.367780      2011.884473  \n","                    1     0.467190        23.680684      2011.860627  \n","          b         0     0.157895         9.666667      2013.000000  \n","                    1     0.288212        22.382582      2012.790047  \n","          c         0     0.513460        20.864078      2011.615534  \n","                    1     0.498146        21.454163      2011.537532  \n","          d         0     0.564764        23.438653      2011.655974  \n","                    1     0.570923        23.442588      2011.649739  \n","6         a         0     0.543243        21.199005      2012.174129  \n","                    1     0.467227        23.675069      2011.859961  \n","          b         0     0.135135         8.800000      2013.000000  \n","                    1     0.288488        22.375587      2012.790297  \n","          c         0     0.630000        19.111111      2012.158730  \n","                    1     0.498193        21.437040      2011.537569  \n","          d         0     0.527273        22.402299      2011.758621  \n","                    1     0.570704        23.443812      2011.649682  \n","7         a         0     0.469516        23.757713      2011.849641  \n","                    1     0.331818        14.084932      2013.060274  \n","          b         0     0.111111         8.500000      2013.000000  \n","                    1     0.288809        22.356250      2012.790625  \n","          c         0     0.498870        21.421952      2011.541598  \n","          d         0     0.574115        23.440246      2011.650055  \n","                    1     0.000000              NaN              NaN  "],"text/html":["\n","  <div id=\"df-7f632deb-724f-46d3-a7a3-87e7152fa29a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>Store</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","    </tr>\n","    <tr>\n","      <th>DayOfWeek</th>\n","      <th>StoreType</th>\n","      <th>Open</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">1</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>559.939964</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.066993</td>\n","      <td>0.438804</td>\n","      <td>4706.665806</td>\n","      <td>7.180749</td>\n","      <td>2008.434607</td>\n","      <td>0.496264</td>\n","      <td>24.282970</td>\n","      <td>2011.893043</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>560.083844</td>\n","      <td>8336.866386</td>\n","      <td>910.043738</td>\n","      <td>0.561747</td>\n","      <td>0.227833</td>\n","      <td>5190.054515</td>\n","      <td>7.176330</td>\n","      <td>2008.606696</td>\n","      <td>0.466094</td>\n","      <td>23.627085</td>\n","      <td>2011.859945</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>924.297297</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.540541</td>\n","      <td>0.162162</td>\n","      <td>638.648649</td>\n","      <td>3.620690</td>\n","      <td>2006.206897</td>\n","      <td>0.108108</td>\n","      <td>8.500000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.990519</td>\n","      <td>11055.024831</td>\n","      <td>2122.172912</td>\n","      <td>0.537246</td>\n","      <td>0.232054</td>\n","      <td>1073.160271</td>\n","      <td>6.741716</td>\n","      <td>2007.816483</td>\n","      <td>0.288939</td>\n","      <td>22.356250</td>\n","      <td>2012.790625</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>604.627723</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.085149</td>\n","      <td>0.414851</td>\n","      <td>3563.752475</td>\n","      <td>7.126876</td>\n","      <td>2008.410641</td>\n","      <td>0.527723</td>\n","      <td>21.213884</td>\n","      <td>2011.637899</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.421714</td>\n","      <td>7988.505038</td>\n","      <td>892.927186</td>\n","      <td>0.562033</td>\n","      <td>0.225377</td>\n","      <td>3514.166757</td>\n","      <td>7.044136</td>\n","      <td>2008.512177</td>\n","      <td>0.497291</td>\n","      <td>21.434034</td>\n","      <td>2011.536006</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>529.454505</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.067351</td>\n","      <td>0.451829</td>\n","      <td>6725.293854</td>\n","      <td>7.359519</td>\n","      <td>2009.073602</td>\n","      <td>0.585638</td>\n","      <td>23.814166</td>\n","      <td>2011.656512</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>533.781785</td>\n","      <td>7953.577311</td>\n","      <td>676.396651</td>\n","      <td>0.562175</td>\n","      <td>0.218712</td>\n","      <td>6971.964808</td>\n","      <td>7.430397</td>\n","      <td>2009.000452</td>\n","      <td>0.569743</td>\n","      <td>23.419866</td>\n","      <td>2011.649703</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">2</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>563.942697</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.244944</td>\n","      <td>0.720225</td>\n","      <td>5342.688414</td>\n","      <td>7.185124</td>\n","      <td>2008.323967</td>\n","      <td>0.544944</td>\n","      <td>23.888660</td>\n","      <td>2012.043299</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>560.044654</td>\n","      <td>7294.827873</td>\n","      <td>831.012674</td>\n","      <td>0.535981</td>\n","      <td>0.249504</td>\n","      <td>5165.579850</td>\n","      <td>7.176249</td>\n","      <td>2008.602765</td>\n","      <td>0.466311</td>\n","      <td>23.644932</td>\n","      <td>2011.858582</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>907.725000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.550000</td>\n","      <td>0.200000</td>\n","      <td>658.500000</td>\n","      <td>3.774194</td>\n","      <td>2006.258065</td>\n","      <td>0.125000</td>\n","      <td>9.600000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.853680</td>\n","      <td>10171.527379</td>\n","      <td>2012.092460</td>\n","      <td>0.532765</td>\n","      <td>0.249551</td>\n","      <td>1073.509874</td>\n","      <td>6.742399</td>\n","      <td>2007.817568</td>\n","      <td>0.288600</td>\n","      <td>22.390358</td>\n","      <td>2012.790047</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>600.930502</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.297297</td>\n","      <td>0.625483</td>\n","      <td>3914.594595</td>\n","      <td>7.148515</td>\n","      <td>2008.212871</td>\n","      <td>0.567568</td>\n","      <td>19.408163</td>\n","      <td>2011.884354</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.324975</td>\n","      <td>6874.859536</td>\n","      <td>801.317789</td>\n","      <td>0.536060</td>\n","      <td>0.243809</td>\n","      <td>3511.226800</td>\n","      <td>7.046160</td>\n","      <td>2008.510914</td>\n","      <td>0.497699</td>\n","      <td>21.447803</td>\n","      <td>2011.536200</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>517.136187</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.282101</td>\n","      <td>0.700389</td>\n","      <td>6738.630137</td>\n","      <td>7.161677</td>\n","      <td>2009.485030</td>\n","      <td>0.585603</td>\n","      <td>24.219269</td>\n","      <td>2011.687708</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>533.745139</td>\n","      <td>6661.466135</td>\n","      <td>586.146932</td>\n","      <td>0.535152</td>\n","      <td>0.240814</td>\n","      <td>6963.629283</td>\n","      <td>7.430670</td>\n","      <td>2008.998056</td>\n","      <td>0.570044</td>\n","      <td>23.421893</td>\n","      <td>2011.649657</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">3</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>565.224988</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.350423</td>\n","      <td>0.619214</td>\n","      <td>5383.614158</td>\n","      <td>7.212509</td>\n","      <td>2008.553660</td>\n","      <td>0.480836</td>\n","      <td>23.682195</td>\n","      <td>2011.892340</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>559.960100</td>\n","      <td>6838.063616</td>\n","      <td>791.113361</td>\n","      <td>0.537451</td>\n","      <td>0.228216</td>\n","      <td>5161.871040</td>\n","      <td>7.175481</td>\n","      <td>2008.600999</td>\n","      <td>0.466835</td>\n","      <td>23.647219</td>\n","      <td>2011.860167</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>907.725000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.550000</td>\n","      <td>0.200000</td>\n","      <td>658.500000</td>\n","      <td>3.774194</td>\n","      <td>2006.258065</td>\n","      <td>0.125000</td>\n","      <td>9.600000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.853680</td>\n","      <td>10013.842908</td>\n","      <td>1997.878366</td>\n","      <td>0.532765</td>\n","      <td>0.237882</td>\n","      <td>1073.509874</td>\n","      <td>6.742399</td>\n","      <td>2007.817568</td>\n","      <td>0.288600</td>\n","      <td>22.390358</td>\n","      <td>2012.790047</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>618.049180</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.371585</td>\n","      <td>0.566485</td>\n","      <td>3649.417122</td>\n","      <td>7.172749</td>\n","      <td>2008.423358</td>\n","      <td>0.499089</td>\n","      <td>20.638686</td>\n","      <td>2011.686131</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>607.944261</td>\n","      <td>6563.043038</td>\n","      <td>775.407652</td>\n","      <td>0.537553</td>\n","      <td>0.230620</td>\n","      <td>3512.728179</td>\n","      <td>7.043883</td>\n","      <td>2008.509154</td>\n","      <td>0.498609</td>\n","      <td>21.439579</td>\n","      <td>2011.537263</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>525.237843</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.347480</td>\n","      <td>0.627763</td>\n","      <td>6933.882458</td>\n","      <td>7.319832</td>\n","      <td>2009.269553</td>\n","      <td>0.551724</td>\n","      <td>23.716346</td>\n","      <td>2011.668269</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>533.769983</td>\n","      <td>6438.626952</td>\n","      <td>572.175713</td>\n","      <td>0.537034</td>\n","      <td>0.226009</td>\n","      <td>6961.750984</td>\n","      <td>7.430287</td>\n","      <td>2008.996897</td>\n","      <td>0.570702</td>\n","      <td>23.424151</td>\n","      <td>2011.649651</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">4</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>562.393234</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.301320</td>\n","      <td>0.406601</td>\n","      <td>4726.237607</td>\n","      <td>7.159048</td>\n","      <td>2008.378095</td>\n","      <td>0.506601</td>\n","      <td>24.320847</td>\n","      <td>2011.903583</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>559.880002</td>\n","      <td>6836.994358</td>\n","      <td>801.564607</td>\n","      <td>0.551283</td>\n","      <td>0.225029</td>\n","      <td>5202.312926</td>\n","      <td>7.178002</td>\n","      <td>2008.615730</td>\n","      <td>0.464451</td>\n","      <td>23.605331</td>\n","      <td>2011.858065</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>918.256410</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.564103</td>\n","      <td>0.205128</td>\n","      <td>748.205128</td>\n","      <td>3.774194</td>\n","      <td>2006.258065</td>\n","      <td>0.128205</td>\n","      <td>10.600000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.807623</td>\n","      <td>10207.536771</td>\n","      <td>2041.921973</td>\n","      <td>0.532287</td>\n","      <td>0.243498</td>\n","      <td>1071.538117</td>\n","      <td>6.742399</td>\n","      <td>2007.817568</td>\n","      <td>0.288789</td>\n","      <td>22.355590</td>\n","      <td>2012.790373</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>606.476578</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.262050</td>\n","      <td>0.433130</td>\n","      <td>3495.424304</td>\n","      <td>7.090133</td>\n","      <td>2008.381404</td>\n","      <td>0.542430</td>\n","      <td>21.650814</td>\n","      <td>2011.589487</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.366202</td>\n","      <td>6599.723199</td>\n","      <td>787.821419</td>\n","      <td>0.554484</td>\n","      <td>0.226313</td>\n","      <td>3518.517335</td>\n","      <td>7.045313</td>\n","      <td>2008.517021</td>\n","      <td>0.495398</td>\n","      <td>21.402870</td>\n","      <td>2011.537383</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>528.627721</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.337007</td>\n","      <td>0.401212</td>\n","      <td>6719.481851</td>\n","      <td>7.334962</td>\n","      <td>2008.937361</td>\n","      <td>0.598512</td>\n","      <td>23.737109</td>\n","      <td>2011.654696</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>534.000655</td>\n","      <td>6531.646842</td>\n","      <td>590.397648</td>\n","      <td>0.548382</td>\n","      <td>0.220609</td>\n","      <td>6980.277663</td>\n","      <td>7.434620</td>\n","      <td>2009.010035</td>\n","      <td>0.568166</td>\n","      <td>23.415081</td>\n","      <td>2011.649612</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">5</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>562.589990</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.752022</td>\n","      <td>0.628413</td>\n","      <td>5133.688608</td>\n","      <td>7.181325</td>\n","      <td>2008.524068</td>\n","      <td>0.476997</td>\n","      <td>23.367780</td>\n","      <td>2011.884473</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>559.940024</td>\n","      <td>6998.903980</td>\n","      <td>813.921283</td>\n","      <td>0.520551</td>\n","      <td>0.229695</td>\n","      <td>5167.511500</td>\n","      <td>7.176332</td>\n","      <td>2008.601719</td>\n","      <td>0.467190</td>\n","      <td>23.680684</td>\n","      <td>2011.860627</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>909.657895</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.526316</td>\n","      <td>0.210526</td>\n","      <td>735.789474</td>\n","      <td>3.620690</td>\n","      <td>2006.206897</td>\n","      <td>0.157895</td>\n","      <td>9.666667</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>556.116540</td>\n","      <td>10708.558942</td>\n","      <td>2177.501121</td>\n","      <td>0.532945</td>\n","      <td>0.255939</td>\n","      <td>1071.604662</td>\n","      <td>6.741147</td>\n","      <td>2007.816189</td>\n","      <td>0.288212</td>\n","      <td>22.382582</td>\n","      <td>2012.790047</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>611.582253</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.750748</td>\n","      <td>0.587238</td>\n","      <td>3621.645065</td>\n","      <td>7.091156</td>\n","      <td>2008.417687</td>\n","      <td>0.513460</td>\n","      <td>20.864078</td>\n","      <td>2011.615534</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.043357</td>\n","      <td>6985.372428</td>\n","      <td>829.753398</td>\n","      <td>0.520765</td>\n","      <td>0.239510</td>\n","      <td>3511.132542</td>\n","      <td>7.046320</td>\n","      <td>2008.511822</td>\n","      <td>0.498146</td>\n","      <td>21.454163</td>\n","      <td>2011.537532</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>527.994112</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.759511</td>\n","      <td>0.626359</td>\n","      <td>6895.173042</td>\n","      <td>7.386561</td>\n","      <td>2009.016618</td>\n","      <td>0.564764</td>\n","      <td>23.438653</td>\n","      <td>2011.655974</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>533.854498</td>\n","      <td>7050.549688</td>\n","      <td>631.245230</td>\n","      <td>0.519477</td>\n","      <td>0.222261</td>\n","      <td>6962.501296</td>\n","      <td>7.428726</td>\n","      <td>2009.003585</td>\n","      <td>0.570923</td>\n","      <td>23.442588</td>\n","      <td>2011.649739</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"8\" valign=\"top\">6</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>592.618919</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.002703</td>\n","      <td>4249.432432</td>\n","      <td>7.206422</td>\n","      <td>2007.917431</td>\n","      <td>0.543243</td>\n","      <td>21.199005</td>\n","      <td>2012.174129</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>559.922588</td>\n","      <td>5361.151112</td>\n","      <td>636.278759</td>\n","      <td>0.000000</td>\n","      <td>0.013608</td>\n","      <td>5170.496922</td>\n","      <td>7.176429</td>\n","      <td>2008.600941</td>\n","      <td>0.467227</td>\n","      <td>23.675069</td>\n","      <td>2011.859961</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>924.702703</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>731.351351</td>\n","      <td>3.620690</td>\n","      <td>2006.206897</td>\n","      <td>0.135135</td>\n","      <td>8.800000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.983747</td>\n","      <td>8011.245598</td>\n","      <td>1708.973363</td>\n","      <td>0.000000</td>\n","      <td>0.037020</td>\n","      <td>1071.611738</td>\n","      <td>6.741716</td>\n","      <td>2007.816483</td>\n","      <td>0.288488</td>\n","      <td>22.375587</td>\n","      <td>2012.790297</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">c</th>\n","      <th>0</th>\n","      <td>609.660000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3477.000000</td>\n","      <td>6.987013</td>\n","      <td>2008.051948</td>\n","      <td>0.630000</td>\n","      <td>19.111111</td>\n","      <td>2012.158730</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.217472</td>\n","      <td>6608.117410</td>\n","      <td>807.346086</td>\n","      <td>0.000000</td>\n","      <td>0.018071</td>\n","      <td>3516.944444</td>\n","      <td>7.048782</td>\n","      <td>2008.509392</td>\n","      <td>0.498193</td>\n","      <td>21.437040</td>\n","      <td>2011.537569</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>444.139394</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.024242</td>\n","      <td>6190.424242</td>\n","      <td>6.582524</td>\n","      <td>2009.427184</td>\n","      <td>0.527273</td>\n","      <td>22.402299</td>\n","      <td>2011.758621</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>533.896508</td>\n","      <td>6352.558554</td>\n","      <td>585.638737</td>\n","      <td>0.000000</td>\n","      <td>0.027592</td>\n","      <td>6962.425259</td>\n","      <td>7.429936</td>\n","      <td>2009.002586</td>\n","      <td>0.570704</td>\n","      <td>23.443812</td>\n","      <td>2011.649682</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"7\" valign=\"top\">7</th>\n","      <th rowspan=\"2\" valign=\"top\">a</th>\n","      <th>0</th>\n","      <td>559.386514</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.013750</td>\n","      <td>4860.825243</td>\n","      <td>7.159794</td>\n","      <td>2008.557857</td>\n","      <td>0.469516</td>\n","      <td>23.757713</td>\n","      <td>2011.849641</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608.632727</td>\n","      <td>2912.109091</td>\n","      <td>400.706364</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>26608.081818</td>\n","      <td>8.507246</td>\n","      <td>2011.807246</td>\n","      <td>0.331818</td>\n","      <td>14.084932</td>\n","      <td>2013.060274</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">b</th>\n","      <th>0</th>\n","      <td>942.777778</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>650.555556</td>\n","      <td>3.620690</td>\n","      <td>2006.206897</td>\n","      <td>0.111111</td>\n","      <td>8.500000</td>\n","      <td>2013.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>555.856498</td>\n","      <td>11449.909296</td>\n","      <td>2091.121841</td>\n","      <td>0.000000</td>\n","      <td>0.037004</td>\n","      <td>1072.770758</td>\n","      <td>6.741716</td>\n","      <td>2007.816483</td>\n","      <td>0.288809</td>\n","      <td>22.356250</td>\n","      <td>2012.790625</td>\n","    </tr>\n","    <tr>\n","      <th>c</th>\n","      <th>0</th>\n","      <td>608.224882</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.017978</td>\n","      <td>3516.739264</td>\n","      <td>7.048444</td>\n","      <td>2008.506890</td>\n","      <td>0.498870</td>\n","      <td>21.421952</td>\n","      <td>2011.541598</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">d</th>\n","      <th>0</th>\n","      <td>533.272820</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.027752</td>\n","      <td>6855.146454</td>\n","      <td>7.430219</td>\n","      <td>2008.970324</td>\n","      <td>0.574115</td>\n","      <td>23.440246</td>\n","      <td>2011.650055</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>580.061372</td>\n","      <td>3520.267148</td>\n","      <td>378.061372</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>23545.956679</td>\n","      <td>7.086643</td>\n","      <td>2012.382671</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f632deb-724f-46d3-a7a3-87e7152fa29a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f632deb-724f-46d3-a7a3-87e7152fa29a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f632deb-724f-46d3-a7a3-87e7152fa29a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e51bd24-c45e-4487-b6c2-26be4e93ec87\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e51bd24-c45e-4487-b6c2-26be4e93ec87')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e51bd24-c45e-4487-b6c2-26be4e93ec87 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["What fraction of the time is each store type open on a given day of the week?"],"metadata":{"id":"Py8stkD2uUHe"}},{"cell_type":"code","metadata":{"id":"tnAxbApGlwZR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116082723,"user_tz":300,"elapsed":568,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"5aae3b2b-573e-4b7f-a921-be5b67c0d91a"},"source":["type_open_count = merged_df.groupby(by=['DayOfWeek','StoreType']).count()\n","type_open_sum = merged_df.groupby(by=['DayOfWeek','StoreType']).sum()\n","type_open_sum.Open/type_open_count.Open"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-23-b6841375845d>:2: FutureWarning: The default value of numeric_only in DataFrameGroupBy.sum is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n","  type_open_sum = merged_df.groupby(by=['DayOfWeek','StoreType']).sum()\n"]},{"output_type":"execute_result","data":{"text/plain":["DayOfWeek  StoreType\n","1          a            0.950550\n","           b            0.983570\n","           c            0.948120\n","           d            0.949647\n","2          a            0.988734\n","           b            0.982363\n","           c            0.986787\n","           d            0.988525\n","3          a            0.974570\n","           b            0.982363\n","           c            0.971993\n","           d            0.974751\n","4          a            0.923375\n","           b            0.982812\n","           c            0.924908\n","           d            0.919129\n","5          a            0.949979\n","           b            0.983253\n","           c            0.948868\n","           d            0.950796\n","6          a            0.995286\n","           b            0.983570\n","           c            0.994863\n","           d            0.996294\n","7          a            0.014016\n","           b            0.984014\n","           c            0.000000\n","           d            0.006221\n","Name: Open, dtype: float64"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["Let's explore a bit about competition."],"metadata":{"id":"XaPnB7oVucO-"}},{"cell_type":"code","source":["median_distance = merged_df['CompetitionDistance'].median()\n","print('Median distance from a Rossmann store and its closest competition is: {}m'.format(median_distance))"],"metadata":{"id":"jwuqMIksuoLw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116082724,"user_tz":300,"elapsed":7,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"aedded4f-2c3b-4d38-8fbb-1e3e9084b560"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Median distance from a Rossmann store and its closest competition is: 2330.0m\n"]}]},{"cell_type":"code","source":["merged_df['CompetitionDistance'].isna().sum()"],"metadata":{"id":"vpKlJXbhWZY-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116082724,"user_tz":300,"elapsed":5,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"db3b162d-609e-4706-d5e3-7b6eda82bf47"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2642"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["Do we see sales tick up when there's competition closer or farther away? What's your intuition? Given the results, how would you go about designing the type of store given competition?"],"metadata":{"id":"9jfZjSP7uza8"}},{"cell_type":"code","metadata":{"id":"E07MCcHDpCPF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701116083126,"user_tz":300,"elapsed":406,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"dec01ab1-5948-4943-d5fb-90aaadedbc04"},"source":["competition_distance_df = merged_df.groupby([merged_df['CompetitionDistance'] > median_distance]).groups\n","lower_median, higher_median = competition_distance_df[False], competition_distance_df[True]\n","print('Given competition closer than median, Sales per customer = {}'.format(merged_df.loc[lower_median]['Sales'].mean()/merged_df.loc[lower_median]['Customers'].mean()))\n","print('Given competition farther away than median, Sales per customer = {}'.format(merged_df.loc[higher_median]['Sales'].mean()/merged_df.loc[higher_median]['Customers'].mean()))\n"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Given competition closer than median, Sales per customer = 8.311814729196316\n","Given competition farther away than median, Sales per customer = 10.17297669707277\n"]}]},{"cell_type":"markdown","source":["# Modeling\n"],"metadata":{"id":"h1dh_f5WV1qK"}},{"cell_type":"code","source":["merged_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"nJV2XobvV3na","executionInfo":{"status":"ok","timestamp":1701116092484,"user_tz":300,"elapsed":269,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"96066af4-c41f-4e4a-b965-73ba39d1b1fb"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Store  DayOfWeek       Date  Sales  Customers  Open  Promo  \\\n","0            1          5 2015-07-31   5263        555     1      1   \n","1            1          4 2015-07-30   5020        546     1      1   \n","2            1          3 2015-07-29   4782        523     1      1   \n","3            1          2 2015-07-28   5011        560     1      1   \n","4            1          1 2015-07-27   6102        612     1      1   \n","...        ...        ...        ...    ...        ...   ...    ...   \n","1017204   1115          6 2013-01-05   4771        339     1      0   \n","1017205   1115          5 2013-01-04   4540        326     1      0   \n","1017206   1115          4 2013-01-03   4297        300     1      0   \n","1017207   1115          3 2013-01-02   3697        305     1      0   \n","1017208   1115          2 2013-01-01      0          0     0      0   \n","\n","        StateHoliday  SchoolHoliday StoreType Assortment  CompetitionDistance  \\\n","0                  0              1         c          a               1270.0   \n","1                  0              1         c          a               1270.0   \n","2                  0              1         c          a               1270.0   \n","3                  0              1         c          a               1270.0   \n","4                  0              1         c          a               1270.0   \n","...              ...            ...       ...        ...                  ...   \n","1017204            0              1         d          c               5350.0   \n","1017205            0              1         d          c               5350.0   \n","1017206            0              1         d          c               5350.0   \n","1017207            0              1         d          c               5350.0   \n","1017208            a              1         d          c               5350.0   \n","\n","         CompetitionOpenSinceMonth  CompetitionOpenSinceYear  Promo2  \\\n","0                              9.0                    2008.0       0   \n","1                              9.0                    2008.0       0   \n","2                              9.0                    2008.0       0   \n","3                              9.0                    2008.0       0   \n","4                              9.0                    2008.0       0   \n","...                            ...                       ...     ...   \n","1017204                        NaN                       NaN       1   \n","1017205                        NaN                       NaN       1   \n","1017206                        NaN                       NaN       1   \n","1017207                        NaN                       NaN       1   \n","1017208                        NaN                       NaN       1   \n","\n","         Promo2SinceWeek  Promo2SinceYear     PromoInterval  \n","0                    NaN              NaN               NaN  \n","1                    NaN              NaN               NaN  \n","2                    NaN              NaN               NaN  \n","3                    NaN              NaN               NaN  \n","4                    NaN              NaN               NaN  \n","...                  ...              ...               ...  \n","1017204             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017205             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017206             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017207             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017208             22.0           2012.0  Mar,Jun,Sept,Dec  \n","\n","[1017209 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-5fe617fa-604c-4e32-97a0-4fc48c89eb60\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>DayOfWeek</th>\n","      <th>Date</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>StateHoliday</th>\n","      <th>SchoolHoliday</th>\n","      <th>StoreType</th>\n","      <th>Assortment</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","      <th>PromoInterval</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2015-07-31</td>\n","      <td>5263</td>\n","      <td>555</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2015-07-30</td>\n","      <td>5020</td>\n","      <td>546</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2015-07-29</td>\n","      <td>4782</td>\n","      <td>523</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2015-07-28</td>\n","      <td>5011</td>\n","      <td>560</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2015-07-27</td>\n","      <td>6102</td>\n","      <td>612</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>a</td>\n","      <td>1270.0</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1017204</th>\n","      <td>1115</td>\n","      <td>6</td>\n","      <td>2013-01-05</td>\n","      <td>4771</td>\n","      <td>339</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>c</td>\n","      <td>5350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","    </tr>\n","    <tr>\n","      <th>1017205</th>\n","      <td>1115</td>\n","      <td>5</td>\n","      <td>2013-01-04</td>\n","      <td>4540</td>\n","      <td>326</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>c</td>\n","      <td>5350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","    </tr>\n","    <tr>\n","      <th>1017206</th>\n","      <td>1115</td>\n","      <td>4</td>\n","      <td>2013-01-03</td>\n","      <td>4297</td>\n","      <td>300</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>c</td>\n","      <td>5350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","    </tr>\n","    <tr>\n","      <th>1017207</th>\n","      <td>1115</td>\n","      <td>3</td>\n","      <td>2013-01-02</td>\n","      <td>3697</td>\n","      <td>305</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>c</td>\n","      <td>5350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","    </tr>\n","    <tr>\n","      <th>1017208</th>\n","      <td>1115</td>\n","      <td>2</td>\n","      <td>2013-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>c</td>\n","      <td>5350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1017209 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fe617fa-604c-4e32-97a0-4fc48c89eb60')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5fe617fa-604c-4e32-97a0-4fc48c89eb60 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5fe617fa-604c-4e32-97a0-4fc48c89eb60');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7604f77c-ab1e-4b68-9191-7ec3bd17513c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7604f77c-ab1e-4b68-9191-7ec3bd17513c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7604f77c-ab1e-4b68-9191-7ec3bd17513c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"p0jW6v1ecaSN"},"source":["## Model Prep"]},{"cell_type":"code","metadata":{"id":"aqKxFRF9qbrn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701118308705,"user_tz":300,"elapsed":210,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"ee116866-7dd8-4a44-90eb-b3125b390f66"},"source":["#train before 2015 and test after\n","\n","X = merged_df[merged_df['Date'] <'2015-01-01']\n","X_test = merged_df[merged_df['Date'] >='2015-01-01']\n","print(len(X))\n","\n","#X = X[X['Open'] == 1]\n","y_train = X['Sales']\n","#X_test = X_test[X_test['Open'] == 1]\n","y_test = X_test['Sales']\n","X_test = X_test.drop(['Sales'], axis = 1)\n","X_test = X_test.drop(['Customers'], axis = 1)\n","print(X)\n","print(y_train)\n"],"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["780829\n","         Store  DayOfWeek       Date  Sales  Customers  Open  Promo  \\\n","212          1          3 2014-12-31   2605        327     1      0   \n","213          1          2 2014-12-30   6466        703     1      0   \n","214          1          1 2014-12-29   6463        700     1      0   \n","215          1          7 2014-12-28      0          0     0      0   \n","216          1          6 2014-12-27   6057        684     1      0   \n","...        ...        ...        ...    ...        ...   ...    ...   \n","1017204   1115          6 2013-01-05   4771        339     1      0   \n","1017205   1115          5 2013-01-04   4540        326     1      0   \n","1017206   1115          4 2013-01-03   4297        300     1      0   \n","1017207   1115          3 2013-01-02   3697        305     1      0   \n","1017208   1115          2 2013-01-01      0          0     0      0   \n","\n","        StateHoliday  SchoolHoliday StoreType Assortment  CompetitionDistance  \\\n","212                0              1         c          a               1270.0   \n","213                0              1         c          a               1270.0   \n","214                0              1         c          a               1270.0   \n","215                0              1         c          a               1270.0   \n","216                0              1         c          a               1270.0   \n","...              ...            ...       ...        ...                  ...   \n","1017204            0              1         d          c               5350.0   \n","1017205            0              1         d          c               5350.0   \n","1017206            0              1         d          c               5350.0   \n","1017207            0              1         d          c               5350.0   \n","1017208            a              1         d          c               5350.0   \n","\n","         CompetitionOpenSinceMonth  CompetitionOpenSinceYear  Promo2  \\\n","212                            9.0                    2008.0       0   \n","213                            9.0                    2008.0       0   \n","214                            9.0                    2008.0       0   \n","215                            9.0                    2008.0       0   \n","216                            9.0                    2008.0       0   \n","...                            ...                       ...     ...   \n","1017204                        NaN                       NaN       1   \n","1017205                        NaN                       NaN       1   \n","1017206                        NaN                       NaN       1   \n","1017207                        NaN                       NaN       1   \n","1017208                        NaN                       NaN       1   \n","\n","         Promo2SinceWeek  Promo2SinceYear     PromoInterval  \n","212                  NaN              NaN               NaN  \n","213                  NaN              NaN               NaN  \n","214                  NaN              NaN               NaN  \n","215                  NaN              NaN               NaN  \n","216                  NaN              NaN               NaN  \n","...                  ...              ...               ...  \n","1017204             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017205             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017206             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017207             22.0           2012.0  Mar,Jun,Sept,Dec  \n","1017208             22.0           2012.0  Mar,Jun,Sept,Dec  \n","\n","[780829 rows x 18 columns]\n","212        2605\n","213        6466\n","214        6463\n","215           0\n","216        6057\n","           ... \n","1017204    4771\n","1017205    4540\n","1017206    4297\n","1017207    3697\n","1017208       0\n","Name: Sales, Length: 780829, dtype: int64\n"]}]},{"cell_type":"code","source":["#average sales from previous year 2013\n","X['week'] = X['Date'].dt.week\n","X['year'] = X['Date'].dt.year\n","\n","previous_year_df = X[X['year'] == 2013].copy()\n","average_sales_by_week = previous_year_df.groupby(['Store','week'])['Sales'].mean().reset_index()\n","#average_sales_by_week = average_sales_by_week.to_frame(name='avg_sales')\n","\n","average_sales_by_week.columns = ['Store', 'week', 'avg_sales']\n","\n","average_customers_by_week = previous_year_df.groupby(['Store', 'week'])['Customers'].mean().reset_index()\n","average_customers_by_week.columns = ['Store','week', 'avg_customers']\n","\n","\n","X = pd.merge(X, average_sales_by_week, on=['Store', 'week'], how='left')\n","X = pd.merge(X, average_customers_by_week, on=['Store', 'week'], how='left')\n","# Display the result\n","print(X.iloc[252])\n","print(y_train.iloc[252])\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"A1vrJ-uKj_7I","executionInfo":{"status":"ok","timestamp":1701118310079,"user_tz":300,"elapsed":1153,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"e754dc7c-58cd-43b7-b489-d0e81d443d93"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-89-f9047de23148>:2: FutureWarning: Series.dt.weekofyear and Series.dt.week have been deprecated. Please use Series.dt.isocalendar().week instead.\n","  X['week'] = X['Date'].dt.week\n","<ipython-input-89-f9047de23148>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  X['week'] = X['Date'].dt.week\n","<ipython-input-89-f9047de23148>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  X['year'] = X['Date'].dt.year\n"]},{"output_type":"stream","name":"stdout","text":["Store                                          1\n","DayOfWeek                                      3\n","Date                         2014-04-23 00:00:00\n","Sales                                       3482\n","Customers                                    434\n","Open                                           1\n","Promo                                          0\n","StateHoliday                                   0\n","SchoolHoliday                                  1\n","StoreType                                      c\n","Assortment                                     a\n","CompetitionDistance                       1270.0\n","CompetitionOpenSinceMonth                    9.0\n","CompetitionOpenSinceYear                  2008.0\n","Promo2                                         0\n","Promo2SinceWeek                              NaN\n","Promo2SinceYear                              NaN\n","PromoInterval                                NaN\n","week                                          17\n","year                                        2014\n","avg_sales                            4139.857143\n","avg_customers                         492.714286\n","Name: 252, dtype: object\n","3482\n"]},{"output_type":"execute_result","data":{"text/plain":["        Store  DayOfWeek       Date  Sales  Customers  Open  Promo  \\\n","0           1          3 2014-12-31   2605        327     1      0   \n","1           1          2 2014-12-30   6466        703     1      0   \n","2           1          1 2014-12-29   6463        700     1      0   \n","3           1          7 2014-12-28      0          0     0      0   \n","4           1          6 2014-12-27   6057        684     1      0   \n","...       ...        ...        ...    ...        ...   ...    ...   \n","780824   1115          6 2013-01-05   4771        339     1      0   \n","780825   1115          5 2013-01-04   4540        326     1      0   \n","780826   1115          4 2013-01-03   4297        300     1      0   \n","780827   1115          3 2013-01-02   3697        305     1      0   \n","780828   1115          2 2013-01-01      0          0     0      0   \n","\n","       StateHoliday  SchoolHoliday StoreType  ... CompetitionOpenSinceMonth  \\\n","0                 0              1         c  ...                       9.0   \n","1                 0              1         c  ...                       9.0   \n","2                 0              1         c  ...                       9.0   \n","3                 0              1         c  ...                       9.0   \n","4                 0              1         c  ...                       9.0   \n","...             ...            ...       ...  ...                       ...   \n","780824            0              1         d  ...                       NaN   \n","780825            0              1         d  ...                       NaN   \n","780826            0              1         d  ...                       NaN   \n","780827            0              1         d  ...                       NaN   \n","780828            a              1         d  ...                       NaN   \n","\n","        CompetitionOpenSinceYear  Promo2  Promo2SinceWeek  Promo2SinceYear  \\\n","0                         2008.0       0              NaN              NaN   \n","1                         2008.0       0              NaN              NaN   \n","2                         2008.0       0              NaN              NaN   \n","3                         2008.0       0              NaN              NaN   \n","4                         2008.0       0              NaN              NaN   \n","...                          ...     ...              ...              ...   \n","780824                       NaN       1             22.0           2012.0   \n","780825                       NaN       1             22.0           2012.0   \n","780826                       NaN       1             22.0           2012.0   \n","780827                       NaN       1             22.0           2012.0   \n","780828                       NaN       1             22.0           2012.0   \n","\n","           PromoInterval  week  year    avg_sales  avg_customers  \n","0                    NaN     1  2014  3611.875000         449.25  \n","1                    NaN     1  2014  3611.875000         449.25  \n","2                    NaN     1  2014  3611.875000         449.25  \n","3                    NaN    52  2014  3500.142857         424.00  \n","4                    NaN    52  2014  3500.142857         424.00  \n","...                  ...   ...   ...          ...            ...  \n","780824  Mar,Jun,Sept,Dec     1  2013  3600.625000         262.00  \n","780825  Mar,Jun,Sept,Dec     1  2013  3600.625000         262.00  \n","780826  Mar,Jun,Sept,Dec     1  2013  3600.625000         262.00  \n","780827  Mar,Jun,Sept,Dec     1  2013  3600.625000         262.00  \n","780828  Mar,Jun,Sept,Dec     1  2013  3600.625000         262.00  \n","\n","[780829 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-dd0789f3-60d2-447f-bbab-95553d1da36a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Store</th>\n","      <th>DayOfWeek</th>\n","      <th>Date</th>\n","      <th>Sales</th>\n","      <th>Customers</th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>StateHoliday</th>\n","      <th>SchoolHoliday</th>\n","      <th>StoreType</th>\n","      <th>...</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>Promo2</th>\n","      <th>Promo2SinceWeek</th>\n","      <th>Promo2SinceYear</th>\n","      <th>PromoInterval</th>\n","      <th>week</th>\n","      <th>year</th>\n","      <th>avg_sales</th>\n","      <th>avg_customers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2014-12-31</td>\n","      <td>2605</td>\n","      <td>327</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2014</td>\n","      <td>3611.875000</td>\n","      <td>449.25</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2014-12-30</td>\n","      <td>6466</td>\n","      <td>703</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2014</td>\n","      <td>3611.875000</td>\n","      <td>449.25</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2014-12-29</td>\n","      <td>6463</td>\n","      <td>700</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2014</td>\n","      <td>3611.875000</td>\n","      <td>449.25</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>2014-12-28</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>52</td>\n","      <td>2014</td>\n","      <td>3500.142857</td>\n","      <td>424.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>2014-12-27</td>\n","      <td>6057</td>\n","      <td>684</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>c</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>2008.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>52</td>\n","      <td>2014</td>\n","      <td>3500.142857</td>\n","      <td>424.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>780824</th>\n","      <td>1115</td>\n","      <td>6</td>\n","      <td>2013-01-05</td>\n","      <td>4771</td>\n","      <td>339</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","      <td>1</td>\n","      <td>2013</td>\n","      <td>3600.625000</td>\n","      <td>262.00</td>\n","    </tr>\n","    <tr>\n","      <th>780825</th>\n","      <td>1115</td>\n","      <td>5</td>\n","      <td>2013-01-04</td>\n","      <td>4540</td>\n","      <td>326</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","      <td>1</td>\n","      <td>2013</td>\n","      <td>3600.625000</td>\n","      <td>262.00</td>\n","    </tr>\n","    <tr>\n","      <th>780826</th>\n","      <td>1115</td>\n","      <td>4</td>\n","      <td>2013-01-03</td>\n","      <td>4297</td>\n","      <td>300</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","      <td>1</td>\n","      <td>2013</td>\n","      <td>3600.625000</td>\n","      <td>262.00</td>\n","    </tr>\n","    <tr>\n","      <th>780827</th>\n","      <td>1115</td>\n","      <td>3</td>\n","      <td>2013-01-02</td>\n","      <td>3697</td>\n","      <td>305</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","      <td>1</td>\n","      <td>2013</td>\n","      <td>3600.625000</td>\n","      <td>262.00</td>\n","    </tr>\n","    <tr>\n","      <th>780828</th>\n","      <td>1115</td>\n","      <td>2</td>\n","      <td>2013-01-01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>d</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>2012.0</td>\n","      <td>Mar,Jun,Sept,Dec</td>\n","      <td>1</td>\n","      <td>2013</td>\n","      <td>3600.625000</td>\n","      <td>262.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>780829 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd0789f3-60d2-447f-bbab-95553d1da36a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd0789f3-60d2-447f-bbab-95553d1da36a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd0789f3-60d2-447f-bbab-95553d1da36a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0159bb43-ff92-44d6-8636-3fd03753d5ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0159bb43-ff92-44d6-8636-3fd03753d5ed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0159bb43-ff92-44d6-8636-3fd03753d5ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["#average sales from previous year 2014\n","X_test['week'] = X_test['Date'].dt.week\n","X_test['year'] = X_test['Date'].dt.year\n","\n","previous_year_df = X[X['year'] == 2014]\n","average_sales_by_week = previous_year_df.groupby(['Store','week'])['Sales'].mean().reset_index()\n","average_sales_by_week.columns = ['Store', 'week', 'avg_sales']\n","\n","average_customers_by_week = previous_year_df.groupby(['Store', 'week'])['Customers'].mean().reset_index()\n","average_customers_by_week.columns = ['Store','week', 'avg_customers']\n","\n","\n","X_test = pd.merge(X_test, average_sales_by_week, on=['Store', 'week'], how='left')\n","X_test = pd.merge(X_test, average_customers_by_week, on=['Store', 'week'], how='left')\n","# Display the result\n","print(X_test.iloc[252])\n","print(y_test.iloc[252])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"diEaQdW40bfH","executionInfo":{"status":"ok","timestamp":1701118310481,"user_tz":300,"elapsed":407,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"7f523b19-d5ed-4272-fe07-4cbfe05a0cdb"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-90-3bfb98b922e1>:2: FutureWarning: Series.dt.weekofyear and Series.dt.week have been deprecated. Please use Series.dt.isocalendar().week instead.\n","  X_test['week'] = X_test['Date'].dt.week\n"]},{"output_type":"stream","name":"stdout","text":["Store                                          2\n","DayOfWeek                                      7\n","Date                         2015-06-21 00:00:00\n","Open                                           0\n","Promo                                          0\n","StateHoliday                                   0\n","SchoolHoliday                                  0\n","StoreType                                      a\n","Assortment                                     a\n","CompetitionDistance                        570.0\n","CompetitionOpenSinceMonth                   11.0\n","CompetitionOpenSinceYear                  2007.0\n","Promo2                                         1\n","Promo2SinceWeek                             13.0\n","Promo2SinceYear                           2010.0\n","PromoInterval                    Jan,Apr,Jul,Oct\n","week                                          25\n","year                                        2015\n","avg_sales                            4580.142857\n","avg_customers                         518.142857\n","Name: 252, dtype: object\n","0\n"]}]},{"cell_type":"markdown","metadata":{"id":"isJngOtvqeAa"},"source":["### Encoding\n","\n","How will we encode categorical values? Um, which columns ARE categorical?"]},{"cell_type":"code","source":["X['StateHoliday'][X['StateHoliday'] == 0] = '0'\n","X_test['StateHoliday'][X_test['StateHoliday'] == 0] = '0'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4DFRAbH2jOaE","executionInfo":{"status":"ok","timestamp":1701118310481,"user_tz":300,"elapsed":13,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"dd30bd4e-e160-4a70-99ec-e7200a04ea0b"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-91-5642ab0232ba>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  X['StateHoliday'][X['StateHoliday'] == 0] = '0'\n","<ipython-input-91-5642ab0232ba>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  X_test['StateHoliday'][X_test['StateHoliday'] == 0] = '0'\n"]}]},{"cell_type":"code","source":["for i in range(32, 53):\n","    X_test['week_'+str(i)] = 0"],"metadata":{"id":"ji_0yafuCDwH","executionInfo":{"status":"ok","timestamp":1701118310482,"user_tz":300,"elapsed":11,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["X = pd.get_dummies(X, columns=['DayOfWeek', 'week', 'year', 'StoreType', 'Assortment'])\n","X_test = pd.get_dummies(X_test, columns=['DayOfWeek', 'week', 'year', 'StoreType', 'Assortment'])\n"],"metadata":{"id":"RIFG6DGpwfgV","executionInfo":{"status":"ok","timestamp":1701118311267,"user_tz":300,"elapsed":795,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["X['year_2015'] = 0;\n","X_test['year_2013'] = 0;\n","X_test['year_2014'] = 0;"],"metadata":{"id":"CyaqmLqAyPd_","executionInfo":{"status":"ok","timestamp":1701118311268,"user_tz":300,"elapsed":6,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":94,"outputs":[]},{"cell_type":"markdown","source":["### Okay, so what do we do with the categoricals?\n","* from class: embeddings!\n","* here: one-hot or ordinal encoding. discussion: when use which type?\n","\n","Below, we \"cheat\" by using Ordinal. Why is this cheating? What's easier about it? Why is it technically kinda wrong?"],"metadata":{"id":"0leSLbFoelIB"}},{"cell_type":"code","source":["!pip install category_encoders"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bosuhpxb85ru","executionInfo":{"status":"ok","timestamp":1701118316317,"user_tz":300,"elapsed":5053,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"8e89f963-b869-4eca-f1f3-c019b624609c"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: category_encoders in /usr/local/lib/python3.10/dist-packages (2.6.3)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (1.23.5)\n","Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (1.3.2)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (1.11.3)\n","Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (0.14.0)\n","Requirement already satisfied: pandas>=1.0.5 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (1.5.3)\n","Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category_encoders) (0.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.5->category_encoders) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0.5->category_encoders) (2023.3.post1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.1->category_encoders) (1.16.0)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->category_encoders) (3.2.0)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.9.0->category_encoders) (23.2)\n"]}]},{"cell_type":"code","source":["\n","import category_encoders as ce\n","encoder = ce.TargetEncoder(cols=['Store'])\n","\n","# Fit and transform on the entire dataset\n","df_encoded = encoder.fit_transform(X['Store'], X['Sales'])\n","\n","store_encoding_map = dict(zip(X['Store'], df_encoded['Store']))\n","\n","X['store_encoded'] = X['Store'].map(store_encoding_map)\n","X_test['store_encoded'] = X_test['Store'].map(store_encoding_map)\n"],"metadata":{"id":"MF-Vne-V3mwC","executionInfo":{"status":"ok","timestamp":1701118318079,"user_tz":300,"elapsed":1770,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["X = X[X['Date'] >'2014-01-01']\n","y_train = X['Sales']"],"metadata":{"id":"wffYA-mCaNRU","executionInfo":{"status":"ok","timestamp":1701118318389,"user_tz":300,"elapsed":318,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":97,"outputs":[]},{"cell_type":"code","source":["\n","X = X.drop(['Store', 'Sales', 'Customers', 'Date', 'PromoInterval', 'Promo2', 'Promo2SinceWeek', 'Promo2SinceYear', 'StateHoliday'], axis=1)\n","X_test = X_test.drop(['Store', 'Date', 'PromoInterval', 'Promo2', 'Promo2SinceWeek', 'Promo2SinceYear', 'StateHoliday'], axis=1)"],"metadata":{"id":"fzEm79X7-wZU","executionInfo":{"status":"ok","timestamp":1701118318616,"user_tz":300,"elapsed":233,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":98,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PZYM4rePqi8I"},"source":["### Split"]},{"cell_type":"code","source":["X['CompetitionOpenSinceMonth'] = X['CompetitionOpenSinceMonth'].fillna(X['CompetitionOpenSinceMonth'].mean())\n","X['CompetitionOpenSinceYear'] = X['CompetitionOpenSinceYear'].fillna(X['CompetitionOpenSinceYear'].mean())\n","X['CompetitionDistance'] = X['CompetitionDistance'].fillna(X['CompetitionDistance'].mean())\n","X['avg_sales'] = X['avg_sales'].fillna(X['avg_sales'].mean())\n","X['avg_customers'] = X['avg_customers'].fillna(X['avg_customers'].mean())\n","\n","\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"qfhlhN6SBS3H","executionInfo":{"status":"ok","timestamp":1701118318616,"user_tz":300,"elapsed":9,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"e4859cc6-2036-43a5-b9e2-f8749d3eab62"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Open  Promo  SchoolHoliday  CompetitionDistance  \\\n","0          1      0              1               1270.0   \n","1          1      0              1               1270.0   \n","2          1      0              1               1270.0   \n","3          0      0              1               1270.0   \n","4          1      0              1               1270.0   \n","...      ...    ...            ...                  ...   \n","780458     1      1              1               5350.0   \n","780459     0      0              1               5350.0   \n","780460     1      0              1               5350.0   \n","780461     1      0              1               5350.0   \n","780462     1      0              1               5350.0   \n","\n","        CompetitionOpenSinceMonth  CompetitionOpenSinceYear    avg_sales  \\\n","0                        9.000000               2008.000000  3611.875000   \n","1                        9.000000               2008.000000  3611.875000   \n","2                        9.000000               2008.000000  3611.875000   \n","3                        9.000000               2008.000000  3500.142857   \n","4                        9.000000               2008.000000  3500.142857   \n","...                           ...                       ...          ...   \n","780458                   7.219697               2008.727248  4491.857143   \n","780459                   7.219697               2008.727248  3600.625000   \n","780460                   7.219697               2008.727248  3600.625000   \n","780461                   7.219697               2008.727248  3600.625000   \n","780462                   7.219697               2008.727248  3600.625000   \n","\n","        avg_customers  DayOfWeek_1  DayOfWeek_2  ...  year_2014  StoreType_a  \\\n","0          449.250000            0            0  ...          1            0   \n","1          449.250000            0            1  ...          1            0   \n","2          449.250000            1            0  ...          1            0   \n","3          424.000000            0            0  ...          1            0   \n","4          424.000000            0            0  ...          1            0   \n","...               ...          ...          ...  ...        ...          ...   \n","780458     310.857143            1            0  ...          1            0   \n","780459     262.000000            0            0  ...          1            0   \n","780460     262.000000            0            0  ...          1            0   \n","780461     262.000000            0            0  ...          1            0   \n","780462     262.000000            0            0  ...          1            0   \n","\n","        StoreType_b  StoreType_c  StoreType_d  Assortment_a  Assortment_b  \\\n","0                 0            1            0             1             0   \n","1                 0            1            0             1             0   \n","2                 0            1            0             1             0   \n","3                 0            1            0             1             0   \n","4                 0            1            0             1             0   \n","...             ...          ...          ...           ...           ...   \n","780458            0            0            1             0             0   \n","780459            0            0            1             0             0   \n","780460            0            0            1             0             0   \n","780461            0            0            1             0             0   \n","780462            0            0            1             0             0   \n","\n","        Assortment_c  year_2015  store_encoded  \n","0                  0          0    4006.230137  \n","1                  0          0    4006.230137  \n","2                  0          0    4006.230137  \n","3                  0          0    4006.230137  \n","4                  0          0    4006.230137  \n","...              ...        ...            ...  \n","780458             1          0    5041.343836  \n","780459             1          0    5041.343836  \n","780460             1          0    5041.343836  \n","780461             1          0    5041.343836  \n","780462             1          0    5041.343836  \n","\n","[372740 rows x 78 columns]"],"text/html":["\n","  <div id=\"df-f8aab000-57de-442e-a9b5-f552498d20bb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>avg_sales</th>\n","      <th>avg_customers</th>\n","      <th>DayOfWeek_1</th>\n","      <th>DayOfWeek_2</th>\n","      <th>...</th>\n","      <th>year_2014</th>\n","      <th>StoreType_a</th>\n","      <th>StoreType_b</th>\n","      <th>StoreType_c</th>\n","      <th>StoreType_d</th>\n","      <th>Assortment_a</th>\n","      <th>Assortment_b</th>\n","      <th>Assortment_c</th>\n","      <th>year_2015</th>\n","      <th>store_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>3611.875000</td>\n","      <td>449.250000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>3611.875000</td>\n","      <td>449.250000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>3611.875000</td>\n","      <td>449.250000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>3500.142857</td>\n","      <td>424.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>3500.142857</td>\n","      <td>424.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>780458</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.219697</td>\n","      <td>2008.727248</td>\n","      <td>4491.857143</td>\n","      <td>310.857143</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>780459</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.219697</td>\n","      <td>2008.727248</td>\n","      <td>3600.625000</td>\n","      <td>262.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>780460</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.219697</td>\n","      <td>2008.727248</td>\n","      <td>3600.625000</td>\n","      <td>262.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>780461</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.219697</td>\n","      <td>2008.727248</td>\n","      <td>3600.625000</td>\n","      <td>262.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>780462</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.219697</td>\n","      <td>2008.727248</td>\n","      <td>3600.625000</td>\n","      <td>262.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>372740 rows × 78 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8aab000-57de-442e-a9b5-f552498d20bb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f8aab000-57de-442e-a9b5-f552498d20bb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f8aab000-57de-442e-a9b5-f552498d20bb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a6231af3-c10a-4b7e-bf7a-103c53060af1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6231af3-c10a-4b7e-bf7a-103c53060af1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a6231af3-c10a-4b7e-bf7a-103c53060af1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["\n","X_test['CompetitionOpenSinceMonth'] = X_test['CompetitionOpenSinceMonth'].fillna(X_test['CompetitionOpenSinceMonth'].mean())\n","X_test['CompetitionOpenSinceYear'] = X_test['CompetitionOpenSinceYear'].fillna(X_test['CompetitionOpenSinceYear'].mean())\n","X_test['CompetitionDistance'] = X_test['CompetitionDistance'].fillna(X_test['CompetitionDistance'].mean())\n","X_test['avg_sales'] = X_test['avg_sales'].fillna(X_test['avg_sales'].mean())\n","X_test['avg_customers'] = X_test['avg_customers'].fillna(X_test['avg_customers'].mean())\n","\n","X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"JH9WdN7OotL9","executionInfo":{"status":"ok","timestamp":1701118319121,"user_tz":300,"elapsed":512,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"c46d78c7-c354-4de6-a33e-87180e73072c"},"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Open  Promo  SchoolHoliday  CompetitionDistance  \\\n","0          1      1              1               1270.0   \n","1          1      1              1               1270.0   \n","2          1      1              1               1270.0   \n","3          1      1              1               1270.0   \n","4          1      1              1               1270.0   \n","...      ...    ...            ...                  ...   \n","236375     1      1              1               5350.0   \n","236376     0      0              1               5350.0   \n","236377     1      0              1               5350.0   \n","236378     1      0              1               5350.0   \n","236379     0      0              1               5350.0   \n","\n","        CompetitionOpenSinceMonth  CompetitionOpenSinceYear    avg_sales  \\\n","0                        9.000000               2008.000000  4426.571429   \n","1                        9.000000               2008.000000  4426.571429   \n","2                        9.000000               2008.000000  4426.571429   \n","3                        9.000000               2008.000000  4426.571429   \n","4                        9.000000               2008.000000  4426.571429   \n","...                           ...                       ...          ...   \n","236375                   7.224704               2008.668857  5660.714286   \n","236376                   7.224704               2008.668857  4306.875000   \n","236377                   7.224704               2008.668857  4306.875000   \n","236378                   7.224704               2008.668857  4306.875000   \n","236379                   7.224704               2008.668857  4306.875000   \n","\n","        avg_customers  week_32  week_33  ...  StoreType_a  StoreType_b  \\\n","0          494.857143        0        0  ...            0            0   \n","1          494.857143        0        0  ...            0            0   \n","2          494.857143        0        0  ...            0            0   \n","3          494.857143        0        0  ...            0            0   \n","4          494.857143        0        0  ...            0            0   \n","...               ...      ...      ...  ...          ...          ...   \n","236375     383.428571        0        0  ...            0            0   \n","236376     320.500000        0        0  ...            0            0   \n","236377     320.500000        0        0  ...            0            0   \n","236378     320.500000        0        0  ...            0            0   \n","236379     320.500000        0        0  ...            0            0   \n","\n","        StoreType_c  StoreType_d  Assortment_a  Assortment_b  Assortment_c  \\\n","0                 1            0             1             0             0   \n","1                 1            0             1             0             0   \n","2                 1            0             1             0             0   \n","3                 1            0             1             0             0   \n","4                 1            0             1             0             0   \n","...             ...          ...           ...           ...           ...   \n","236375            0            1             0             0             1   \n","236376            0            1             0             0             1   \n","236377            0            1             0             0             1   \n","236378            0            1             0             0             1   \n","236379            0            1             0             0             1   \n","\n","        year_2013  year_2014  store_encoded  \n","0               0          0    4006.230137  \n","1               0          0    4006.230137  \n","2               0          0    4006.230137  \n","3               0          0    4006.230137  \n","4               0          0    4006.230137  \n","...           ...        ...            ...  \n","236375          0          0    5041.343836  \n","236376          0          0    5041.343836  \n","236377          0          0    5041.343836  \n","236378          0          0    5041.343836  \n","236379          0          0    5041.343836  \n","\n","[236380 rows x 78 columns]"],"text/html":["\n","  <div id=\"df-1b499a81-5b88-4c3e-8b80-ea687259f2ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>avg_sales</th>\n","      <th>avg_customers</th>\n","      <th>week_32</th>\n","      <th>week_33</th>\n","      <th>...</th>\n","      <th>StoreType_a</th>\n","      <th>StoreType_b</th>\n","      <th>StoreType_c</th>\n","      <th>StoreType_d</th>\n","      <th>Assortment_a</th>\n","      <th>Assortment_b</th>\n","      <th>Assortment_c</th>\n","      <th>year_2013</th>\n","      <th>year_2014</th>\n","      <th>store_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>236375</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>5660.714286</td>\n","      <td>383.428571</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236376</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236377</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236378</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236379</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5041.343836</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236380 rows × 78 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b499a81-5b88-4c3e-8b80-ea687259f2ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b499a81-5b88-4c3e-8b80-ea687259f2ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b499a81-5b88-4c3e-8b80-ea687259f2ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-772b4448-97b6-4ca0-a11a-34cc3d942ea5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-772b4448-97b6-4ca0-a11a-34cc3d942ea5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-772b4448-97b6-4ca0-a11a-34cc3d942ea5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","source":["### Creating a model\n","\n","We'll work through a XGBoost model together.\n","\n","Discussion:\n","* what's our target again? so what does this mean our model type should be? classification?\n","* and what about our training data distributions?\n"],"metadata":{"id":"u5It6lEIkZNM"}},{"cell_type":"markdown","source":["#### install xgboost stuff"],"metadata":{"id":"ttdZM0dylEXk"}},{"cell_type":"code","source":["!pip install xgboost -U\n","import xgboost\n","xgboost.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"oHnNhnFKkbN2","executionInfo":{"status":"ok","timestamp":1701118331750,"user_tz":300,"elapsed":12640,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"7a658340-d07d-4ce5-8734-a845a6b0c440"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: xgboost in /usr/local/lib/python3.10/dist-packages (2.0.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.23.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.11.3)\n"]},{"output_type":"execute_result","data":{"text/plain":["'2.0.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["%%capture\n","!pip install sktime"],"metadata":{"id":"9cJ34tJrksqx","executionInfo":{"status":"ok","timestamp":1701118344639,"user_tz":300,"elapsed":12917,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":102,"outputs":[]},{"cell_type":"markdown","source":["#### Train the regression model\n"],"metadata":{"id":"LZh1GOERkzG8"}},{"cell_type":"code","source":["from xgboost import DMatrix\n","from xgboost import XGBRegressor\n","from sktime.performance_metrics.forecasting import MeanSquaredPercentageError\n","\n","model = XGBRegressor(random_state=42, n_jobs=-1, n_estimators=1500, max_depth=5, tree_method='gpu_hist', predictor='gpu_predictor', eval_metric='rmse')\n","model.fit(X, y_train, eval_set=[(X,y_train)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BHXXp0UPkfSo","executionInfo":{"status":"ok","timestamp":1701118374596,"user_tz":300,"elapsed":29986,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"8cb8ea1b-4bef-4fe5-96fd-2ff9275eb22d"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["[0]\tvalidation_0-rmse:2913.26213\n","[1]\tvalidation_0-rmse:2275.32877\n","[2]\tvalidation_0-rmse:1866.95772\n","[3]\tvalidation_0-rmse:1617.11948\n","[4]\tvalidation_0-rmse:1467.38592\n","[5]\tvalidation_0-rmse:1377.41438\n","[6]\tvalidation_0-rmse:1324.67341\n","[7]\tvalidation_0-rmse:1282.91554\n","[8]\tvalidation_0-rmse:1259.14518\n","[9]\tvalidation_0-rmse:1239.85573\n","[10]\tvalidation_0-rmse:1218.79754\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/xgboost/core.py:160: UserWarning: [20:52:26] WARNING: /workspace/src/common/error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.\n","\n","    E.g. tree_method = \"hist\", device = \"cuda\"\n","\n","  warnings.warn(smsg, UserWarning)\n","/usr/local/lib/python3.10/dist-packages/xgboost/core.py:160: UserWarning: [20:52:26] WARNING: /workspace/src/learner.cc:742: \n","Parameters: { \"predictor\" } are not used.\n","\n","  warnings.warn(smsg, UserWarning)\n"]},{"output_type":"stream","name":"stdout","text":["[11]\tvalidation_0-rmse:1182.06167\n","[12]\tvalidation_0-rmse:1172.60094\n","[13]\tvalidation_0-rmse:1162.00135\n","[14]\tvalidation_0-rmse:1141.37867\n","[15]\tvalidation_0-rmse:1133.92546\n","[16]\tvalidation_0-rmse:1129.20431\n","[17]\tvalidation_0-rmse:1123.56752\n","[18]\tvalidation_0-rmse:1112.17803\n","[19]\tvalidation_0-rmse:1108.06385\n","[20]\tvalidation_0-rmse:1097.06520\n","[21]\tvalidation_0-rmse:1094.15052\n","[22]\tvalidation_0-rmse:1091.17302\n","[23]\tvalidation_0-rmse:1088.03983\n","[24]\tvalidation_0-rmse:1078.25613\n","[25]\tvalidation_0-rmse:1074.82999\n","[26]\tvalidation_0-rmse:1071.04690\n","[27]\tvalidation_0-rmse:1068.05477\n","[28]\tvalidation_0-rmse:1057.42597\n","[29]\tvalidation_0-rmse:1055.49172\n","[30]\tvalidation_0-rmse:1052.75445\n","[31]\tvalidation_0-rmse:1045.87156\n","[32]\tvalidation_0-rmse:1040.37385\n","[33]\tvalidation_0-rmse:1032.66649\n","[34]\tvalidation_0-rmse:1030.47894\n","[35]\tvalidation_0-rmse:1028.89480\n","[36]\tvalidation_0-rmse:1026.91756\n","[37]\tvalidation_0-rmse:1023.91321\n","[38]\tvalidation_0-rmse:1021.40565\n","[39]\tvalidation_0-rmse:1020.17233\n","[40]\tvalidation_0-rmse:1010.24112\n","[41]\tvalidation_0-rmse:1006.46656\n","[42]\tvalidation_0-rmse:1005.56441\n","[43]\tvalidation_0-rmse:1001.86871\n","[44]\tvalidation_0-rmse:1000.13735\n","[45]\tvalidation_0-rmse:999.26755\n","[46]\tvalidation_0-rmse:994.92868\n","[47]\tvalidation_0-rmse:993.59306\n","[48]\tvalidation_0-rmse:991.07073\n","[49]\tvalidation_0-rmse:989.07302\n","[50]\tvalidation_0-rmse:986.52879\n","[51]\tvalidation_0-rmse:985.41526\n","[52]\tvalidation_0-rmse:984.09351\n","[53]\tvalidation_0-rmse:982.98873\n","[54]\tvalidation_0-rmse:981.04100\n","[55]\tvalidation_0-rmse:978.80904\n","[56]\tvalidation_0-rmse:975.52227\n","[57]\tvalidation_0-rmse:975.00803\n","[58]\tvalidation_0-rmse:972.86731\n","[59]\tvalidation_0-rmse:968.83429\n","[60]\tvalidation_0-rmse:966.61311\n","[61]\tvalidation_0-rmse:965.42483\n","[62]\tvalidation_0-rmse:963.29443\n","[63]\tvalidation_0-rmse:961.02489\n","[64]\tvalidation_0-rmse:959.27981\n","[65]\tvalidation_0-rmse:955.81403\n","[66]\tvalidation_0-rmse:954.45932\n","[67]\tvalidation_0-rmse:953.86610\n","[68]\tvalidation_0-rmse:952.82439\n","[69]\tvalidation_0-rmse:952.40786\n","[70]\tvalidation_0-rmse:950.92192\n","[71]\tvalidation_0-rmse:950.18137\n","[72]\tvalidation_0-rmse:949.43147\n","[73]\tvalidation_0-rmse:947.05688\n","[74]\tvalidation_0-rmse:946.03507\n","[75]\tvalidation_0-rmse:944.15003\n","[76]\tvalidation_0-rmse:940.97509\n","[77]\tvalidation_0-rmse:939.22555\n","[78]\tvalidation_0-rmse:936.50325\n","[79]\tvalidation_0-rmse:935.28715\n","[80]\tvalidation_0-rmse:933.47145\n","[81]\tvalidation_0-rmse:931.72210\n","[82]\tvalidation_0-rmse:931.14460\n","[83]\tvalidation_0-rmse:929.70471\n","[84]\tvalidation_0-rmse:928.91961\n","[85]\tvalidation_0-rmse:926.76405\n","[86]\tvalidation_0-rmse:924.94279\n","[87]\tvalidation_0-rmse:923.79561\n","[88]\tvalidation_0-rmse:922.95478\n","[89]\tvalidation_0-rmse:921.34303\n","[90]\tvalidation_0-rmse:920.51035\n","[91]\tvalidation_0-rmse:916.68672\n","[92]\tvalidation_0-rmse:915.69120\n","[93]\tvalidation_0-rmse:914.49525\n","[94]\tvalidation_0-rmse:912.93500\n","[95]\tvalidation_0-rmse:911.94276\n","[96]\tvalidation_0-rmse:909.32063\n","[97]\tvalidation_0-rmse:907.56025\n","[98]\tvalidation_0-rmse:904.21749\n","[99]\tvalidation_0-rmse:903.74016\n","[100]\tvalidation_0-rmse:902.00858\n","[101]\tvalidation_0-rmse:900.60250\n","[102]\tvalidation_0-rmse:898.96443\n","[103]\tvalidation_0-rmse:896.97172\n","[104]\tvalidation_0-rmse:896.36543\n","[105]\tvalidation_0-rmse:895.66879\n","[106]\tvalidation_0-rmse:894.72047\n","[107]\tvalidation_0-rmse:890.74869\n","[108]\tvalidation_0-rmse:888.11589\n","[109]\tvalidation_0-rmse:884.80327\n","[110]\tvalidation_0-rmse:883.68231\n","[111]\tvalidation_0-rmse:882.57722\n","[112]\tvalidation_0-rmse:881.73875\n","[113]\tvalidation_0-rmse:880.69423\n","[114]\tvalidation_0-rmse:880.37102\n","[115]\tvalidation_0-rmse:879.21176\n","[116]\tvalidation_0-rmse:878.74509\n","[117]\tvalidation_0-rmse:877.83270\n","[118]\tvalidation_0-rmse:876.44087\n","[119]\tvalidation_0-rmse:875.14258\n","[120]\tvalidation_0-rmse:873.52423\n","[121]\tvalidation_0-rmse:871.74964\n","[122]\tvalidation_0-rmse:871.15039\n","[123]\tvalidation_0-rmse:870.72395\n","[124]\tvalidation_0-rmse:870.20550\n","[125]\tvalidation_0-rmse:869.26963\n","[126]\tvalidation_0-rmse:867.74225\n","[127]\tvalidation_0-rmse:865.42212\n","[128]\tvalidation_0-rmse:864.89857\n","[129]\tvalidation_0-rmse:864.44225\n","[130]\tvalidation_0-rmse:863.00122\n","[131]\tvalidation_0-rmse:861.30553\n","[132]\tvalidation_0-rmse:860.51429\n","[133]\tvalidation_0-rmse:859.81933\n","[134]\tvalidation_0-rmse:859.32831\n","[135]\tvalidation_0-rmse:858.51743\n","[136]\tvalidation_0-rmse:858.05692\n","[137]\tvalidation_0-rmse:857.69955\n","[138]\tvalidation_0-rmse:856.56791\n","[139]\tvalidation_0-rmse:855.71016\n","[140]\tvalidation_0-rmse:854.58210\n","[141]\tvalidation_0-rmse:853.93689\n","[142]\tvalidation_0-rmse:852.85855\n","[143]\tvalidation_0-rmse:852.29498\n","[144]\tvalidation_0-rmse:851.38108\n","[145]\tvalidation_0-rmse:850.46046\n","[146]\tvalidation_0-rmse:850.15059\n","[147]\tvalidation_0-rmse:849.84799\n","[148]\tvalidation_0-rmse:849.34096\n","[149]\tvalidation_0-rmse:849.04124\n","[150]\tvalidation_0-rmse:848.23044\n","[151]\tvalidation_0-rmse:847.17298\n","[152]\tvalidation_0-rmse:846.44642\n","[153]\tvalidation_0-rmse:844.27752\n","[154]\tvalidation_0-rmse:844.01434\n","[155]\tvalidation_0-rmse:842.38576\n","[156]\tvalidation_0-rmse:840.37585\n","[157]\tvalidation_0-rmse:839.92396\n","[158]\tvalidation_0-rmse:839.01328\n","[159]\tvalidation_0-rmse:837.98763\n","[160]\tvalidation_0-rmse:837.29695\n","[161]\tvalidation_0-rmse:837.00911\n","[162]\tvalidation_0-rmse:836.19774\n","[163]\tvalidation_0-rmse:835.73917\n","[164]\tvalidation_0-rmse:835.36977\n","[165]\tvalidation_0-rmse:835.00194\n","[166]\tvalidation_0-rmse:834.61447\n","[167]\tvalidation_0-rmse:834.42741\n","[168]\tvalidation_0-rmse:834.20134\n","[169]\tvalidation_0-rmse:833.76072\n","[170]\tvalidation_0-rmse:832.65884\n","[171]\tvalidation_0-rmse:831.23922\n","[172]\tvalidation_0-rmse:831.01095\n","[173]\tvalidation_0-rmse:830.51646\n","[174]\tvalidation_0-rmse:830.05154\n","[175]\tvalidation_0-rmse:829.71049\n","[176]\tvalidation_0-rmse:829.46230\n","[177]\tvalidation_0-rmse:829.17235\n","[178]\tvalidation_0-rmse:827.29728\n","[179]\tvalidation_0-rmse:826.97790\n","[180]\tvalidation_0-rmse:826.62258\n","[181]\tvalidation_0-rmse:826.30103\n","[182]\tvalidation_0-rmse:825.81862\n","[183]\tvalidation_0-rmse:825.47442\n","[184]\tvalidation_0-rmse:825.01087\n","[185]\tvalidation_0-rmse:824.30241\n","[186]\tvalidation_0-rmse:824.11245\n","[187]\tvalidation_0-rmse:823.73559\n","[188]\tvalidation_0-rmse:822.99423\n","[189]\tvalidation_0-rmse:821.73136\n","[190]\tvalidation_0-rmse:821.26233\n","[191]\tvalidation_0-rmse:820.53292\n","[192]\tvalidation_0-rmse:819.24753\n","[193]\tvalidation_0-rmse:818.71628\n","[194]\tvalidation_0-rmse:817.84189\n","[195]\tvalidation_0-rmse:816.81655\n","[196]\tvalidation_0-rmse:816.45454\n","[197]\tvalidation_0-rmse:815.48335\n","[198]\tvalidation_0-rmse:814.94509\n","[199]\tvalidation_0-rmse:814.09883\n","[200]\tvalidation_0-rmse:813.21260\n","[201]\tvalidation_0-rmse:812.48966\n","[202]\tvalidation_0-rmse:811.77521\n","[203]\tvalidation_0-rmse:810.91658\n","[204]\tvalidation_0-rmse:810.60194\n","[205]\tvalidation_0-rmse:809.50107\n","[206]\tvalidation_0-rmse:809.23387\n","[207]\tvalidation_0-rmse:807.06648\n","[208]\tvalidation_0-rmse:806.46611\n","[209]\tvalidation_0-rmse:805.47964\n","[210]\tvalidation_0-rmse:805.14977\n","[211]\tvalidation_0-rmse:804.89750\n","[212]\tvalidation_0-rmse:803.55752\n","[213]\tvalidation_0-rmse:803.27329\n","[214]\tvalidation_0-rmse:802.92467\n","[215]\tvalidation_0-rmse:802.44048\n","[216]\tvalidation_0-rmse:802.18799\n","[217]\tvalidation_0-rmse:801.74308\n","[218]\tvalidation_0-rmse:799.86219\n","[219]\tvalidation_0-rmse:799.17644\n","[220]\tvalidation_0-rmse:798.86185\n","[221]\tvalidation_0-rmse:798.13216\n","[222]\tvalidation_0-rmse:797.79589\n","[223]\tvalidation_0-rmse:797.45166\n","[224]\tvalidation_0-rmse:796.98587\n","[225]\tvalidation_0-rmse:796.48581\n","[226]\tvalidation_0-rmse:794.87702\n","[227]\tvalidation_0-rmse:794.09219\n","[228]\tvalidation_0-rmse:793.86051\n","[229]\tvalidation_0-rmse:793.30671\n","[230]\tvalidation_0-rmse:792.29475\n","[231]\tvalidation_0-rmse:791.65129\n","[232]\tvalidation_0-rmse:791.11876\n","[233]\tvalidation_0-rmse:790.79539\n","[234]\tvalidation_0-rmse:790.17943\n","[235]\tvalidation_0-rmse:789.85771\n","[236]\tvalidation_0-rmse:789.61233\n","[237]\tvalidation_0-rmse:789.01211\n","[238]\tvalidation_0-rmse:788.86479\n","[239]\tvalidation_0-rmse:788.18690\n","[240]\tvalidation_0-rmse:786.18238\n","[241]\tvalidation_0-rmse:785.82116\n","[242]\tvalidation_0-rmse:784.90815\n","[243]\tvalidation_0-rmse:784.58300\n","[244]\tvalidation_0-rmse:784.25317\n","[245]\tvalidation_0-rmse:783.14726\n","[246]\tvalidation_0-rmse:782.63009\n","[247]\tvalidation_0-rmse:781.55463\n","[248]\tvalidation_0-rmse:781.00336\n","[249]\tvalidation_0-rmse:780.60926\n","[250]\tvalidation_0-rmse:780.42586\n","[251]\tvalidation_0-rmse:779.91045\n","[252]\tvalidation_0-rmse:779.57037\n","[253]\tvalidation_0-rmse:779.31747\n","[254]\tvalidation_0-rmse:779.10881\n","[255]\tvalidation_0-rmse:778.74314\n","[256]\tvalidation_0-rmse:778.49530\n","[257]\tvalidation_0-rmse:777.68196\n","[258]\tvalidation_0-rmse:777.36045\n","[259]\tvalidation_0-rmse:777.09441\n","[260]\tvalidation_0-rmse:776.64459\n","[261]\tvalidation_0-rmse:776.09141\n","[262]\tvalidation_0-rmse:775.83652\n","[263]\tvalidation_0-rmse:775.24320\n","[264]\tvalidation_0-rmse:774.70846\n","[265]\tvalidation_0-rmse:774.52736\n","[266]\tvalidation_0-rmse:774.20058\n","[267]\tvalidation_0-rmse:773.97825\n","[268]\tvalidation_0-rmse:773.55938\n","[269]\tvalidation_0-rmse:773.31281\n","[270]\tvalidation_0-rmse:772.94387\n","[271]\tvalidation_0-rmse:772.80353\n","[272]\tvalidation_0-rmse:772.50900\n","[273]\tvalidation_0-rmse:772.35903\n","[274]\tvalidation_0-rmse:772.07699\n","[275]\tvalidation_0-rmse:771.68858\n","[276]\tvalidation_0-rmse:771.38633\n","[277]\tvalidation_0-rmse:770.89539\n","[278]\tvalidation_0-rmse:770.44847\n","[279]\tvalidation_0-rmse:769.99537\n","[280]\tvalidation_0-rmse:769.50464\n","[281]\tvalidation_0-rmse:768.81628\n","[282]\tvalidation_0-rmse:768.25944\n","[283]\tvalidation_0-rmse:767.98107\n","[284]\tvalidation_0-rmse:767.48905\n","[285]\tvalidation_0-rmse:766.90804\n","[286]\tvalidation_0-rmse:766.45401\n","[287]\tvalidation_0-rmse:766.26277\n","[288]\tvalidation_0-rmse:765.84545\n","[289]\tvalidation_0-rmse:765.67835\n","[290]\tvalidation_0-rmse:765.48609\n","[291]\tvalidation_0-rmse:765.32986\n","[292]\tvalidation_0-rmse:765.18142\n","[293]\tvalidation_0-rmse:765.01200\n","[294]\tvalidation_0-rmse:764.61059\n","[295]\tvalidation_0-rmse:764.51410\n","[296]\tvalidation_0-rmse:764.37911\n","[297]\tvalidation_0-rmse:764.11525\n","[298]\tvalidation_0-rmse:763.64958\n","[299]\tvalidation_0-rmse:763.27454\n","[300]\tvalidation_0-rmse:763.08118\n","[301]\tvalidation_0-rmse:762.55538\n","[302]\tvalidation_0-rmse:762.24728\n","[303]\tvalidation_0-rmse:761.50684\n","[304]\tvalidation_0-rmse:761.37056\n","[305]\tvalidation_0-rmse:760.97174\n","[306]\tvalidation_0-rmse:760.44497\n","[307]\tvalidation_0-rmse:759.81385\n","[308]\tvalidation_0-rmse:759.48129\n","[309]\tvalidation_0-rmse:758.30991\n","[310]\tvalidation_0-rmse:758.07318\n","[311]\tvalidation_0-rmse:757.46746\n","[312]\tvalidation_0-rmse:756.75050\n","[313]\tvalidation_0-rmse:756.15497\n","[314]\tvalidation_0-rmse:755.88938\n","[315]\tvalidation_0-rmse:755.33782\n","[316]\tvalidation_0-rmse:754.68885\n","[317]\tvalidation_0-rmse:754.23841\n","[318]\tvalidation_0-rmse:753.58787\n","[319]\tvalidation_0-rmse:753.29846\n","[320]\tvalidation_0-rmse:753.12470\n","[321]\tvalidation_0-rmse:752.96772\n","[322]\tvalidation_0-rmse:752.66417\n","[323]\tvalidation_0-rmse:752.52953\n","[324]\tvalidation_0-rmse:752.13142\n","[325]\tvalidation_0-rmse:751.97913\n","[326]\tvalidation_0-rmse:751.80162\n","[327]\tvalidation_0-rmse:751.27186\n","[328]\tvalidation_0-rmse:750.99665\n","[329]\tvalidation_0-rmse:750.86079\n","[330]\tvalidation_0-rmse:750.38922\n","[331]\tvalidation_0-rmse:750.12596\n","[332]\tvalidation_0-rmse:749.52655\n","[333]\tvalidation_0-rmse:749.00440\n","[334]\tvalidation_0-rmse:748.58689\n","[335]\tvalidation_0-rmse:747.45557\n","[336]\tvalidation_0-rmse:746.79859\n","[337]\tvalidation_0-rmse:746.48332\n","[338]\tvalidation_0-rmse:746.25205\n","[339]\tvalidation_0-rmse:746.12110\n","[340]\tvalidation_0-rmse:745.79124\n","[341]\tvalidation_0-rmse:745.36521\n","[342]\tvalidation_0-rmse:745.10026\n","[343]\tvalidation_0-rmse:744.90347\n","[344]\tvalidation_0-rmse:744.35336\n","[345]\tvalidation_0-rmse:744.04641\n","[346]\tvalidation_0-rmse:743.74564\n","[347]\tvalidation_0-rmse:743.31729\n","[348]\tvalidation_0-rmse:742.49922\n","[349]\tvalidation_0-rmse:742.02195\n","[350]\tvalidation_0-rmse:741.58998\n","[351]\tvalidation_0-rmse:741.36063\n","[352]\tvalidation_0-rmse:740.92732\n","[353]\tvalidation_0-rmse:740.42721\n","[354]\tvalidation_0-rmse:739.99417\n","[355]\tvalidation_0-rmse:739.81639\n","[356]\tvalidation_0-rmse:739.68396\n","[357]\tvalidation_0-rmse:739.44797\n","[358]\tvalidation_0-rmse:739.02557\n","[359]\tvalidation_0-rmse:738.92348\n","[360]\tvalidation_0-rmse:738.85512\n","[361]\tvalidation_0-rmse:738.59268\n","[362]\tvalidation_0-rmse:738.36917\n","[363]\tvalidation_0-rmse:738.11671\n","[364]\tvalidation_0-rmse:737.90630\n","[365]\tvalidation_0-rmse:737.52982\n","[366]\tvalidation_0-rmse:737.19553\n","[367]\tvalidation_0-rmse:736.99828\n","[368]\tvalidation_0-rmse:735.90632\n","[369]\tvalidation_0-rmse:735.65088\n","[370]\tvalidation_0-rmse:734.66846\n","[371]\tvalidation_0-rmse:734.30098\n","[372]\tvalidation_0-rmse:734.07620\n","[373]\tvalidation_0-rmse:733.80632\n","[374]\tvalidation_0-rmse:733.63380\n","[375]\tvalidation_0-rmse:733.52287\n","[376]\tvalidation_0-rmse:733.17573\n","[377]\tvalidation_0-rmse:732.56299\n","[378]\tvalidation_0-rmse:732.21661\n","[379]\tvalidation_0-rmse:731.93950\n","[380]\tvalidation_0-rmse:731.77879\n","[381]\tvalidation_0-rmse:731.58764\n","[382]\tvalidation_0-rmse:731.51571\n","[383]\tvalidation_0-rmse:731.20330\n","[384]\tvalidation_0-rmse:730.78599\n","[385]\tvalidation_0-rmse:730.08397\n","[386]\tvalidation_0-rmse:729.83005\n","[387]\tvalidation_0-rmse:729.20347\n","[388]\tvalidation_0-rmse:728.80448\n","[389]\tvalidation_0-rmse:728.58843\n","[390]\tvalidation_0-rmse:728.48929\n","[391]\tvalidation_0-rmse:728.17145\n","[392]\tvalidation_0-rmse:728.05527\n","[393]\tvalidation_0-rmse:727.86115\n","[394]\tvalidation_0-rmse:727.77690\n","[395]\tvalidation_0-rmse:726.94022\n","[396]\tvalidation_0-rmse:726.70580\n","[397]\tvalidation_0-rmse:726.53829\n","[398]\tvalidation_0-rmse:726.33537\n","[399]\tvalidation_0-rmse:726.02520\n","[400]\tvalidation_0-rmse:725.79527\n","[401]\tvalidation_0-rmse:725.19297\n","[402]\tvalidation_0-rmse:724.95853\n","[403]\tvalidation_0-rmse:724.75183\n","[404]\tvalidation_0-rmse:724.59109\n","[405]\tvalidation_0-rmse:724.52975\n","[406]\tvalidation_0-rmse:724.45429\n","[407]\tvalidation_0-rmse:724.26313\n","[408]\tvalidation_0-rmse:723.55673\n","[409]\tvalidation_0-rmse:723.03148\n","[410]\tvalidation_0-rmse:722.51490\n","[411]\tvalidation_0-rmse:721.98950\n","[412]\tvalidation_0-rmse:721.90651\n","[413]\tvalidation_0-rmse:721.72579\n","[414]\tvalidation_0-rmse:721.57866\n","[415]\tvalidation_0-rmse:721.32112\n","[416]\tvalidation_0-rmse:721.07077\n","[417]\tvalidation_0-rmse:720.71268\n","[418]\tvalidation_0-rmse:720.45973\n","[419]\tvalidation_0-rmse:720.29589\n","[420]\tvalidation_0-rmse:719.83426\n","[421]\tvalidation_0-rmse:719.73844\n","[422]\tvalidation_0-rmse:719.63116\n","[423]\tvalidation_0-rmse:719.42144\n","[424]\tvalidation_0-rmse:719.30114\n","[425]\tvalidation_0-rmse:718.77859\n","[426]\tvalidation_0-rmse:718.65258\n","[427]\tvalidation_0-rmse:718.46285\n","[428]\tvalidation_0-rmse:718.25713\n","[429]\tvalidation_0-rmse:718.11661\n","[430]\tvalidation_0-rmse:717.95434\n","[431]\tvalidation_0-rmse:717.64564\n","[432]\tvalidation_0-rmse:717.38340\n","[433]\tvalidation_0-rmse:717.01101\n","[434]\tvalidation_0-rmse:716.70005\n","[435]\tvalidation_0-rmse:716.55956\n","[436]\tvalidation_0-rmse:716.35123\n","[437]\tvalidation_0-rmse:716.02105\n","[438]\tvalidation_0-rmse:715.25208\n","[439]\tvalidation_0-rmse:715.11154\n","[440]\tvalidation_0-rmse:715.00585\n","[441]\tvalidation_0-rmse:714.86439\n","[442]\tvalidation_0-rmse:714.66010\n","[443]\tvalidation_0-rmse:714.55967\n","[444]\tvalidation_0-rmse:714.39489\n","[445]\tvalidation_0-rmse:714.20229\n","[446]\tvalidation_0-rmse:714.02717\n","[447]\tvalidation_0-rmse:713.72005\n","[448]\tvalidation_0-rmse:713.58660\n","[449]\tvalidation_0-rmse:713.32206\n","[450]\tvalidation_0-rmse:713.17839\n","[451]\tvalidation_0-rmse:713.07562\n","[452]\tvalidation_0-rmse:712.76238\n","[453]\tvalidation_0-rmse:712.65532\n","[454]\tvalidation_0-rmse:712.59411\n","[455]\tvalidation_0-rmse:712.37595\n","[456]\tvalidation_0-rmse:712.30152\n","[457]\tvalidation_0-rmse:712.16091\n","[458]\tvalidation_0-rmse:712.04680\n","[459]\tvalidation_0-rmse:711.56847\n","[460]\tvalidation_0-rmse:711.49640\n","[461]\tvalidation_0-rmse:711.17544\n","[462]\tvalidation_0-rmse:710.81153\n","[463]\tvalidation_0-rmse:710.65340\n","[464]\tvalidation_0-rmse:710.15762\n","[465]\tvalidation_0-rmse:710.04121\n","[466]\tvalidation_0-rmse:709.00116\n","[467]\tvalidation_0-rmse:708.70618\n","[468]\tvalidation_0-rmse:708.56577\n","[469]\tvalidation_0-rmse:708.22587\n","[470]\tvalidation_0-rmse:708.04274\n","[471]\tvalidation_0-rmse:707.85415\n","[472]\tvalidation_0-rmse:707.65835\n","[473]\tvalidation_0-rmse:707.29221\n","[474]\tvalidation_0-rmse:707.00065\n","[475]\tvalidation_0-rmse:706.59267\n","[476]\tvalidation_0-rmse:706.35656\n","[477]\tvalidation_0-rmse:706.22497\n","[478]\tvalidation_0-rmse:706.02001\n","[479]\tvalidation_0-rmse:705.96843\n","[480]\tvalidation_0-rmse:705.81240\n","[481]\tvalidation_0-rmse:705.63954\n","[482]\tvalidation_0-rmse:704.40152\n","[483]\tvalidation_0-rmse:704.09991\n","[484]\tvalidation_0-rmse:703.95238\n","[485]\tvalidation_0-rmse:703.52360\n","[486]\tvalidation_0-rmse:702.99360\n","[487]\tvalidation_0-rmse:702.68359\n","[488]\tvalidation_0-rmse:702.56921\n","[489]\tvalidation_0-rmse:702.36443\n","[490]\tvalidation_0-rmse:702.14780\n","[491]\tvalidation_0-rmse:701.83065\n","[492]\tvalidation_0-rmse:701.71587\n","[493]\tvalidation_0-rmse:701.65656\n","[494]\tvalidation_0-rmse:701.36686\n","[495]\tvalidation_0-rmse:701.18345\n","[496]\tvalidation_0-rmse:701.04160\n","[497]\tvalidation_0-rmse:700.92034\n","[498]\tvalidation_0-rmse:700.82344\n","[499]\tvalidation_0-rmse:700.60504\n","[500]\tvalidation_0-rmse:700.44734\n","[501]\tvalidation_0-rmse:700.13966\n","[502]\tvalidation_0-rmse:699.85206\n","[503]\tvalidation_0-rmse:699.75437\n","[504]\tvalidation_0-rmse:699.28361\n","[505]\tvalidation_0-rmse:698.93433\n","[506]\tvalidation_0-rmse:698.51798\n","[507]\tvalidation_0-rmse:698.20288\n","[508]\tvalidation_0-rmse:698.05316\n","[509]\tvalidation_0-rmse:697.78490\n","[510]\tvalidation_0-rmse:697.59303\n","[511]\tvalidation_0-rmse:697.28416\n","[512]\tvalidation_0-rmse:697.11040\n","[513]\tvalidation_0-rmse:697.02073\n","[514]\tvalidation_0-rmse:696.94859\n","[515]\tvalidation_0-rmse:696.68628\n","[516]\tvalidation_0-rmse:696.48933\n","[517]\tvalidation_0-rmse:696.07011\n","[518]\tvalidation_0-rmse:695.86190\n","[519]\tvalidation_0-rmse:695.69766\n","[520]\tvalidation_0-rmse:695.59225\n","[521]\tvalidation_0-rmse:695.47208\n","[522]\tvalidation_0-rmse:695.34813\n","[523]\tvalidation_0-rmse:695.23499\n","[524]\tvalidation_0-rmse:695.01314\n","[525]\tvalidation_0-rmse:694.88724\n","[526]\tvalidation_0-rmse:694.30207\n","[527]\tvalidation_0-rmse:694.08896\n","[528]\tvalidation_0-rmse:693.96576\n","[529]\tvalidation_0-rmse:693.77971\n","[530]\tvalidation_0-rmse:693.51922\n","[531]\tvalidation_0-rmse:693.10934\n","[532]\tvalidation_0-rmse:692.64319\n","[533]\tvalidation_0-rmse:692.38649\n","[534]\tvalidation_0-rmse:692.28868\n","[535]\tvalidation_0-rmse:691.55407\n","[536]\tvalidation_0-rmse:691.08548\n","[537]\tvalidation_0-rmse:690.98721\n","[538]\tvalidation_0-rmse:690.92395\n","[539]\tvalidation_0-rmse:690.79779\n","[540]\tvalidation_0-rmse:690.64950\n","[541]\tvalidation_0-rmse:690.27417\n","[542]\tvalidation_0-rmse:690.08121\n","[543]\tvalidation_0-rmse:689.99599\n","[544]\tvalidation_0-rmse:689.93234\n","[545]\tvalidation_0-rmse:689.75483\n","[546]\tvalidation_0-rmse:689.65420\n","[547]\tvalidation_0-rmse:689.51555\n","[548]\tvalidation_0-rmse:689.06659\n","[549]\tvalidation_0-rmse:688.80813\n","[550]\tvalidation_0-rmse:688.48874\n","[551]\tvalidation_0-rmse:687.80991\n","[552]\tvalidation_0-rmse:687.49159\n","[553]\tvalidation_0-rmse:687.24440\n","[554]\tvalidation_0-rmse:687.01142\n","[555]\tvalidation_0-rmse:686.87055\n","[556]\tvalidation_0-rmse:686.76566\n","[557]\tvalidation_0-rmse:686.65364\n","[558]\tvalidation_0-rmse:686.54179\n","[559]\tvalidation_0-rmse:686.15293\n","[560]\tvalidation_0-rmse:686.06833\n","[561]\tvalidation_0-rmse:685.75360\n","[562]\tvalidation_0-rmse:685.65016\n","[563]\tvalidation_0-rmse:685.56836\n","[564]\tvalidation_0-rmse:685.42482\n","[565]\tvalidation_0-rmse:685.26108\n","[566]\tvalidation_0-rmse:685.09929\n","[567]\tvalidation_0-rmse:685.02186\n","[568]\tvalidation_0-rmse:684.92416\n","[569]\tvalidation_0-rmse:684.71695\n","[570]\tvalidation_0-rmse:684.64196\n","[571]\tvalidation_0-rmse:684.50535\n","[572]\tvalidation_0-rmse:684.25592\n","[573]\tvalidation_0-rmse:684.04060\n","[574]\tvalidation_0-rmse:683.64416\n","[575]\tvalidation_0-rmse:683.55087\n","[576]\tvalidation_0-rmse:683.30487\n","[577]\tvalidation_0-rmse:682.96728\n","[578]\tvalidation_0-rmse:682.82597\n","[579]\tvalidation_0-rmse:682.59853\n","[580]\tvalidation_0-rmse:682.34890\n","[581]\tvalidation_0-rmse:682.05192\n","[582]\tvalidation_0-rmse:681.71791\n","[583]\tvalidation_0-rmse:681.50021\n","[584]\tvalidation_0-rmse:681.36329\n","[585]\tvalidation_0-rmse:681.16594\n","[586]\tvalidation_0-rmse:681.00335\n","[587]\tvalidation_0-rmse:680.92401\n","[588]\tvalidation_0-rmse:680.67197\n","[589]\tvalidation_0-rmse:680.29291\n","[590]\tvalidation_0-rmse:680.04991\n","[591]\tvalidation_0-rmse:679.97190\n","[592]\tvalidation_0-rmse:679.89740\n","[593]\tvalidation_0-rmse:679.76934\n","[594]\tvalidation_0-rmse:679.61918\n","[595]\tvalidation_0-rmse:679.50649\n","[596]\tvalidation_0-rmse:679.37959\n","[597]\tvalidation_0-rmse:679.26928\n","[598]\tvalidation_0-rmse:679.11264\n","[599]\tvalidation_0-rmse:678.83619\n","[600]\tvalidation_0-rmse:678.52994\n","[601]\tvalidation_0-rmse:678.25397\n","[602]\tvalidation_0-rmse:678.14843\n","[603]\tvalidation_0-rmse:677.96820\n","[604]\tvalidation_0-rmse:677.87987\n","[605]\tvalidation_0-rmse:677.71857\n","[606]\tvalidation_0-rmse:677.61920\n","[607]\tvalidation_0-rmse:677.30758\n","[608]\tvalidation_0-rmse:677.12161\n","[609]\tvalidation_0-rmse:676.95632\n","[610]\tvalidation_0-rmse:676.84694\n","[611]\tvalidation_0-rmse:676.64158\n","[612]\tvalidation_0-rmse:676.41670\n","[613]\tvalidation_0-rmse:676.32959\n","[614]\tvalidation_0-rmse:676.11938\n","[615]\tvalidation_0-rmse:675.98338\n","[616]\tvalidation_0-rmse:675.71390\n","[617]\tvalidation_0-rmse:675.59915\n","[618]\tvalidation_0-rmse:675.47212\n","[619]\tvalidation_0-rmse:675.36027\n","[620]\tvalidation_0-rmse:675.07724\n","[621]\tvalidation_0-rmse:674.86450\n","[622]\tvalidation_0-rmse:674.76057\n","[623]\tvalidation_0-rmse:674.34960\n","[624]\tvalidation_0-rmse:674.14581\n","[625]\tvalidation_0-rmse:673.93088\n","[626]\tvalidation_0-rmse:673.86741\n","[627]\tvalidation_0-rmse:673.72949\n","[628]\tvalidation_0-rmse:673.42302\n","[629]\tvalidation_0-rmse:672.93567\n","[630]\tvalidation_0-rmse:672.82016\n","[631]\tvalidation_0-rmse:672.68377\n","[632]\tvalidation_0-rmse:672.48442\n","[633]\tvalidation_0-rmse:672.39925\n","[634]\tvalidation_0-rmse:672.08804\n","[635]\tvalidation_0-rmse:671.87589\n","[636]\tvalidation_0-rmse:671.81471\n","[637]\tvalidation_0-rmse:671.68435\n","[638]\tvalidation_0-rmse:671.46007\n","[639]\tvalidation_0-rmse:671.41959\n","[640]\tvalidation_0-rmse:671.34062\n","[641]\tvalidation_0-rmse:671.20033\n","[642]\tvalidation_0-rmse:671.12642\n","[643]\tvalidation_0-rmse:671.02803\n","[644]\tvalidation_0-rmse:670.88792\n","[645]\tvalidation_0-rmse:670.69094\n","[646]\tvalidation_0-rmse:670.57852\n","[647]\tvalidation_0-rmse:670.53461\n","[648]\tvalidation_0-rmse:670.28311\n","[649]\tvalidation_0-rmse:670.07618\n","[650]\tvalidation_0-rmse:670.00399\n","[651]\tvalidation_0-rmse:669.74289\n","[652]\tvalidation_0-rmse:669.69266\n","[653]\tvalidation_0-rmse:669.43298\n","[654]\tvalidation_0-rmse:669.12301\n","[655]\tvalidation_0-rmse:668.93486\n","[656]\tvalidation_0-rmse:668.47743\n","[657]\tvalidation_0-rmse:668.24491\n","[658]\tvalidation_0-rmse:668.04041\n","[659]\tvalidation_0-rmse:667.83737\n","[660]\tvalidation_0-rmse:667.66992\n","[661]\tvalidation_0-rmse:667.56326\n","[662]\tvalidation_0-rmse:667.29199\n","[663]\tvalidation_0-rmse:667.15646\n","[664]\tvalidation_0-rmse:666.99388\n","[665]\tvalidation_0-rmse:666.90004\n","[666]\tvalidation_0-rmse:666.30695\n","[667]\tvalidation_0-rmse:666.16514\n","[668]\tvalidation_0-rmse:666.06653\n","[669]\tvalidation_0-rmse:665.68702\n","[670]\tvalidation_0-rmse:665.59862\n","[671]\tvalidation_0-rmse:665.54105\n","[672]\tvalidation_0-rmse:665.37094\n","[673]\tvalidation_0-rmse:665.23020\n","[674]\tvalidation_0-rmse:664.97148\n","[675]\tvalidation_0-rmse:664.70087\n","[676]\tvalidation_0-rmse:664.61079\n","[677]\tvalidation_0-rmse:664.53174\n","[678]\tvalidation_0-rmse:664.30802\n","[679]\tvalidation_0-rmse:663.89366\n","[680]\tvalidation_0-rmse:663.40664\n","[681]\tvalidation_0-rmse:663.29055\n","[682]\tvalidation_0-rmse:663.24497\n","[683]\tvalidation_0-rmse:663.16512\n","[684]\tvalidation_0-rmse:662.94659\n","[685]\tvalidation_0-rmse:662.87578\n","[686]\tvalidation_0-rmse:662.76696\n","[687]\tvalidation_0-rmse:662.60770\n","[688]\tvalidation_0-rmse:662.35552\n","[689]\tvalidation_0-rmse:662.17653\n","[690]\tvalidation_0-rmse:662.02891\n","[691]\tvalidation_0-rmse:661.99752\n","[692]\tvalidation_0-rmse:661.92297\n","[693]\tvalidation_0-rmse:661.60710\n","[694]\tvalidation_0-rmse:661.47258\n","[695]\tvalidation_0-rmse:661.24685\n","[696]\tvalidation_0-rmse:661.09052\n","[697]\tvalidation_0-rmse:660.96576\n","[698]\tvalidation_0-rmse:660.88530\n","[699]\tvalidation_0-rmse:660.79086\n","[700]\tvalidation_0-rmse:660.25984\n","[701]\tvalidation_0-rmse:660.13682\n","[702]\tvalidation_0-rmse:659.76071\n","[703]\tvalidation_0-rmse:659.64318\n","[704]\tvalidation_0-rmse:659.56864\n","[705]\tvalidation_0-rmse:659.48071\n","[706]\tvalidation_0-rmse:659.30502\n","[707]\tvalidation_0-rmse:659.24900\n","[708]\tvalidation_0-rmse:658.93778\n","[709]\tvalidation_0-rmse:658.44913\n","[710]\tvalidation_0-rmse:658.33157\n","[711]\tvalidation_0-rmse:658.16644\n","[712]\tvalidation_0-rmse:657.98572\n","[713]\tvalidation_0-rmse:657.90702\n","[714]\tvalidation_0-rmse:657.69530\n","[715]\tvalidation_0-rmse:657.58455\n","[716]\tvalidation_0-rmse:657.39848\n","[717]\tvalidation_0-rmse:657.31696\n","[718]\tvalidation_0-rmse:657.25152\n","[719]\tvalidation_0-rmse:657.05687\n","[720]\tvalidation_0-rmse:656.86431\n","[721]\tvalidation_0-rmse:656.77375\n","[722]\tvalidation_0-rmse:656.57584\n","[723]\tvalidation_0-rmse:656.47548\n","[724]\tvalidation_0-rmse:656.37401\n","[725]\tvalidation_0-rmse:656.31479\n","[726]\tvalidation_0-rmse:656.24529\n","[727]\tvalidation_0-rmse:655.80826\n","[728]\tvalidation_0-rmse:655.72036\n","[729]\tvalidation_0-rmse:655.62787\n","[730]\tvalidation_0-rmse:655.48354\n","[731]\tvalidation_0-rmse:655.33589\n","[732]\tvalidation_0-rmse:655.18010\n","[733]\tvalidation_0-rmse:654.92678\n","[734]\tvalidation_0-rmse:654.87032\n","[735]\tvalidation_0-rmse:654.74191\n","[736]\tvalidation_0-rmse:654.60015\n","[737]\tvalidation_0-rmse:654.51826\n","[738]\tvalidation_0-rmse:654.41128\n","[739]\tvalidation_0-rmse:654.30694\n","[740]\tvalidation_0-rmse:654.11450\n","[741]\tvalidation_0-rmse:653.97954\n","[742]\tvalidation_0-rmse:653.84938\n","[743]\tvalidation_0-rmse:653.70894\n","[744]\tvalidation_0-rmse:653.54232\n","[745]\tvalidation_0-rmse:653.46452\n","[746]\tvalidation_0-rmse:653.34089\n","[747]\tvalidation_0-rmse:653.19231\n","[748]\tvalidation_0-rmse:652.83946\n","[749]\tvalidation_0-rmse:652.52595\n","[750]\tvalidation_0-rmse:652.40650\n","[751]\tvalidation_0-rmse:652.29121\n","[752]\tvalidation_0-rmse:652.12686\n","[753]\tvalidation_0-rmse:652.04597\n","[754]\tvalidation_0-rmse:651.84301\n","[755]\tvalidation_0-rmse:651.71389\n","[756]\tvalidation_0-rmse:651.64803\n","[757]\tvalidation_0-rmse:651.60004\n","[758]\tvalidation_0-rmse:651.43381\n","[759]\tvalidation_0-rmse:651.24480\n","[760]\tvalidation_0-rmse:651.11504\n","[761]\tvalidation_0-rmse:650.99847\n","[762]\tvalidation_0-rmse:650.92098\n","[763]\tvalidation_0-rmse:650.83361\n","[764]\tvalidation_0-rmse:650.63372\n","[765]\tvalidation_0-rmse:650.53482\n","[766]\tvalidation_0-rmse:650.42574\n","[767]\tvalidation_0-rmse:650.39114\n","[768]\tvalidation_0-rmse:650.31170\n","[769]\tvalidation_0-rmse:650.23263\n","[770]\tvalidation_0-rmse:650.14467\n","[771]\tvalidation_0-rmse:650.02925\n","[772]\tvalidation_0-rmse:649.93614\n","[773]\tvalidation_0-rmse:649.63139\n","[774]\tvalidation_0-rmse:649.51810\n","[775]\tvalidation_0-rmse:649.27191\n","[776]\tvalidation_0-rmse:649.19498\n","[777]\tvalidation_0-rmse:649.08702\n","[778]\tvalidation_0-rmse:648.86066\n","[779]\tvalidation_0-rmse:648.61399\n","[780]\tvalidation_0-rmse:648.51997\n","[781]\tvalidation_0-rmse:648.45044\n","[782]\tvalidation_0-rmse:648.30650\n","[783]\tvalidation_0-rmse:648.07341\n","[784]\tvalidation_0-rmse:647.90231\n","[785]\tvalidation_0-rmse:647.80924\n","[786]\tvalidation_0-rmse:647.72213\n","[787]\tvalidation_0-rmse:647.67529\n","[788]\tvalidation_0-rmse:647.54544\n","[789]\tvalidation_0-rmse:647.47737\n","[790]\tvalidation_0-rmse:647.36413\n","[791]\tvalidation_0-rmse:647.20606\n","[792]\tvalidation_0-rmse:647.10948\n","[793]\tvalidation_0-rmse:647.00920\n","[794]\tvalidation_0-rmse:646.83440\n","[795]\tvalidation_0-rmse:646.75717\n","[796]\tvalidation_0-rmse:646.65359\n","[797]\tvalidation_0-rmse:646.49060\n","[798]\tvalidation_0-rmse:646.37723\n","[799]\tvalidation_0-rmse:646.30934\n","[800]\tvalidation_0-rmse:646.26541\n","[801]\tvalidation_0-rmse:646.19771\n","[802]\tvalidation_0-rmse:646.01330\n","[803]\tvalidation_0-rmse:645.80425\n","[804]\tvalidation_0-rmse:645.54621\n","[805]\tvalidation_0-rmse:645.41993\n","[806]\tvalidation_0-rmse:645.35467\n","[807]\tvalidation_0-rmse:645.27707\n","[808]\tvalidation_0-rmse:645.13142\n","[809]\tvalidation_0-rmse:645.08343\n","[810]\tvalidation_0-rmse:644.96470\n","[811]\tvalidation_0-rmse:644.86461\n","[812]\tvalidation_0-rmse:644.60230\n","[813]\tvalidation_0-rmse:644.51876\n","[814]\tvalidation_0-rmse:644.44919\n","[815]\tvalidation_0-rmse:644.28862\n","[816]\tvalidation_0-rmse:644.11380\n","[817]\tvalidation_0-rmse:643.92270\n","[818]\tvalidation_0-rmse:643.48766\n","[819]\tvalidation_0-rmse:643.31405\n","[820]\tvalidation_0-rmse:643.10289\n","[821]\tvalidation_0-rmse:643.04936\n","[822]\tvalidation_0-rmse:642.97106\n","[823]\tvalidation_0-rmse:642.91869\n","[824]\tvalidation_0-rmse:642.83469\n","[825]\tvalidation_0-rmse:642.78058\n","[826]\tvalidation_0-rmse:642.65819\n","[827]\tvalidation_0-rmse:642.56203\n","[828]\tvalidation_0-rmse:642.51301\n","[829]\tvalidation_0-rmse:642.34401\n","[830]\tvalidation_0-rmse:642.25299\n","[831]\tvalidation_0-rmse:642.15618\n","[832]\tvalidation_0-rmse:642.00392\n","[833]\tvalidation_0-rmse:641.85722\n","[834]\tvalidation_0-rmse:641.79232\n","[835]\tvalidation_0-rmse:641.64702\n","[836]\tvalidation_0-rmse:641.62232\n","[837]\tvalidation_0-rmse:641.54272\n","[838]\tvalidation_0-rmse:641.44344\n","[839]\tvalidation_0-rmse:641.35722\n","[840]\tvalidation_0-rmse:641.22083\n","[841]\tvalidation_0-rmse:641.09249\n","[842]\tvalidation_0-rmse:641.05639\n","[843]\tvalidation_0-rmse:641.01473\n","[844]\tvalidation_0-rmse:640.92566\n","[845]\tvalidation_0-rmse:640.75648\n","[846]\tvalidation_0-rmse:640.43492\n","[847]\tvalidation_0-rmse:640.06324\n","[848]\tvalidation_0-rmse:639.97378\n","[849]\tvalidation_0-rmse:639.76906\n","[850]\tvalidation_0-rmse:639.72516\n","[851]\tvalidation_0-rmse:639.63060\n","[852]\tvalidation_0-rmse:639.55879\n","[853]\tvalidation_0-rmse:639.42260\n","[854]\tvalidation_0-rmse:639.19522\n","[855]\tvalidation_0-rmse:639.10858\n","[856]\tvalidation_0-rmse:639.03179\n","[857]\tvalidation_0-rmse:638.93054\n","[858]\tvalidation_0-rmse:638.85812\n","[859]\tvalidation_0-rmse:638.73256\n","[860]\tvalidation_0-rmse:638.54199\n","[861]\tvalidation_0-rmse:638.47394\n","[862]\tvalidation_0-rmse:638.43893\n","[863]\tvalidation_0-rmse:638.24698\n","[864]\tvalidation_0-rmse:638.15691\n","[865]\tvalidation_0-rmse:637.96663\n","[866]\tvalidation_0-rmse:637.86847\n","[867]\tvalidation_0-rmse:637.73985\n","[868]\tvalidation_0-rmse:637.42927\n","[869]\tvalidation_0-rmse:637.26629\n","[870]\tvalidation_0-rmse:637.15045\n","[871]\tvalidation_0-rmse:637.03821\n","[872]\tvalidation_0-rmse:636.79381\n","[873]\tvalidation_0-rmse:636.72122\n","[874]\tvalidation_0-rmse:636.66161\n","[875]\tvalidation_0-rmse:636.52398\n","[876]\tvalidation_0-rmse:636.47267\n","[877]\tvalidation_0-rmse:636.40159\n","[878]\tvalidation_0-rmse:636.34082\n","[879]\tvalidation_0-rmse:636.29078\n","[880]\tvalidation_0-rmse:636.21348\n","[881]\tvalidation_0-rmse:636.15304\n","[882]\tvalidation_0-rmse:636.10153\n","[883]\tvalidation_0-rmse:636.06314\n","[884]\tvalidation_0-rmse:636.02170\n","[885]\tvalidation_0-rmse:635.89756\n","[886]\tvalidation_0-rmse:635.79980\n","[887]\tvalidation_0-rmse:635.74333\n","[888]\tvalidation_0-rmse:635.66152\n","[889]\tvalidation_0-rmse:635.53462\n","[890]\tvalidation_0-rmse:635.46862\n","[891]\tvalidation_0-rmse:635.30326\n","[892]\tvalidation_0-rmse:635.16464\n","[893]\tvalidation_0-rmse:635.12595\n","[894]\tvalidation_0-rmse:635.03315\n","[895]\tvalidation_0-rmse:634.90769\n","[896]\tvalidation_0-rmse:634.83394\n","[897]\tvalidation_0-rmse:634.55023\n","[898]\tvalidation_0-rmse:634.49525\n","[899]\tvalidation_0-rmse:634.37702\n","[900]\tvalidation_0-rmse:634.05153\n","[901]\tvalidation_0-rmse:633.95160\n","[902]\tvalidation_0-rmse:633.89422\n","[903]\tvalidation_0-rmse:633.79351\n","[904]\tvalidation_0-rmse:633.40235\n","[905]\tvalidation_0-rmse:633.33843\n","[906]\tvalidation_0-rmse:633.01390\n","[907]\tvalidation_0-rmse:632.86927\n","[908]\tvalidation_0-rmse:632.78200\n","[909]\tvalidation_0-rmse:632.73633\n","[910]\tvalidation_0-rmse:632.60142\n","[911]\tvalidation_0-rmse:632.47256\n","[912]\tvalidation_0-rmse:632.34980\n","[913]\tvalidation_0-rmse:632.09558\n","[914]\tvalidation_0-rmse:631.99388\n","[915]\tvalidation_0-rmse:631.92454\n","[916]\tvalidation_0-rmse:631.76872\n","[917]\tvalidation_0-rmse:631.52282\n","[918]\tvalidation_0-rmse:631.36401\n","[919]\tvalidation_0-rmse:631.28182\n","[920]\tvalidation_0-rmse:631.15261\n","[921]\tvalidation_0-rmse:630.98832\n","[922]\tvalidation_0-rmse:630.89251\n","[923]\tvalidation_0-rmse:630.74773\n","[924]\tvalidation_0-rmse:630.68301\n","[925]\tvalidation_0-rmse:630.66201\n","[926]\tvalidation_0-rmse:630.58393\n","[927]\tvalidation_0-rmse:630.53404\n","[928]\tvalidation_0-rmse:630.47861\n","[929]\tvalidation_0-rmse:630.40567\n","[930]\tvalidation_0-rmse:630.20593\n","[931]\tvalidation_0-rmse:630.11142\n","[932]\tvalidation_0-rmse:629.93785\n","[933]\tvalidation_0-rmse:629.78794\n","[934]\tvalidation_0-rmse:629.68928\n","[935]\tvalidation_0-rmse:629.61225\n","[936]\tvalidation_0-rmse:629.47409\n","[937]\tvalidation_0-rmse:629.21878\n","[938]\tvalidation_0-rmse:629.12185\n","[939]\tvalidation_0-rmse:629.01499\n","[940]\tvalidation_0-rmse:628.94210\n","[941]\tvalidation_0-rmse:628.86497\n","[942]\tvalidation_0-rmse:628.78987\n","[943]\tvalidation_0-rmse:628.69494\n","[944]\tvalidation_0-rmse:628.62470\n","[945]\tvalidation_0-rmse:628.56338\n","[946]\tvalidation_0-rmse:628.42247\n","[947]\tvalidation_0-rmse:628.30242\n","[948]\tvalidation_0-rmse:628.18539\n","[949]\tvalidation_0-rmse:628.10589\n","[950]\tvalidation_0-rmse:628.08059\n","[951]\tvalidation_0-rmse:628.02692\n","[952]\tvalidation_0-rmse:627.93782\n","[953]\tvalidation_0-rmse:627.80383\n","[954]\tvalidation_0-rmse:627.71748\n","[955]\tvalidation_0-rmse:627.59994\n","[956]\tvalidation_0-rmse:627.49947\n","[957]\tvalidation_0-rmse:627.43186\n","[958]\tvalidation_0-rmse:627.33861\n","[959]\tvalidation_0-rmse:627.26358\n","[960]\tvalidation_0-rmse:627.21503\n","[961]\tvalidation_0-rmse:627.16201\n","[962]\tvalidation_0-rmse:626.97191\n","[963]\tvalidation_0-rmse:626.90978\n","[964]\tvalidation_0-rmse:626.82203\n","[965]\tvalidation_0-rmse:626.58047\n","[966]\tvalidation_0-rmse:626.33078\n","[967]\tvalidation_0-rmse:626.25260\n","[968]\tvalidation_0-rmse:626.15627\n","[969]\tvalidation_0-rmse:626.08933\n","[970]\tvalidation_0-rmse:625.87968\n","[971]\tvalidation_0-rmse:625.57201\n","[972]\tvalidation_0-rmse:625.46242\n","[973]\tvalidation_0-rmse:625.37456\n","[974]\tvalidation_0-rmse:625.35608\n","[975]\tvalidation_0-rmse:625.27373\n","[976]\tvalidation_0-rmse:625.21774\n","[977]\tvalidation_0-rmse:625.16127\n","[978]\tvalidation_0-rmse:625.09381\n","[979]\tvalidation_0-rmse:625.04795\n","[980]\tvalidation_0-rmse:624.95546\n","[981]\tvalidation_0-rmse:624.49623\n","[982]\tvalidation_0-rmse:624.43769\n","[983]\tvalidation_0-rmse:624.36026\n","[984]\tvalidation_0-rmse:624.26669\n","[985]\tvalidation_0-rmse:623.88426\n","[986]\tvalidation_0-rmse:623.78543\n","[987]\tvalidation_0-rmse:623.70275\n","[988]\tvalidation_0-rmse:623.55424\n","[989]\tvalidation_0-rmse:623.48943\n","[990]\tvalidation_0-rmse:623.34539\n","[991]\tvalidation_0-rmse:623.26915\n","[992]\tvalidation_0-rmse:623.20271\n","[993]\tvalidation_0-rmse:623.10392\n","[994]\tvalidation_0-rmse:622.91374\n","[995]\tvalidation_0-rmse:622.85010\n","[996]\tvalidation_0-rmse:622.70242\n","[997]\tvalidation_0-rmse:622.62478\n","[998]\tvalidation_0-rmse:622.57860\n","[999]\tvalidation_0-rmse:622.49642\n","[1000]\tvalidation_0-rmse:622.48084\n","[1001]\tvalidation_0-rmse:622.36262\n","[1002]\tvalidation_0-rmse:622.32459\n","[1003]\tvalidation_0-rmse:622.15019\n","[1004]\tvalidation_0-rmse:622.08369\n","[1005]\tvalidation_0-rmse:621.94803\n","[1006]\tvalidation_0-rmse:621.87811\n","[1007]\tvalidation_0-rmse:621.71891\n","[1008]\tvalidation_0-rmse:621.54440\n","[1009]\tvalidation_0-rmse:621.46654\n","[1010]\tvalidation_0-rmse:621.33231\n","[1011]\tvalidation_0-rmse:621.22390\n","[1012]\tvalidation_0-rmse:621.15555\n","[1013]\tvalidation_0-rmse:621.07757\n","[1014]\tvalidation_0-rmse:621.01439\n","[1015]\tvalidation_0-rmse:620.81950\n","[1016]\tvalidation_0-rmse:620.71902\n","[1017]\tvalidation_0-rmse:620.61074\n","[1018]\tvalidation_0-rmse:620.51230\n","[1019]\tvalidation_0-rmse:620.43610\n","[1020]\tvalidation_0-rmse:620.30619\n","[1021]\tvalidation_0-rmse:620.21919\n","[1022]\tvalidation_0-rmse:620.07712\n","[1023]\tvalidation_0-rmse:619.92758\n","[1024]\tvalidation_0-rmse:619.89590\n","[1025]\tvalidation_0-rmse:619.85354\n","[1026]\tvalidation_0-rmse:619.78382\n","[1027]\tvalidation_0-rmse:619.68476\n","[1028]\tvalidation_0-rmse:619.59756\n","[1029]\tvalidation_0-rmse:619.36993\n","[1030]\tvalidation_0-rmse:619.35100\n","[1031]\tvalidation_0-rmse:619.25045\n","[1032]\tvalidation_0-rmse:619.12577\n","[1033]\tvalidation_0-rmse:619.08502\n","[1034]\tvalidation_0-rmse:618.98726\n","[1035]\tvalidation_0-rmse:618.94565\n","[1036]\tvalidation_0-rmse:618.90860\n","[1037]\tvalidation_0-rmse:618.77525\n","[1038]\tvalidation_0-rmse:618.66876\n","[1039]\tvalidation_0-rmse:618.60296\n","[1040]\tvalidation_0-rmse:618.52227\n","[1041]\tvalidation_0-rmse:618.49190\n","[1042]\tvalidation_0-rmse:618.43154\n","[1043]\tvalidation_0-rmse:618.38319\n","[1044]\tvalidation_0-rmse:618.26153\n","[1045]\tvalidation_0-rmse:618.13817\n","[1046]\tvalidation_0-rmse:618.10717\n","[1047]\tvalidation_0-rmse:618.06619\n","[1048]\tvalidation_0-rmse:618.02261\n","[1049]\tvalidation_0-rmse:617.96281\n","[1050]\tvalidation_0-rmse:617.82885\n","[1051]\tvalidation_0-rmse:617.72853\n","[1052]\tvalidation_0-rmse:617.61738\n","[1053]\tvalidation_0-rmse:617.41479\n","[1054]\tvalidation_0-rmse:617.36904\n","[1055]\tvalidation_0-rmse:617.30944\n","[1056]\tvalidation_0-rmse:617.22910\n","[1057]\tvalidation_0-rmse:617.11541\n","[1058]\tvalidation_0-rmse:617.04359\n","[1059]\tvalidation_0-rmse:616.99816\n","[1060]\tvalidation_0-rmse:616.91787\n","[1061]\tvalidation_0-rmse:616.83814\n","[1062]\tvalidation_0-rmse:616.74666\n","[1063]\tvalidation_0-rmse:616.67338\n","[1064]\tvalidation_0-rmse:616.58432\n","[1065]\tvalidation_0-rmse:616.51158\n","[1066]\tvalidation_0-rmse:616.40267\n","[1067]\tvalidation_0-rmse:616.36833\n","[1068]\tvalidation_0-rmse:616.32376\n","[1069]\tvalidation_0-rmse:616.30988\n","[1070]\tvalidation_0-rmse:616.13244\n","[1071]\tvalidation_0-rmse:615.97555\n","[1072]\tvalidation_0-rmse:615.86959\n","[1073]\tvalidation_0-rmse:615.80209\n","[1074]\tvalidation_0-rmse:615.74003\n","[1075]\tvalidation_0-rmse:615.70259\n","[1076]\tvalidation_0-rmse:615.64600\n","[1077]\tvalidation_0-rmse:615.60308\n","[1078]\tvalidation_0-rmse:615.51674\n","[1079]\tvalidation_0-rmse:615.28988\n","[1080]\tvalidation_0-rmse:615.21001\n","[1081]\tvalidation_0-rmse:615.14701\n","[1082]\tvalidation_0-rmse:615.11651\n","[1083]\tvalidation_0-rmse:614.88946\n","[1084]\tvalidation_0-rmse:614.82381\n","[1085]\tvalidation_0-rmse:614.72017\n","[1086]\tvalidation_0-rmse:614.64201\n","[1087]\tvalidation_0-rmse:614.61829\n","[1088]\tvalidation_0-rmse:614.58086\n","[1089]\tvalidation_0-rmse:614.53495\n","[1090]\tvalidation_0-rmse:614.46725\n","[1091]\tvalidation_0-rmse:614.36392\n","[1092]\tvalidation_0-rmse:614.24776\n","[1093]\tvalidation_0-rmse:614.19583\n","[1094]\tvalidation_0-rmse:613.99970\n","[1095]\tvalidation_0-rmse:613.79411\n","[1096]\tvalidation_0-rmse:613.64342\n","[1097]\tvalidation_0-rmse:613.54952\n","[1098]\tvalidation_0-rmse:613.49191\n","[1099]\tvalidation_0-rmse:613.36293\n","[1100]\tvalidation_0-rmse:613.30428\n","[1101]\tvalidation_0-rmse:613.24467\n","[1102]\tvalidation_0-rmse:613.19774\n","[1103]\tvalidation_0-rmse:613.10948\n","[1104]\tvalidation_0-rmse:613.04980\n","[1105]\tvalidation_0-rmse:613.01536\n","[1106]\tvalidation_0-rmse:612.93406\n","[1107]\tvalidation_0-rmse:612.79757\n","[1108]\tvalidation_0-rmse:612.71716\n","[1109]\tvalidation_0-rmse:612.62907\n","[1110]\tvalidation_0-rmse:612.55187\n","[1111]\tvalidation_0-rmse:612.48501\n","[1112]\tvalidation_0-rmse:612.40122\n","[1113]\tvalidation_0-rmse:612.27886\n","[1114]\tvalidation_0-rmse:612.19447\n","[1115]\tvalidation_0-rmse:612.11815\n","[1116]\tvalidation_0-rmse:611.82301\n","[1117]\tvalidation_0-rmse:611.77158\n","[1118]\tvalidation_0-rmse:611.56376\n","[1119]\tvalidation_0-rmse:611.31548\n","[1120]\tvalidation_0-rmse:611.21337\n","[1121]\tvalidation_0-rmse:610.97708\n","[1122]\tvalidation_0-rmse:610.87739\n","[1123]\tvalidation_0-rmse:610.75110\n","[1124]\tvalidation_0-rmse:610.52843\n","[1125]\tvalidation_0-rmse:610.42855\n","[1126]\tvalidation_0-rmse:610.12063\n","[1127]\tvalidation_0-rmse:610.07463\n","[1128]\tvalidation_0-rmse:609.89008\n","[1129]\tvalidation_0-rmse:609.76723\n","[1130]\tvalidation_0-rmse:609.68137\n","[1131]\tvalidation_0-rmse:609.61603\n","[1132]\tvalidation_0-rmse:609.55507\n","[1133]\tvalidation_0-rmse:609.50647\n","[1134]\tvalidation_0-rmse:609.48548\n","[1135]\tvalidation_0-rmse:609.32585\n","[1136]\tvalidation_0-rmse:609.17198\n","[1137]\tvalidation_0-rmse:609.09726\n","[1138]\tvalidation_0-rmse:609.00102\n","[1139]\tvalidation_0-rmse:608.93104\n","[1140]\tvalidation_0-rmse:608.80338\n","[1141]\tvalidation_0-rmse:608.71444\n","[1142]\tvalidation_0-rmse:608.66673\n","[1143]\tvalidation_0-rmse:608.60585\n","[1144]\tvalidation_0-rmse:608.54490\n","[1145]\tvalidation_0-rmse:608.49675\n","[1146]\tvalidation_0-rmse:608.44129\n","[1147]\tvalidation_0-rmse:608.26383\n","[1148]\tvalidation_0-rmse:608.11902\n","[1149]\tvalidation_0-rmse:608.04862\n","[1150]\tvalidation_0-rmse:607.97865\n","[1151]\tvalidation_0-rmse:607.84734\n","[1152]\tvalidation_0-rmse:607.78562\n","[1153]\tvalidation_0-rmse:607.70967\n","[1154]\tvalidation_0-rmse:607.68876\n","[1155]\tvalidation_0-rmse:607.58567\n","[1156]\tvalidation_0-rmse:607.33219\n","[1157]\tvalidation_0-rmse:607.30000\n","[1158]\tvalidation_0-rmse:607.23258\n","[1159]\tvalidation_0-rmse:607.12407\n","[1160]\tvalidation_0-rmse:607.07172\n","[1161]\tvalidation_0-rmse:607.03797\n","[1162]\tvalidation_0-rmse:606.98080\n","[1163]\tvalidation_0-rmse:606.93307\n","[1164]\tvalidation_0-rmse:606.71811\n","[1165]\tvalidation_0-rmse:606.62324\n","[1166]\tvalidation_0-rmse:606.56225\n","[1167]\tvalidation_0-rmse:606.46180\n","[1168]\tvalidation_0-rmse:606.39747\n","[1169]\tvalidation_0-rmse:606.28440\n","[1170]\tvalidation_0-rmse:606.20501\n","[1171]\tvalidation_0-rmse:606.13408\n","[1172]\tvalidation_0-rmse:606.00413\n","[1173]\tvalidation_0-rmse:605.94451\n","[1174]\tvalidation_0-rmse:605.87276\n","[1175]\tvalidation_0-rmse:605.84489\n","[1176]\tvalidation_0-rmse:605.79470\n","[1177]\tvalidation_0-rmse:605.71064\n","[1178]\tvalidation_0-rmse:605.63762\n","[1179]\tvalidation_0-rmse:605.45090\n","[1180]\tvalidation_0-rmse:605.41630\n","[1181]\tvalidation_0-rmse:605.34928\n","[1182]\tvalidation_0-rmse:605.12355\n","[1183]\tvalidation_0-rmse:605.05954\n","[1184]\tvalidation_0-rmse:604.98388\n","[1185]\tvalidation_0-rmse:604.92813\n","[1186]\tvalidation_0-rmse:604.85132\n","[1187]\tvalidation_0-rmse:604.67218\n","[1188]\tvalidation_0-rmse:604.60057\n","[1189]\tvalidation_0-rmse:604.45464\n","[1190]\tvalidation_0-rmse:604.40212\n","[1191]\tvalidation_0-rmse:604.29389\n","[1192]\tvalidation_0-rmse:604.12931\n","[1193]\tvalidation_0-rmse:604.04574\n","[1194]\tvalidation_0-rmse:603.92784\n","[1195]\tvalidation_0-rmse:603.66022\n","[1196]\tvalidation_0-rmse:603.62434\n","[1197]\tvalidation_0-rmse:603.57217\n","[1198]\tvalidation_0-rmse:603.48671\n","[1199]\tvalidation_0-rmse:603.41733\n","[1200]\tvalidation_0-rmse:603.32187\n","[1201]\tvalidation_0-rmse:603.21259\n","[1202]\tvalidation_0-rmse:603.17582\n","[1203]\tvalidation_0-rmse:603.12414\n","[1204]\tvalidation_0-rmse:603.03612\n","[1205]\tvalidation_0-rmse:602.91113\n","[1206]\tvalidation_0-rmse:602.84269\n","[1207]\tvalidation_0-rmse:602.72995\n","[1208]\tvalidation_0-rmse:602.29107\n","[1209]\tvalidation_0-rmse:602.18977\n","[1210]\tvalidation_0-rmse:602.09867\n","[1211]\tvalidation_0-rmse:602.00191\n","[1212]\tvalidation_0-rmse:601.92699\n","[1213]\tvalidation_0-rmse:601.87388\n","[1214]\tvalidation_0-rmse:601.75529\n","[1215]\tvalidation_0-rmse:601.68102\n","[1216]\tvalidation_0-rmse:601.61359\n","[1217]\tvalidation_0-rmse:601.47898\n","[1218]\tvalidation_0-rmse:601.37199\n","[1219]\tvalidation_0-rmse:601.22598\n","[1220]\tvalidation_0-rmse:601.06486\n","[1221]\tvalidation_0-rmse:601.00285\n","[1222]\tvalidation_0-rmse:600.90647\n","[1223]\tvalidation_0-rmse:600.86568\n","[1224]\tvalidation_0-rmse:600.69041\n","[1225]\tvalidation_0-rmse:600.58519\n","[1226]\tvalidation_0-rmse:600.54267\n","[1227]\tvalidation_0-rmse:600.48752\n","[1228]\tvalidation_0-rmse:600.39269\n","[1229]\tvalidation_0-rmse:600.34261\n","[1230]\tvalidation_0-rmse:600.29164\n","[1231]\tvalidation_0-rmse:600.19199\n","[1232]\tvalidation_0-rmse:600.05040\n","[1233]\tvalidation_0-rmse:600.00596\n","[1234]\tvalidation_0-rmse:599.91714\n","[1235]\tvalidation_0-rmse:599.81955\n","[1236]\tvalidation_0-rmse:599.75288\n","[1237]\tvalidation_0-rmse:599.57667\n","[1238]\tvalidation_0-rmse:599.52321\n","[1239]\tvalidation_0-rmse:599.49123\n","[1240]\tvalidation_0-rmse:599.34663\n","[1241]\tvalidation_0-rmse:599.23870\n","[1242]\tvalidation_0-rmse:599.20563\n","[1243]\tvalidation_0-rmse:599.17232\n","[1244]\tvalidation_0-rmse:599.02270\n","[1245]\tvalidation_0-rmse:598.85815\n","[1246]\tvalidation_0-rmse:598.78660\n","[1247]\tvalidation_0-rmse:598.72557\n","[1248]\tvalidation_0-rmse:598.66238\n","[1249]\tvalidation_0-rmse:598.59974\n","[1250]\tvalidation_0-rmse:598.55130\n","[1251]\tvalidation_0-rmse:598.49349\n","[1252]\tvalidation_0-rmse:598.37325\n","[1253]\tvalidation_0-rmse:598.31069\n","[1254]\tvalidation_0-rmse:598.24169\n","[1255]\tvalidation_0-rmse:598.18952\n","[1256]\tvalidation_0-rmse:598.12856\n","[1257]\tvalidation_0-rmse:597.82709\n","[1258]\tvalidation_0-rmse:597.76354\n","[1259]\tvalidation_0-rmse:597.69546\n","[1260]\tvalidation_0-rmse:597.63650\n","[1261]\tvalidation_0-rmse:597.55866\n","[1262]\tvalidation_0-rmse:597.45194\n","[1263]\tvalidation_0-rmse:597.29281\n","[1264]\tvalidation_0-rmse:597.21856\n","[1265]\tvalidation_0-rmse:597.14534\n","[1266]\tvalidation_0-rmse:596.93741\n","[1267]\tvalidation_0-rmse:596.72109\n","[1268]\tvalidation_0-rmse:596.63433\n","[1269]\tvalidation_0-rmse:596.54428\n","[1270]\tvalidation_0-rmse:596.47711\n","[1271]\tvalidation_0-rmse:596.35909\n","[1272]\tvalidation_0-rmse:596.23285\n","[1273]\tvalidation_0-rmse:596.18579\n","[1274]\tvalidation_0-rmse:596.10463\n","[1275]\tvalidation_0-rmse:595.98673\n","[1276]\tvalidation_0-rmse:595.87115\n","[1277]\tvalidation_0-rmse:595.82751\n","[1278]\tvalidation_0-rmse:595.71407\n","[1279]\tvalidation_0-rmse:595.53803\n","[1280]\tvalidation_0-rmse:595.44378\n","[1281]\tvalidation_0-rmse:595.30704\n","[1282]\tvalidation_0-rmse:595.25037\n","[1283]\tvalidation_0-rmse:595.18885\n","[1284]\tvalidation_0-rmse:595.13340\n","[1285]\tvalidation_0-rmse:595.03278\n","[1286]\tvalidation_0-rmse:594.98420\n","[1287]\tvalidation_0-rmse:594.89268\n","[1288]\tvalidation_0-rmse:594.77774\n","[1289]\tvalidation_0-rmse:594.70784\n","[1290]\tvalidation_0-rmse:594.65506\n","[1291]\tvalidation_0-rmse:594.55632\n","[1292]\tvalidation_0-rmse:594.47328\n","[1293]\tvalidation_0-rmse:594.41062\n","[1294]\tvalidation_0-rmse:594.34120\n","[1295]\tvalidation_0-rmse:594.25396\n","[1296]\tvalidation_0-rmse:594.17511\n","[1297]\tvalidation_0-rmse:594.10542\n","[1298]\tvalidation_0-rmse:594.06123\n","[1299]\tvalidation_0-rmse:593.94052\n","[1300]\tvalidation_0-rmse:593.82741\n","[1301]\tvalidation_0-rmse:593.71903\n","[1302]\tvalidation_0-rmse:593.59177\n","[1303]\tvalidation_0-rmse:593.46850\n","[1304]\tvalidation_0-rmse:593.33015\n","[1305]\tvalidation_0-rmse:593.20765\n","[1306]\tvalidation_0-rmse:593.15596\n","[1307]\tvalidation_0-rmse:593.10613\n","[1308]\tvalidation_0-rmse:592.98283\n","[1309]\tvalidation_0-rmse:592.89077\n","[1310]\tvalidation_0-rmse:592.79092\n","[1311]\tvalidation_0-rmse:592.74516\n","[1312]\tvalidation_0-rmse:592.63529\n","[1313]\tvalidation_0-rmse:592.57004\n","[1314]\tvalidation_0-rmse:592.52611\n","[1315]\tvalidation_0-rmse:592.47766\n","[1316]\tvalidation_0-rmse:592.34800\n","[1317]\tvalidation_0-rmse:592.25498\n","[1318]\tvalidation_0-rmse:592.22521\n","[1319]\tvalidation_0-rmse:592.13988\n","[1320]\tvalidation_0-rmse:592.09129\n","[1321]\tvalidation_0-rmse:591.92371\n","[1322]\tvalidation_0-rmse:591.88127\n","[1323]\tvalidation_0-rmse:591.78335\n","[1324]\tvalidation_0-rmse:591.74785\n","[1325]\tvalidation_0-rmse:591.71019\n","[1326]\tvalidation_0-rmse:591.68047\n","[1327]\tvalidation_0-rmse:591.64254\n","[1328]\tvalidation_0-rmse:591.35051\n","[1329]\tvalidation_0-rmse:591.19580\n","[1330]\tvalidation_0-rmse:591.13338\n","[1331]\tvalidation_0-rmse:591.08185\n","[1332]\tvalidation_0-rmse:591.01158\n","[1333]\tvalidation_0-rmse:590.93450\n","[1334]\tvalidation_0-rmse:590.80098\n","[1335]\tvalidation_0-rmse:590.68539\n","[1336]\tvalidation_0-rmse:590.59993\n","[1337]\tvalidation_0-rmse:590.50309\n","[1338]\tvalidation_0-rmse:590.43183\n","[1339]\tvalidation_0-rmse:590.31631\n","[1340]\tvalidation_0-rmse:590.14052\n","[1341]\tvalidation_0-rmse:590.03935\n","[1342]\tvalidation_0-rmse:589.97401\n","[1343]\tvalidation_0-rmse:589.90919\n","[1344]\tvalidation_0-rmse:589.79169\n","[1345]\tvalidation_0-rmse:589.75097\n","[1346]\tvalidation_0-rmse:589.68476\n","[1347]\tvalidation_0-rmse:589.59557\n","[1348]\tvalidation_0-rmse:589.56332\n","[1349]\tvalidation_0-rmse:589.52391\n","[1350]\tvalidation_0-rmse:589.48181\n","[1351]\tvalidation_0-rmse:589.45042\n","[1352]\tvalidation_0-rmse:589.38269\n","[1353]\tvalidation_0-rmse:589.35315\n","[1354]\tvalidation_0-rmse:589.27469\n","[1355]\tvalidation_0-rmse:589.21390\n","[1356]\tvalidation_0-rmse:589.17017\n","[1357]\tvalidation_0-rmse:589.03259\n","[1358]\tvalidation_0-rmse:589.00411\n","[1359]\tvalidation_0-rmse:588.94468\n","[1360]\tvalidation_0-rmse:588.87386\n","[1361]\tvalidation_0-rmse:588.84553\n","[1362]\tvalidation_0-rmse:588.79727\n","[1363]\tvalidation_0-rmse:588.72362\n","[1364]\tvalidation_0-rmse:588.62229\n","[1365]\tvalidation_0-rmse:588.49703\n","[1366]\tvalidation_0-rmse:588.38218\n","[1367]\tvalidation_0-rmse:588.31445\n","[1368]\tvalidation_0-rmse:588.26782\n","[1369]\tvalidation_0-rmse:588.24163\n","[1370]\tvalidation_0-rmse:588.19705\n","[1371]\tvalidation_0-rmse:588.11753\n","[1372]\tvalidation_0-rmse:588.04638\n","[1373]\tvalidation_0-rmse:587.90543\n","[1374]\tvalidation_0-rmse:587.83097\n","[1375]\tvalidation_0-rmse:587.67292\n","[1376]\tvalidation_0-rmse:587.56820\n","[1377]\tvalidation_0-rmse:587.48982\n","[1378]\tvalidation_0-rmse:587.42839\n","[1379]\tvalidation_0-rmse:587.35650\n","[1380]\tvalidation_0-rmse:587.27726\n","[1381]\tvalidation_0-rmse:587.18983\n","[1382]\tvalidation_0-rmse:587.07505\n","[1383]\tvalidation_0-rmse:587.02921\n","[1384]\tvalidation_0-rmse:586.98737\n","[1385]\tvalidation_0-rmse:586.96049\n","[1386]\tvalidation_0-rmse:586.85792\n","[1387]\tvalidation_0-rmse:586.78639\n","[1388]\tvalidation_0-rmse:586.74976\n","[1389]\tvalidation_0-rmse:586.67641\n","[1390]\tvalidation_0-rmse:586.61773\n","[1391]\tvalidation_0-rmse:586.54276\n","[1392]\tvalidation_0-rmse:586.49911\n","[1393]\tvalidation_0-rmse:586.43431\n","[1394]\tvalidation_0-rmse:586.35998\n","[1395]\tvalidation_0-rmse:586.32605\n","[1396]\tvalidation_0-rmse:586.29854\n","[1397]\tvalidation_0-rmse:586.25927\n","[1398]\tvalidation_0-rmse:586.16652\n","[1399]\tvalidation_0-rmse:586.12827\n","[1400]\tvalidation_0-rmse:586.07217\n","[1401]\tvalidation_0-rmse:585.90729\n","[1402]\tvalidation_0-rmse:585.86580\n","[1403]\tvalidation_0-rmse:585.80352\n","[1404]\tvalidation_0-rmse:585.75443\n","[1405]\tvalidation_0-rmse:585.69145\n","[1406]\tvalidation_0-rmse:585.62234\n","[1407]\tvalidation_0-rmse:585.58166\n","[1408]\tvalidation_0-rmse:585.52387\n","[1409]\tvalidation_0-rmse:585.49081\n","[1410]\tvalidation_0-rmse:585.43979\n","[1411]\tvalidation_0-rmse:585.35753\n","[1412]\tvalidation_0-rmse:585.30229\n","[1413]\tvalidation_0-rmse:585.25840\n","[1414]\tvalidation_0-rmse:585.20925\n","[1415]\tvalidation_0-rmse:585.04061\n","[1416]\tvalidation_0-rmse:584.97829\n","[1417]\tvalidation_0-rmse:584.83111\n","[1418]\tvalidation_0-rmse:584.72830\n","[1419]\tvalidation_0-rmse:584.69335\n","[1420]\tvalidation_0-rmse:584.61100\n","[1421]\tvalidation_0-rmse:584.33425\n","[1422]\tvalidation_0-rmse:584.31021\n","[1423]\tvalidation_0-rmse:584.27456\n","[1424]\tvalidation_0-rmse:584.16490\n","[1425]\tvalidation_0-rmse:584.00670\n","[1426]\tvalidation_0-rmse:583.94374\n","[1427]\tvalidation_0-rmse:583.88041\n","[1428]\tvalidation_0-rmse:583.81807\n","[1429]\tvalidation_0-rmse:583.77752\n","[1430]\tvalidation_0-rmse:583.72338\n","[1431]\tvalidation_0-rmse:583.70136\n","[1432]\tvalidation_0-rmse:583.63699\n","[1433]\tvalidation_0-rmse:583.58174\n","[1434]\tvalidation_0-rmse:583.52425\n","[1435]\tvalidation_0-rmse:583.47155\n","[1436]\tvalidation_0-rmse:583.40736\n","[1437]\tvalidation_0-rmse:583.29659\n","[1438]\tvalidation_0-rmse:583.22063\n","[1439]\tvalidation_0-rmse:583.11637\n","[1440]\tvalidation_0-rmse:583.04250\n","[1441]\tvalidation_0-rmse:582.99733\n","[1442]\tvalidation_0-rmse:582.88862\n","[1443]\tvalidation_0-rmse:582.86853\n","[1444]\tvalidation_0-rmse:582.80675\n","[1445]\tvalidation_0-rmse:582.74443\n","[1446]\tvalidation_0-rmse:582.62975\n","[1447]\tvalidation_0-rmse:582.51867\n","[1448]\tvalidation_0-rmse:582.46449\n","[1449]\tvalidation_0-rmse:582.41578\n","[1450]\tvalidation_0-rmse:582.36207\n","[1451]\tvalidation_0-rmse:582.30093\n","[1452]\tvalidation_0-rmse:582.13029\n","[1453]\tvalidation_0-rmse:582.06379\n","[1454]\tvalidation_0-rmse:581.97157\n","[1455]\tvalidation_0-rmse:581.92159\n","[1456]\tvalidation_0-rmse:581.78523\n","[1457]\tvalidation_0-rmse:581.69000\n","[1458]\tvalidation_0-rmse:581.63698\n","[1459]\tvalidation_0-rmse:581.58415\n","[1460]\tvalidation_0-rmse:581.53319\n","[1461]\tvalidation_0-rmse:581.47159\n","[1462]\tvalidation_0-rmse:581.34722\n","[1463]\tvalidation_0-rmse:581.18178\n","[1464]\tvalidation_0-rmse:580.97155\n","[1465]\tvalidation_0-rmse:580.84544\n","[1466]\tvalidation_0-rmse:580.79760\n","[1467]\tvalidation_0-rmse:580.73862\n","[1468]\tvalidation_0-rmse:580.70399\n","[1469]\tvalidation_0-rmse:580.56488\n","[1470]\tvalidation_0-rmse:580.49786\n","[1471]\tvalidation_0-rmse:580.44836\n","[1472]\tvalidation_0-rmse:580.36376\n","[1473]\tvalidation_0-rmse:580.22703\n","[1474]\tvalidation_0-rmse:580.16823\n","[1475]\tvalidation_0-rmse:580.11774\n","[1476]\tvalidation_0-rmse:580.05850\n","[1477]\tvalidation_0-rmse:580.02512\n","[1478]\tvalidation_0-rmse:579.98720\n","[1479]\tvalidation_0-rmse:579.88505\n","[1480]\tvalidation_0-rmse:579.80891\n","[1481]\tvalidation_0-rmse:579.76628\n","[1482]\tvalidation_0-rmse:579.63826\n","[1483]\tvalidation_0-rmse:579.59408\n","[1484]\tvalidation_0-rmse:579.51542\n","[1485]\tvalidation_0-rmse:579.39645\n","[1486]\tvalidation_0-rmse:579.31020\n","[1487]\tvalidation_0-rmse:579.17686\n","[1488]\tvalidation_0-rmse:579.11536\n","[1489]\tvalidation_0-rmse:579.04181\n","[1490]\tvalidation_0-rmse:578.97342\n","[1491]\tvalidation_0-rmse:578.92060\n","[1492]\tvalidation_0-rmse:578.79890\n","[1493]\tvalidation_0-rmse:578.71606\n","[1494]\tvalidation_0-rmse:578.66308\n","[1495]\tvalidation_0-rmse:578.63446\n","[1496]\tvalidation_0-rmse:578.44016\n","[1497]\tvalidation_0-rmse:578.39260\n","[1498]\tvalidation_0-rmse:578.36645\n","[1499]\tvalidation_0-rmse:578.20152\n"]},{"output_type":"execute_result","data":{"text/plain":["XGBRegressor(base_score=None, booster=None, callbacks=None,\n","             colsample_bylevel=None, colsample_bynode=None,\n","             colsample_bytree=None, device=None, early_stopping_rounds=None,\n","             enable_categorical=False, eval_metric='rmse', feature_types=None,\n","             gamma=None, grow_policy=None, importance_type=None,\n","             interaction_constraints=None, learning_rate=None, max_bin=None,\n","             max_cat_threshold=None, max_cat_to_onehot=None,\n","             max_delta_step=None, max_depth=5, max_leaves=None,\n","             min_child_weight=None, missing=nan, monotone_constraints=None,\n","             multi_strategy=None, n_estimators=1500, n_jobs=-1,\n","             num_parallel_tree=None, predictor='gpu_predictor', ...)"],"text/html":["<style>#sk-container-id-3 {color: black;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n","             colsample_bylevel=None, colsample_bynode=None,\n","             colsample_bytree=None, device=None, early_stopping_rounds=None,\n","             enable_categorical=False, eval_metric=&#x27;rmse&#x27;, feature_types=None,\n","             gamma=None, grow_policy=None, importance_type=None,\n","             interaction_constraints=None, learning_rate=None, max_bin=None,\n","             max_cat_threshold=None, max_cat_to_onehot=None,\n","             max_delta_step=None, max_depth=5, max_leaves=None,\n","             min_child_weight=None, missing=nan, monotone_constraints=None,\n","             multi_strategy=None, n_estimators=1500, n_jobs=-1,\n","             num_parallel_tree=None, predictor=&#x27;gpu_predictor&#x27;, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBRegressor</label><div class=\"sk-toggleable__content\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n","             colsample_bylevel=None, colsample_bynode=None,\n","             colsample_bytree=None, device=None, early_stopping_rounds=None,\n","             enable_categorical=False, eval_metric=&#x27;rmse&#x27;, feature_types=None,\n","             gamma=None, grow_policy=None, importance_type=None,\n","             interaction_constraints=None, learning_rate=None, max_bin=None,\n","             max_cat_threshold=None, max_cat_to_onehot=None,\n","             max_delta_step=None, max_depth=5, max_leaves=None,\n","             min_child_weight=None, missing=nan, monotone_constraints=None,\n","             multi_strategy=None, n_estimators=1500, n_jobs=-1,\n","             num_parallel_tree=None, predictor=&#x27;gpu_predictor&#x27;, ...)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","from sktime.performance_metrics.forecasting import MeanSquaredPercentageError\n","\n","cols_when_model_builds = model.get_booster().feature_names\n","X_test = X_test[cols_when_model_builds]\n","\n","\n","preds = model.predict(X_test)\n","mse = mean_squared_error(y_test, preds)\n","\n","print(f\"MSE: {mse: .2f}\")\n","print(f\"RMSE: {(mse**(1/2.0)): .2f}\")\n","print(preds)\n","print(y_test)\n","X_test\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"pZemS3s4onzi","executionInfo":{"status":"ok","timestamp":1701118377354,"user_tz":300,"elapsed":2776,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"61221f2f-f237-4c49-f743-e140a6a7ce85"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/xgboost/core.py:160: UserWarning: [20:52:54] WARNING: /workspace/src/common/error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.\n","\n","    E.g. tree_method = \"hist\", device = \"cuda\"\n","\n","  warnings.warn(smsg, UserWarning)\n"]},{"output_type":"stream","name":"stdout","text":["MSE:  1226190.89\n","RMSE:  1107.34\n","[5104.4844 5626.2495 5073.2705 ... 6266.3286 5743.891   632.6245]\n","0          5263\n","1          5020\n","2          4782\n","3          5011\n","4          6102\n","           ... \n","1016474    9102\n","1016475       0\n","1016476    6468\n","1016477    7558\n","1016478       0\n","Name: Sales, Length: 236380, dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["        Open  Promo  SchoolHoliday  CompetitionDistance  \\\n","0          1      1              1               1270.0   \n","1          1      1              1               1270.0   \n","2          1      1              1               1270.0   \n","3          1      1              1               1270.0   \n","4          1      1              1               1270.0   \n","...      ...    ...            ...                  ...   \n","236375     1      1              1               5350.0   \n","236376     0      0              1               5350.0   \n","236377     1      0              1               5350.0   \n","236378     1      0              1               5350.0   \n","236379     0      0              1               5350.0   \n","\n","        CompetitionOpenSinceMonth  CompetitionOpenSinceYear    avg_sales  \\\n","0                        9.000000               2008.000000  4426.571429   \n","1                        9.000000               2008.000000  4426.571429   \n","2                        9.000000               2008.000000  4426.571429   \n","3                        9.000000               2008.000000  4426.571429   \n","4                        9.000000               2008.000000  4426.571429   \n","...                           ...                       ...          ...   \n","236375                   7.224704               2008.668857  5660.714286   \n","236376                   7.224704               2008.668857  4306.875000   \n","236377                   7.224704               2008.668857  4306.875000   \n","236378                   7.224704               2008.668857  4306.875000   \n","236379                   7.224704               2008.668857  4306.875000   \n","\n","        avg_customers  DayOfWeek_1  DayOfWeek_2  ...  year_2014  StoreType_a  \\\n","0          494.857143            0            0  ...          0            0   \n","1          494.857143            0            0  ...          0            0   \n","2          494.857143            0            0  ...          0            0   \n","3          494.857143            0            1  ...          0            0   \n","4          494.857143            1            0  ...          0            0   \n","...               ...          ...          ...  ...        ...          ...   \n","236375     383.428571            1            0  ...          0            0   \n","236376     320.500000            0            0  ...          0            0   \n","236377     320.500000            0            0  ...          0            0   \n","236378     320.500000            0            0  ...          0            0   \n","236379     320.500000            0            0  ...          0            0   \n","\n","        StoreType_b  StoreType_c  StoreType_d  Assortment_a  Assortment_b  \\\n","0                 0            1            0             1             0   \n","1                 0            1            0             1             0   \n","2                 0            1            0             1             0   \n","3                 0            1            0             1             0   \n","4                 0            1            0             1             0   \n","...             ...          ...          ...           ...           ...   \n","236375            0            0            1             0             0   \n","236376            0            0            1             0             0   \n","236377            0            0            1             0             0   \n","236378            0            0            1             0             0   \n","236379            0            0            1             0             0   \n","\n","        Assortment_c  year_2015  store_encoded  \n","0                  0          1    4006.230137  \n","1                  0          1    4006.230137  \n","2                  0          1    4006.230137  \n","3                  0          1    4006.230137  \n","4                  0          1    4006.230137  \n","...              ...        ...            ...  \n","236375             1          1    5041.343836  \n","236376             1          1    5041.343836  \n","236377             1          1    5041.343836  \n","236378             1          1    5041.343836  \n","236379             1          1    5041.343836  \n","\n","[236380 rows x 78 columns]"],"text/html":["\n","  <div id=\"df-643e0e13-e23c-4603-8d76-00f1f92bb2be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>Promo</th>\n","      <th>SchoolHoliday</th>\n","      <th>CompetitionDistance</th>\n","      <th>CompetitionOpenSinceMonth</th>\n","      <th>CompetitionOpenSinceYear</th>\n","      <th>avg_sales</th>\n","      <th>avg_customers</th>\n","      <th>DayOfWeek_1</th>\n","      <th>DayOfWeek_2</th>\n","      <th>...</th>\n","      <th>year_2014</th>\n","      <th>StoreType_a</th>\n","      <th>StoreType_b</th>\n","      <th>StoreType_c</th>\n","      <th>StoreType_d</th>\n","      <th>Assortment_a</th>\n","      <th>Assortment_b</th>\n","      <th>Assortment_c</th>\n","      <th>year_2015</th>\n","      <th>store_encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1270.0</td>\n","      <td>9.000000</td>\n","      <td>2008.000000</td>\n","      <td>4426.571429</td>\n","      <td>494.857143</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4006.230137</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>236375</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>5660.714286</td>\n","      <td>383.428571</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236376</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236377</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236378</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5041.343836</td>\n","    </tr>\n","    <tr>\n","      <th>236379</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>5350.0</td>\n","      <td>7.224704</td>\n","      <td>2008.668857</td>\n","      <td>4306.875000</td>\n","      <td>320.500000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5041.343836</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>236380 rows × 78 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-643e0e13-e23c-4603-8d76-00f1f92bb2be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-643e0e13-e23c-4603-8d76-00f1f92bb2be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-643e0e13-e23c-4603-8d76-00f1f92bb2be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c77308e-048b-4945-8d46-4a6b4afa96da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c77308e-048b-4945-8d46-4a6b4afa96da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c77308e-048b-4945-8d46-4a6b4afa96da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["\n","mspe = MeanSquaredPercentageError(square_root=True)\n","print(\"Root Mean Squared percent error\")\n","print(mspe.evaluate(y_test, preds))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Yn2fz41RYjM","executionInfo":{"status":"ok","timestamp":1701118377355,"user_tz":300,"elapsed":8,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"6cefd3e6-976a-4d24-9ee1-f509581c4851"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared percent error\n","9.234931598858386e+17\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sktime/performance_metrics/forecasting/_classes.py:455: UserWarning: y_pred and y_true do not have the same row index. This may indicate incorrect objects passed to the metric. Indices of y_true will be used for y_pred.\n","  warn(\n","/usr/local/lib/python3.10/dist-packages/sktime/performance_metrics/forecasting/_classes.py:467: UserWarning: y_pred and y_true do not have the same column index. This may indicate incorrect objects passed to the metric. Indices of y_true will be used for y_pred.\n","  warn(\n"]}]},{"cell_type":"markdown","source":["### That's it, yeah? Or not?\n","\n","What are we missing here?\n","* dates?\n","* thoughts about the target we're predicting?\n","* what else might cause better-than-expected or worse-than-expected results?\n","MSE:  213972.10\n","RMSE:  462.57\n"],"metadata":{"id":"uIG4tOQCoxkU"}},{"cell_type":"code","source":["merged_df[merged_df.Sales == 0].Sales.count()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZuIkbSjfxcwZ","executionInfo":{"status":"ok","timestamp":1701118377571,"user_tz":300,"elapsed":221,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}},"outputId":"85838c92-323c-4cce-891e-d8b8d8d9d842"},"execution_count":106,"outputs":[{"output_type":"execute_result","data":{"text/plain":["172871"]},"metadata":{},"execution_count":106}]},{"cell_type":"markdown","source":["### To do:\n","* your own modeling\n","* only predict future values (fix the train/test split)\n","* report MeanSquaredPercentageError (from sktime.performance_metrics.forecasting, square_root=True) for your model.\n","* train with/without zero sale days and report with/without and report on results. explain the output and what you see with more than just one sentence! include rmse and rmspe\n","* fix the encoding - don't use ordinal\n","* see if you can beat the above score\n","\n","You can use the same model type if you want, but you can't use the same features (in particular, if you use ordinal features and can't come up with a really, really, really convincing argument why that's 'correct' even after class discussion, expect a zero :D)."],"metadata":{"id":"Je4nkPX1zNvm"}},{"cell_type":"code","source":[],"metadata":{"id":"OZzqaDE8aPhI","executionInfo":{"status":"ok","timestamp":1701118377571,"user_tz":300,"elapsed":3,"user":{"displayName":"Benjamin Katz","userId":"05452657003282238466"}}},"execution_count":106,"outputs":[]}]}